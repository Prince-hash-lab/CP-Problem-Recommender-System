(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VA. Jumping Ball\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aIn a new version of the famous Pinball game, one of the most important parts of the game field is a sequence of n bumpers. The bumpers are numbered with integers from 1 to n from left to right. There are two types of bumpers. They are denoted by the characters '<' and '>'. When the ball hits the bumper at position i it goes one position to the right (to the position i\u2009+\u20091) if the type of this bumper is '>', or one position to the left (to i\u2009-\u20091) if the type of the bumper at position i is '<'. If there is no such position, in other words if i\u2009-\u20091\u2009<\u20091 or i\u2009+\u20091\u2009>\u2009n, the ball falls from the game field.\u000aDepending on the ball's starting position, the ball may eventually fall from the game field or it may stay there forever. You are given a string representing the bumpers' types. Calculate the number of positions such that the ball will eventually fall from the game field if it starts at that position.\u000aInput\u000aThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000) \u2014 the length of the sequence of bumpers. The second line contains the string, which consists of the characters '<' and '>'. The character at the i-th position of this string corresponds to the type of the i-th bumper.\u000aOutput\u000aPrint one integer \u2014 the number of positions in the sequence such that the ball will eventually fall from the game field if it starts at that position.\u000aExamples\u000ainput\u000a4\u000a<<><\u000aoutput\u000a2\u000ainput\u000a5\u000a>>>>>\u000aoutput\u000a5\u000ainput\u000a4\u000a>><<\u000aoutput\u000a0\u000aNote\u000aIn the first sample, the ball will fall from the field if starts at position 1 or position 2.\u000aIn the second sample, any starting position will result in the ball falling from the field.
p3
sS'problemStatement'
p4
VA. Jumping Ball\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aIn a new version of the famous Pinball game, one of the most important parts of the game field is a sequence of n bumpers. The bumpers are numbered with integers from 1 to n from left to right. There are two types of bumpers. They are denoted by the characters '<' and '>'. When the ball hits the bumper at position i it goes one position to the right (to the position i\u2009+\u20091) if the type of this bumper is '>', or one position to the left (to i\u2009-\u20091) if the type of the bumper at position i is '<'. If there is no such position, in other words if i\u2009-\u20091\u2009<\u20091 or i\u2009+\u20091\u2009>\u2009n, the ball falls from the game field.\u000aDepending on the ball's starting position, the ball may eventually fall from the game field or it may stay there forever. You are given a string representing the bumpers' types. Calculate the number of positions such that the ball will eventually fall from the game field if it starts at that position.\u000aInput\u000aThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000) \u2014 the length of the sequence of bumpers. The second line contains the string, which consists of the characters '<' and '>'. The character at the i-th position of this string corresponds to the type of the i-th bumper.\u000aOutput\u000aPrint one integer \u2014 the number of positions in the sequence such that the ball will eventually fall from the game field if it starts at that position.\u000aExamples\u000ainput\u000a4\u000a<<><\u000aoutput\u000a2\u000ainput\u000a5\u000a>>>>>\u000aoutput\u000a5\u000ainput\u000a4\u000a>><<\u000aoutput\u000a0\u000aNote\u000aIn the first sample, the ball will fall from the field if starts at position 1 or position 2.\u000aIn the second sample, any starting position will result in the ball falling from the field.
p5
sS'name'
p6
VA. Jumping Ball
p7
sS'tags'
p8
Vimplementation 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/725/A
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2 seconds
p15
sS'problemId'
p16
V725/A
p17
sS'id'
p18
c__builtin__
id
p19
sb.