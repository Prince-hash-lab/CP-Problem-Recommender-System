(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VB. Text Document Analysis\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aModern text editors usually show some information regarding the document being edited. For example, the number of words, the number of pages, or the number of characters.\u000aIn this problem you should implement the similar functionality.\u000aYou are given a string which only consists of:\u000auppercase and lowercase English letters,\u000aunderscore symbols (they are used as separators),\u000aparentheses (both opening and closing).\u000aIt is guaranteed that each opening parenthesis has a succeeding closing parenthesis. Similarly, each closing parentheses has a preceding opening parentheses matching it. For each pair of matching parentheses there are no other parenthesis between them. In other words, each parenthesis in the string belongs to a matching "opening-closing" pair, and such pairs can't be nested.\u000aFor example, the following string is valid: "_Hello_Vasya(and_Petya)__bye_(and_OK)".\u000aWord is a maximal sequence of consecutive letters, i.e. such sequence that the first character to the left and the first character to the right of it is an underscore, a parenthesis, or it just does not exist. For example, the string above consists of seven words: "Hello", "Vasya", "and", "Petya", "bye", "and" and "OK". Write a program that finds:\u000athe length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),\u000athe number of words inside the parentheses (print 0, if there is no word inside the parentheses).\u000aInput\u000aThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009255) \u2014 the length of the given string. The second line contains the string consisting of only lowercase and uppercase English letters, parentheses and underscore symbols.\u000aOutput\u000aPrint two space-separated integers:\u000athe length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),\u000athe number of words inside the parentheses (print 0, if there is no word inside the parentheses).\u000aExamples\u000ainput\u000a37\u000a_Hello_Vasya(and_Petya)__bye_(and_OK)\u000aoutput\u000a5 4\u000a\u000a\u000ainput\u000a37\u000a_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__\u000aoutput\u000a2 6\u000a\u000a\u000ainput\u000a27\u000a(LoooonG)__shOrt__(LoooonG)\u000aoutput\u000a5 2\u000a\u000a\u000ainput\u000a5\u000a(___)\u000aoutput\u000a0 0\u000a\u000a\u000aNote\u000aIn the first sample, the words "Hello", "Vasya" and "bye" are outside any of the parentheses, and the words "and", "Petya", "and" and "OK" are inside. Note, that the word "and" is given twice and you should count it twice in the answer.
p3
sS'problemStatement'
p4
VB. Text Document Analysis\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aModern text editors usually show some information regarding the document being edited. For example, the number of words, the number of pages, or the number of characters.\u000aIn this problem you should implement the similar functionality.\u000aYou are given a string which only consists of:\u000auppercase and lowercase English letters,\u000aunderscore symbols (they are used as separators),\u000aparentheses (both opening and closing).\u000aIt is guaranteed that each opening parenthesis has a succeeding closing parenthesis. Similarly, each closing parentheses has a preceding opening parentheses matching it. For each pair of matching parentheses there are no other parenthesis between them. In other words, each parenthesis in the string belongs to a matching "opening-closing" pair, and such pairs can't be nested.\u000aFor example, the following string is valid: "_Hello_Vasya(and_Petya)__bye_(and_OK)".\u000aWord is a maximal sequence of consecutive letters, i.e. such sequence that the first character to the left and the first character to the right of it is an underscore, a parenthesis, or it just does not exist. For example, the string above consists of seven words: "Hello", "Vasya", "and", "Petya", "bye", "and" and "OK". Write a program that finds:\u000athe length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),\u000athe number of words inside the parentheses (print 0, if there is no word inside the parentheses).\u000aInput\u000aThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009255) \u2014 the length of the given string. The second line contains the string consisting of only lowercase and uppercase English letters, parentheses and underscore symbols.\u000aOutput\u000aPrint two space-separated integers:\u000athe length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),\u000athe number of words inside the parentheses (print 0, if there is no word inside the parentheses).\u000aExamples\u000ainput\u000a37\u000a_Hello_Vasya(and_Petya)__bye_(and_OK)\u000aoutput\u000a5 4\u000a\u000a\u000ainput\u000a37\u000a_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__\u000aoutput\u000a2 6\u000a\u000a\u000ainput\u000a27\u000a(LoooonG)__shOrt__(LoooonG)\u000aoutput\u000a5 2\u000a\u000a\u000ainput\u000a5\u000a(___)\u000aoutput\u000a0 0\u000a\u000a\u000aNote\u000aIn the first sample, the words "Hello", "Vasya" and "bye" are outside any of the parentheses, and the words "and", "Petya", "and" and "OK" are inside. Note, that the word "and" is given twice and you should count it twice in the answer.
p5
sS'name'
p6
VB. Text Document Analysis
p7
sS'tags'
p8
Vexpression parsing implementation 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/723/B
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V1 second
p15
sS'problemId'
p16
V723/B
p17
sS'id'
p18
c__builtin__
id
p19
sb.