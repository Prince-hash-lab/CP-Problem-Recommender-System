(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VF. Polycarp's problems\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aPolycarp is an experienced participant in Codehorses programming contests. Now he wants to become a problemsetter.\u000aHe sent to the coordinator a set of n problems. Each problem has it's quality, the quality of the i-th problem is ai (ai can be positive, negative or equal to zero). The problems are ordered by expected difficulty, but the difficulty is not related to the quality in any way. The easiest problem has index 1, the hardest problem has index n.\u000aThe coordinator's mood is equal to q now. After reading a problem, the mood changes by it's quality. It means that after the coordinator reads a problem with quality b, the value b is added to his mood. The coordinator always reads problems one by one from the easiest to the hardest, it's impossible to change the order of the problems.\u000aIf after reading some problem the coordinator's mood becomes negative, he immediately stops reading and rejects the problemset.\u000aPolycarp wants to remove the minimum number of problems from his problemset to make the coordinator's mood non-negative at any moment of time. Polycarp is not sure about the current coordinator's mood, but he has m guesses "the current coordinator's mood q\u2009=\u2009bi".\u000aFor each of m guesses, find the minimum number of problems Polycarp needs to remove so that the coordinator's mood will always be greater or equal to 0 while he reads problems from the easiest of the remaining problems to the hardest.\u000aInput\u000aThe first line of input contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009750, 1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000) \u2014 the number of problems in the problemset and the number of guesses about the current coordinator's mood.\u000aThe second line of input contains n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the qualities of the problems in order of increasing difficulty.\u000aThe third line of input contains m integers b1,\u2009b2,\u2009...,\u2009bm (0\u2009\u2264\u2009bi\u2009\u2264\u20091015) \u2014 the guesses of the current coordinator's mood q.\u000aOutput\u000aPrint m lines, in i-th line print single integer \u2014 the answer to the problem with q\u2009=\u2009bi.\u000aExample\u000ainput\u000a6 3\u000a8 -5 -4 1 -7 4\u000a0 7 3\u000aoutput\u000a2\u000a0\u000a1
p3
sS'problemStatement'
p4
VF. Polycarp's problems\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aPolycarp is an experienced participant in Codehorses programming contests. Now he wants to become a problemsetter.\u000aHe sent to the coordinator a set of n problems. Each problem has it's quality, the quality of the i-th problem is ai (ai can be positive, negative or equal to zero). The problems are ordered by expected difficulty, but the difficulty is not related to the quality in any way. The easiest problem has index 1, the hardest problem has index n.\u000aThe coordinator's mood is equal to q now. After reading a problem, the mood changes by it's quality. It means that after the coordinator reads a problem with quality b, the value b is added to his mood. The coordinator always reads problems one by one from the easiest to the hardest, it's impossible to change the order of the problems.\u000aIf after reading some problem the coordinator's mood becomes negative, he immediately stops reading and rejects the problemset.\u000aPolycarp wants to remove the minimum number of problems from his problemset to make the coordinator's mood non-negative at any moment of time. Polycarp is not sure about the current coordinator's mood, but he has m guesses "the current coordinator's mood q\u2009=\u2009bi".\u000aFor each of m guesses, find the minimum number of problems Polycarp needs to remove so that the coordinator's mood will always be greater or equal to 0 while he reads problems from the easiest of the remaining problems to the hardest.\u000aInput\u000aThe first line of input contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009750, 1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000) \u2014 the number of problems in the problemset and the number of guesses about the current coordinator's mood.\u000aThe second line of input contains n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the qualities of the problems in order of increasing difficulty.\u000aThe third line of input contains m integers b1,\u2009b2,\u2009...,\u2009bm (0\u2009\u2264\u2009bi\u2009\u2264\u20091015) \u2014 the guesses of the current coordinator's mood q.\u000aOutput\u000aPrint m lines, in i-th line print single integer \u2014 the answer to the problem with q\u2009=\u2009bi.\u000aExample\u000ainput\u000a6 3\u000a8 -5 -4 1 -7 4\u000a0 7 3\u000aoutput\u000a2\u000a0\u000a1
p5
sS'name'
p6
VF. Polycarp's problems
p7
sS'tags'
p8
Vbinary search dp greedy 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/727/F
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2 seconds
p15
sS'output'
p16
(lp17
VOutput
p18
aVPrint m lines, in i-th line print single integer \u2014 the answer to the problem with q\u2009=\u2009bi.
p19
asS'statement'
p20
(lp21
VF. Polycarp's problems
p22
aVtime limit per test2 seconds
p23
aVmemory limit per test256 megabytes
p24
aVinputstandard input
p25
aVoutputstandard output
p26
aVPolycarp is an experienced participant in Codehorses programming contests. Now he wants to become a problemsetter.
p27
aVHe sent to the coordinator a set of n problems. Each problem has it's quality, the quality of the i-th problem is ai (ai can be positive, negative or equal to zero). The problems are ordered by expected difficulty, but the difficulty is not related to the quality in any way. The easiest problem has index 1, the hardest problem has index n.
p28
aVThe coordinator's mood is equal to q now. After reading a problem, the mood changes by it's quality. It means that after the coordinator reads a problem with quality b, the value b is added to his mood. The coordinator always reads problems one by one from the easiest to the hardest, it's impossible to change the order of the problems.
p29
aVIf after reading some problem the coordinator's mood becomes negative, he immediately stops reading and rejects the problemset.
p30
aVPolycarp wants to remove the minimum number of problems from his problemset to make the coordinator's mood non-negative at any moment of time. Polycarp is not sure about the current coordinator's mood, but he has m guesses "the current coordinator's mood q\u2009=\u2009bi".
p31
aVFor each of m guesses, find the minimum number of problems Polycarp needs to remove so that the coordinator's mood will always be greater or equal to 0 while he reads problems from the easiest of the remaining problems to the hardest.
p32
asS'problemId'
p33
V727/F
p34
sS'input'
p35
(lp36
VInput
p37
aVThe first line of input contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009750, 1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000) \u2014 the number of problems in the problemset and the number of guesses about the current coordinator's mood.
p38
aVThe second line of input contains n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the qualities of the problems in order of increasing difficulty.
p39
aVThe third line of input contains m integers b1,\u2009b2,\u2009...,\u2009bm (0\u2009\u2264\u2009bi\u2009\u2264\u20091015) \u2014 the guesses of the current coordinator's mood q.
p40
asS'id'
p41
c__builtin__
id
p42
sS'constraints'
p43
g36
sb.