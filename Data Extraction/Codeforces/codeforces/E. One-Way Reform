(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VE. One-Way Reform\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aThere are n cities and m two-way roads in Berland, each road connects two cities. It is known that there is no more than one road connecting each pair of cities, and there is no road which connects the city with itself. It is possible that there is no way to get from one city to some other city using only these roads.\u000aThe road minister decided to make a reform in Berland and to orient all roads in the country, i.e. to make each road one-way. The minister wants to maximize the number of cities, for which the number of roads that begins in the city equals to the number of roads that ends in it.\u000aInput\u000aThe first line contains a positive integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009200) \u2014 the number of testsets in the input.\u000aEach of the testsets is given in the following way. The first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009200, 0\u2009\u2264\u2009m\u2009\u2264\u2009n·(n\u2009-\u20091)\u2009/\u20092) \u2014 the number of cities and the number of roads in Berland.\u000aThe next m lines contain the description of roads in Berland. Each line contains two integers u and v (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n) \u2014 the cities the corresponding road connects. It's guaranteed that there are no self-loops and multiple roads. It is possible that there is no way along roads between a pair of cities.\u000aIt is guaranteed that the total number of cities in all testset of input data doesn't exceed 200.\u000aPay attention that for hacks, you can only use tests consisting of one testset, so t should be equal to one.\u000aOutput\u000aFor each testset print the maximum number of such cities that the number of roads that begins in the city, is equal to the number of roads that ends in it.\u000aIn the next m lines print oriented roads. First print the number of the city where the road begins and then the number of the city where the road ends. If there are several answers, print any of them. It is allowed to print roads in each test in arbitrary order. Each road should be printed exactly once.\u000aExample\u000ainput\u000a2\u000a5 5\u000a2 1\u000a4 5\u000a2 3\u000a1 3\u000a3 5\u000a7 2\u000a3 7\u000a4 2\u000aoutput\u000a3\u000a1 3\u000a3 5\u000a5 4\u000a3 2\u000a2 1\u000a3\u000a2 4\u000a3 7
p3
sS'problemStatement'
p4
VE. One-Way Reform\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aThere are n cities and m two-way roads in Berland, each road connects two cities. It is known that there is no more than one road connecting each pair of cities, and there is no road which connects the city with itself. It is possible that there is no way to get from one city to some other city using only these roads.\u000aThe road minister decided to make a reform in Berland and to orient all roads in the country, i.e. to make each road one-way. The minister wants to maximize the number of cities, for which the number of roads that begins in the city equals to the number of roads that ends in it.\u000aInput\u000aThe first line contains a positive integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009200) \u2014 the number of testsets in the input.\u000aEach of the testsets is given in the following way. The first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009200, 0\u2009\u2264\u2009m\u2009\u2264\u2009n·(n\u2009-\u20091)\u2009/\u20092) \u2014 the number of cities and the number of roads in Berland.\u000aThe next m lines contain the description of roads in Berland. Each line contains two integers u and v (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n) \u2014 the cities the corresponding road connects. It's guaranteed that there are no self-loops and multiple roads. It is possible that there is no way along roads between a pair of cities.\u000aIt is guaranteed that the total number of cities in all testset of input data doesn't exceed 200.\u000aPay attention that for hacks, you can only use tests consisting of one testset, so t should be equal to one.\u000aOutput\u000aFor each testset print the maximum number of such cities that the number of roads that begins in the city, is equal to the number of roads that ends in it.\u000aIn the next m lines print oriented roads. First print the number of the city where the road begins and then the number of the city where the road ends. If there are several answers, print any of them. It is allowed to print roads in each test in arbitrary order. Each road should be printed exactly once.\u000aExample\u000ainput\u000a2\u000a5 5\u000a2 1\u000a4 5\u000a2 3\u000a1 3\u000a3 5\u000a7 2\u000a3 7\u000a4 2\u000aoutput\u000a3\u000a1 3\u000a3 5\u000a5 4\u000a3 2\u000a2 1\u000a3\u000a2 4\u000a3 7
p5
sS'name'
p6
VE. One-Way Reform
p7
sS'tags'
p8
Vconstructive algorithms dfs and similar flows graphs greedy 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/723/E
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2 seconds
p15
sS'output'
p16
(lp17
VOutput
p18
aVFor each testset print the maximum number of such cities that the number of roads that begins in the city, is equal to the number of roads that ends in it.
p19
aVIn the next m lines print oriented roads. First print the number of the city where the road begins and then the number of the city where the road ends. If there are several answers, print any of them. It is allowed to print roads in each test in arbitrary order. Each road should be printed exactly once.
p20
asS'statement'
p21
(lp22
VE. One-Way Reform
p23
aVtime limit per test2 seconds
p24
aVmemory limit per test256 megabytes
p25
aVinputstandard input
p26
aVoutputstandard output
p27
aVThere are n cities and m two-way roads in Berland, each road connects two cities. It is known that there is no more than one road connecting each pair of cities, and there is no road which connects the city with itself. It is possible that there is no way to get from one city to some other city using only these roads.
p28
aVThe road minister decided to make a reform in Berland and to orient all roads in the country, i.e. to make each road one-way. The minister wants to maximize the number of cities, for which the number of roads that begins in the city equals to the number of roads that ends in it.
p29
asS'problemId'
p30
V723/E
p31
sS'input'
p32
(lp33
VInput
p34
aVThe first line contains a positive integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009200) \u2014 the number of testsets in the input.
p35
aVEach of the testsets is given in the following way. The first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009200, 0\u2009\u2264\u2009m\u2009\u2264\u2009n·(n\u2009-\u20091)\u2009/\u20092) \u2014 the number of cities and the number of roads in Berland.
p36
aVThe next m lines contain the description of roads in Berland. Each line contains two integers u and v (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n) \u2014 the cities the corresponding road connects. It's guaranteed that there are no self-loops and multiple roads. It is possible that there is no way along roads between a pair of cities.
p37
aVIt is guaranteed that the total number of cities in all testset of input data doesn't exceed 200.
p38
aVPay attention that for hacks, you can only use tests consisting of one testset, so t should be equal to one.
p39
asS'id'
p40
c__builtin__
id
p41
sS'constraints'
p42
g33
sb.