(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 4 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aThe Little Elephant from the Zoo of Lviv believes in magic.\u000aHe has a magic board A that consists of N rows and M columns. Each cell of the board contains an integer from 0 to 9 inclusive. The cell at the intersection of the i-th row and the j-th column is denoted as (i; j), where 1 \u2264 i \u2264 N and 1 \u2264 j \u2264 M. The number in the cell (i; j) is denoted as A[i][j].\u000aThe Little Elephant owns the only magic operation which can be described as follows. He chooses some integer P and some row or column, after that for each cell in the chosen row or column he adds number P to the number in this cell and take the result modulo 10 in order to keep numbers in the range {0, 1, ..., 9}. Our Little Magician wants to perform series of such operations to achieve some board for which certain characteristic called level of the board is maximal possible.\u000aSo what is the level of the board? Bluntly speaking it is the length of the longest non-increasing subsequence of cells of the board. Formally, the level of the board is the maximal integer K such that there exists such sequence of different cells (i1; j1), (i2; j2), ..., (iK; jK) for which\u000a1 \u2264 i1 \u2264 ... \u2264 iK \u2264 N,\u000a1 \u2264 j1 \u2264 ... \u2264 jK \u2264 M,\u000aand\u000aA[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK].\u000aThough, the magic operation, the Little Elephant owns, is quite powerful, there are some restrictions dictated by the Association of Cursed Magicians (ACM):\u000aThe number P should be chosen in advance and should be the same for all operations.\u000aFor each row the magic operation can be applied at most once.\u000aThe same, of course, is true for columns.\u000aWithout these stupid restrictions of this stupid Association our hero could always achieve the maximal possible level M + N \u2212 1. But now he is confused and asks you for help. Find the maximal level of the board A after making arbitrary number of magic operations according to the restrictions of ACM.\u000aInput\u000aThe first line of the input contains a single integer T, the number of test cases. Then T test cases follow. The first line of each test case contains two space separated integers N and M, the sizes of the board. Each of the following N lines contains M one-digit numbers without spaces. The i-th line among them contains the numbers A[i][1], ..., A[i][M].\u000aOutput\u000aFor each test case output a single line containing a single integer, the maximal possible level of the board that Little Elephant can achieve under the restrictions of ACM.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000a1 \u2264 N \u2264 100\u000a1 \u2264 M \u2264 100\u000a0 \u2264 A[i][j] \u2264 9\u000aExample\u000aInput:\u000a2\u000a2 2\u000a11\u000a10\u000a3 4\u000a3478\u000a4268\u000a7173\u000a\u000aOutput:\u000a3\u000a5\u000aExplanation\u000aCase 1. The board already has a sequence of 3 cells that satisfies all required constraints (without applying any operation). For example, one can choose, the sequence (1; 1), (1; 2), (2; 2). It is also shown in the figure below (chosen cells are made bold):\u000a11\u000a10\u000aLet's formally validate this sequence of cells. Inequality 1 \u2264 i1 \u2264 ... \u2264 iK \u2264 N takes the form 1 \u2264 1 \u2264 2. Inequality 1 \u2264 j1 \u2264 ... \u2264 jK \u2264 M takes the form 1 \u2264 2 \u2264 2. Finally, inequality A[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK] takes the form 1 \u2265 1 \u2265 0. So all of them is satisfied, which means that the level of this board is at least 3. But clearly, we can't have the required sequence of cells of length more than 3. So 3 is the actual level of this board.\u000aCase 2. The desired sequence of length 5 can be achieved by several values of P. Consider, for example, P = 3. At first let's apply the magic operation to the 1st row. We get the following transformation:\u000a3478  \u2192  6701\u000a4268  \u2192  4268\u000a7173  \u2192  7173\u000aNow let's transform the 1st column by the magic operation. We get:\u000a6701  \u2192  9701\u000a4268  \u2192  7268\u000a7173  \u2192  0173\u000aFinally we modify the 2nd column:\u000a9701  \u2192  9001\u000a7268  \u2192  7568\u000a0173  \u2192  0473\u000aNow we can take the following sequence of 5 cells to satisfy all needed constraints: (1; 1), (2; 1), (2; 2), (3; 2), (3; 4) (see the figure below):\u000a9001\u000a7568\u000a0473\u000aJust to reiterate we note that the inequality A[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK] takes the form 9 \u2265 7 \u2265 5 \u2265 4 \u2265 3 for this sequence. One can check (for example, by brute force), that sequences of length more than 5 can't be achieved. So 5 is the answer.\u000aAuthor: witua\u000aTags: cook28 dp dynamic-prog easy witua\u000aDate Added: 20-03-2012\u000aTime Limit: 4 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aThe Little Elephant from the Zoo of Lviv believes in magic.\u000aHe has a magic board A that consists of N rows and M columns. Each cell of the board contains an integer from 0 to 9 inclusive. The cell at the intersection of the i-th row and the j-th column is denoted as (i; j), where 1 \u2264 i \u2264 N and 1 \u2264 j \u2264 M. The number in the cell (i; j) is denoted as A[i][j].\u000aThe Little Elephant owns the only magic operation which can be described as follows. He chooses some integer P and some row or column, after that for each cell in the chosen row or column he adds number P to the number in this cell and take the result modulo 10 in order to keep numbers in the range {0, 1, ..., 9}. Our Little Magician wants to perform series of such operations to achieve some board for which certain characteristic called level of the board is maximal possible.\u000aSo what is the level of the board? Bluntly speaking it is the length of the longest non-increasing subsequence of cells of the board. Formally, the level of the board is the maximal integer K such that there exists such sequence of different cells (i1; j1), (i2; j2), ..., (iK; jK) for which\u000a1 \u2264 i1 \u2264 ... \u2264 iK \u2264 N,\u000a1 \u2264 j1 \u2264 ... \u2264 jK \u2264 M,\u000aand\u000aA[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK].\u000aThough, the magic operation, the Little Elephant owns, is quite powerful, there are some restrictions dictated by the Association of Cursed Magicians (ACM):\u000aThe number P should be chosen in advance and should be the same for all operations.\u000aFor each row the magic operation can be applied at most once.\u000aThe same, of course, is true for columns.\u000aWithout these stupid restrictions of this stupid Association our hero could always achieve the maximal possible level M + N \u2212 1. But now he is confused and asks you for help. Find the maximal level of the board A after making arbitrary number of magic operations according to the restrictions of ACM.\u000aInput\u000aThe first line of the input contains a single integer T, the number of test cases. Then T test cases follow. The first line of each test case contains two space separated integers N and M, the sizes of the board. Each of the following N lines contains M one-digit numbers without spaces. The i-th line among them contains the numbers A[i][1], ..., A[i][M].\u000aOutput\u000aFor each test case output a single line containing a single integer, the maximal possible level of the board that Little Elephant can achieve under the restrictions of ACM.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000a1 \u2264 N \u2264 100\u000a1 \u2264 M \u2264 100\u000a0 \u2264 A[i][j] \u2264 9\u000aExample\u000aInput:\u000a2\u000a2 2\u000a11\u000a10\u000a3 4\u000a3478\u000a4268\u000a7173\u000a\u000aOutput:\u000a3\u000a5\u000aExplanation\u000aCase 1. The board already has a sequence of 3 cells that satisfies all required constraints (without applying any operation). For example, one can choose, the sequence (1; 1), (1; 2), (2; 2). It is also shown in the figure below (chosen cells are made bold):\u000a11\u000a10\u000aLet's formally validate this sequence of cells. Inequality 1 \u2264 i1 \u2264 ... \u2264 iK \u2264 N takes the form 1 \u2264 1 \u2264 2. Inequality 1 \u2264 j1 \u2264 ... \u2264 jK \u2264 M takes the form 1 \u2264 2 \u2264 2. Finally, inequality A[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK] takes the form 1 \u2265 1 \u2265 0. So all of them is satisfied, which means that the level of this board is at least 3. But clearly, we can't have the required sequence of cells of length more than 3. So 3 is the actual level of this board.\u000aCase 2. The desired sequence of length 5 can be achieved by several values of P. Consider, for example, P = 3. At first let's apply the magic operation to the 1st row. We get the following transformation:\u000a3478  \u2192  6701\u000a4268  \u2192  4268\u000a7173  \u2192  7173\u000aNow let's transform the 1st column by the magic operation. We get:\u000a6701  \u2192  9701\u000a4268  \u2192  7268\u000a7173  \u2192  0173\u000aFinally we modify the 2nd column:\u000a9701  \u2192  9001\u000a7268  \u2192  7568\u000a0173  \u2192  0473\u000aNow we can take the following sequence of 5 cells to satisfy all needed constraints: (1; 1), (2; 1), (2; 2), (3; 2), (3; 4) (see the figure below):\u000a9001\u000a7568\u000a0473\u000aJust to reiterate we note that the inequality A[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK] takes the form 9 \u2265 7 \u2265 5 \u2265 4 \u2265 3 for this sequence. One can check (for example, by brute force), that sequences of length more than 5 can't be achieved. So 5 is the answer.\u000aAuthor: witua\u000aTags: cook28 dp dynamic-prog easy witua\u000aDate Added: 20-03-2012\u000aTime Limit: 4 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. The Little Elephant from the Zoo of Lviv believes in magic. He has a magic board A that consists of N rows and M columns. Each cell of the board contains an integer from 0 to 9 inclusive. The cell at the intersection of the i-th row and the j-th column is denoted as (i; j), where 1 \u2264 i \u2264 N and 1 \u2264 j \u2264 M. The number in the cell (i; j) is denoted as A[i][j]. A N M 0 9 i j (i; j) 1 i N 1 j M (i; j) A[i][j] The Little Elephant owns the only magic operation which can be described as follows. He chooses some integer P and some row or column, after that for each cell in the chosen row or column he adds number P to the number in this cell and take the result modulo 10 in order to keep numbers in the range {0, 1, ..., 9}. Our Little Magician wants to perform series of such operations to achieve some board for which certain characteristic called level of the board is maximal possible. P P 10 {0, 1, ..., 9} level of the board So what is the level of the board? Bluntly speaking it is the length of the longest non-increasing subsequence of cells of the board. Formally, the level of the board is the maximal integer K such that there exists such sequence of different cells (i1; j1), (i2; j2), ..., (iK; jK) for which K different (i1; j1), (i2; j2), ..., (iK; jK) 1 1 2 2 K K 1 \u2264 i1 \u2264 ... \u2264 iK \u2264 N,\u000a1 \u2264 j1 \u2264 ... \u2264 jK \u2264 M, 1 i1 1 iK K N  1 j1 1 jK K M and A[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK]. A[i1][j1] 1 1 A[i2][j2] 2 2 A[iK][jK] K K Though, the magic operation, the Little Elephant owns, is quite powerful, there are some restrictions dictated by the Association of Cursed Magicians (ACM):   The number P should be chosen in advance and should be the same for all operations.\u000aFor each row the magic operation can be applied at most once.\u000aThe same, of course, is true for columns. The number P should be chosen in advance and should be the same for all operations. P For each row the magic operation can be applied at most once. The same, of course, is true for columns.  Without these stupid restrictions of this stupid Association our hero could always achieve the maximal possible level M + N \u2212 1. But now he is confused and asks you for help. Find the maximal level of the board A after making arbitrary number of magic operations according to the restrictions of ACM. M + N \u2212 1 A Input The first line of the input contains a single integer T, the number of test cases. Then T test cases follow. The first line of each test case contains two space separated integers N and M, the sizes of the board. Each of the following N lines contains M one-digit numbers without spaces. The i-th line among them contains the numbers A[i][1], ..., A[i][M]. T T N M N M i A[i][1] A[i][M] Output For each test case output a single line containing a single integer, the maximal possible level of the board that Little Elephant can achieve under the restrictions of ACM. Constraints 1 \u2264 T \u2264 10\u000a1 \u2264 N \u2264 100\u000a1 \u2264 M \u2264 100\u000a0 \u2264 A[i][j] \u2264 9 1 T 10  1 N 100  1 M 100  0 A[i][j] 9 Example Input:\u000a2\u000a2 2\u000a11\u000a10\u000a3 4\u000a3478\u000a4268\u000a7173\u000a\u000aOutput:\u000a3\u000a5 Input: Output: Explanation Case 1. The board already has a sequence of 3 cells that satisfies all required constraints (without applying any operation). For example, one can choose, the sequence (1; 1), (1; 2), (2; 2). It is also shown in the figure below (chosen cells are made bold): Case 1. 3 (1; 1), (1; 2), (2; 2)  11\u000a10 11 0  Let's formally validate this sequence of cells. Inequality 1 \u2264 i1 \u2264 ... \u2264 iK \u2264 N takes the form 1 \u2264 1 \u2264 2. Inequality 1 \u2264 j1 \u2264 ... \u2264 jK \u2264 M takes the form 1 \u2264 2 \u2264 2. Finally, inequality A[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK] takes the form 1 \u2265 1 \u2265 0. So all of them is satisfied, which means that the level of this board is at least 3. But clearly, we can't have the required sequence of cells of length more than 3. So 3 is the actual level of this board. 1 i1 1 iK K N 1 1 2 1 j1 1 jK K M 1 2 2 A[i1][j1] 1 1 A[i2][j2] 2 2 A[iK][jK] K K 1 1 0 3 3 3 Case 2. The desired sequence of length 5 can be achieved by several values of P. Consider, for example, P = 3. At first let's apply the magic operation to the 1st row. We get the following transformation: Case 2. 5 P P = 3  3478  \u2192  6701\u000a4268  \u2192  4268\u000a7173  \u2192  7173 6701  Now let's transform the 1st column by the magic operation. We get:  6701  \u2192  9701\u000a4268  \u2192  7268\u000a7173  \u2192  0173 9 7 0  Finally we modify the 2nd column:  9701  \u2192  9001\u000a7268  \u2192  7568\u000a0173  \u2192  0473 0 5 4  Now we can take the following sequence of 5 cells to satisfy all needed constraints: (1; 1), (2; 1), (2; 2), (3; 2), (3; 4) (see the figure below): (1; 1), (2; 1), (2; 2), (3; 2), (3; 4)  9001\u000a7568\u000a0473 9 75 4 3  Just to reiterate we note that the inequality A[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK] takes the form 9 \u2265 7 \u2265 5 \u2265 4 \u2265 3 for this sequence. One can check (for example, by brute force), that sequences of length more than 5 can't be achieved. So 5 is the answer. A[i1][j1] 1 1 A[i2][j2] 2 2 A[iK][jK] K K 9 \u2265 7 \u2265 5 \u2265 4 \u2265 3 5 5  Author: witua\u000aTags: cook28 dp dynamic-prog easy witua\u000aDate Added: 20-03-2012\u000aTime Limit: 4 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: witua\u000aTags: cook28 dp dynamic-prog easy witua\u000aDate Added: 20-03-2012\u000aTime Limit: 4 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: witua Author: witua witua Tags: cook28 dp dynamic-prog easy witua Tags: cook28 dp dynamic-prog easy witua cook28 dp dynamic-prog easy witua Date Added: 20-03-2012 Date Added: 20-03-2012 Time Limit: 4 sec Time Limit: 4 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V cook28 dp dynamic-prog easy witua
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/LEMAGIC
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVThe Little Elephant from the Zoo of Lviv believes in magic.
p17
aVHe has a magic board A that consists of N rows and M columns. Each cell of the board contains an integer from 0 to 9 inclusive. The cell at the intersection of the i-th row and the j-th column is denoted as (i; j), where 1 \u2264 i \u2264 N and 1 \u2264 j \u2264 M. The number in the cell (i; j) is denoted as A[i][j].
p18
aVThe Little Elephant owns the only magic operation which can be described as follows. He chooses some integer P and some row or column, after that for each cell in the chosen row or column he adds number P to the number in this cell and take the result modulo 10 in order to keep numbers in the range {0, 1, ..., 9}. Our Little Magician wants to perform series of such operations to achieve some board for which certain characteristic called level of the board is maximal possible.
p19
aVSo what is the level of the board? Bluntly speaking it is the length of the longest non-increasing subsequence of cells of the board. Formally, the level of the board is the maximal integer K such that there exists such sequence of different cells (i1; j1), (i2; j2), ..., (iK; jK) for which
p20
aV1 \u2264 i1 \u2264 ... \u2264 iK \u2264 N,
p21
aV1 \u2264 j1 \u2264 ... \u2264 jK \u2264 M,
p22
aVand
p23
aVA[i1][j1] \u2265 A[i2][j2] \u2265 ... \u2265 A[iK][jK].
p24
aVThough, the magic operation, the Little Elephant owns, is quite powerful, there are some restrictions dictated by the Association of Cursed Magicians (ACM):
p25
aVThe number P should be chosen in advance and should be the same for all operations.
p26
aVFor each row the magic operation can be applied at most once.
p27
aVThe same, of course, is true for columns.
p28
aVWithout these stupid restrictions of this stupid Association our hero could always achieve the maximal possible level M + N \u2212 1. But now he is confused and asks you for help. Find the maximal level of the board A after making arbitrary number of magic operations according to the restrictions of ACM.
p29
asS'input'
p30
(lp31
VInput
p32
aVThe first line of the input contains a single integer T, the number of test cases. Then T test cases follow. The first line of each test case contains two space separated integers N and M, the sizes of the board. Each of the following N lines contains M one-digit numbers without spaces. The i-th line among them contains the numbers A[i][1], ..., A[i][M].
p33
aVOutput
p34
aVFor each test case output a single line containing a single integer, the maximal possible level of the board that Little Elephant can achieve under the restrictions of ACM.
p35
asS'constraints'
p36
(lp37
VConstraints
p38
aV1 \u2264 T \u2264 10
p39
aV1 \u2264 N \u2264 100
p40
aV1 \u2264 M \u2264 100
p41
aV0 \u2264 A[i][j] \u2264 9
p42
asS'id'
p43
c__builtin__
id
p44
sS'name'
p45
VLEMAGIC
p46
sb.