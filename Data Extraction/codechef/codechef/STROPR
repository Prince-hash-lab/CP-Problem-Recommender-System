(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 2 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef has an array A consisting of N integers (1-based indexing). He asks you to perform the following operation M times:\u000a for i = 2 to N:\u000a  Ai = Ai + Ai-1\u000aYour task is to find the xth element of the array (i.e., Ax) after performing the above operation M times. As the answer could be large, please output it modulo 109 + 7.\u000aInput\u000aThe first line of input contains an integer T denoting the number of test cases.\u000aThe first line of each test case contains three space-separated integers \u2014 N, x, and M \u2014 denoting the size of the array, index of the element you need to find, and the amount of times you need to repeat operation before finding the element, respectively. The second line contains N space-separated integers A1, A2, \u2026, AN.\u000aOutput\u000aFor each test case, output a single line containing one integer: Ax modulo 109 + 7.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000a1 \u2264 x \u2264 N \u2264 105\u000a1 \u2264 M \u2264 1018\u000a1 \u2264 Ai \u2264 1018\u000aSubtasks\u000aSubtask 1 (8 points):\u000a1 \u2264 x \u2264 min{2, N}\u000aSubtask 2 (24 points):\u000a1 \u2264 N * M \u2264 106\u000aSubtask 3 (68 points): No additional constraints\u000aExample\u000aInput:\u000a2\u000a3 2 3\u000a1 2 3\u000a3 3 3 \u000a1 2 3\u000a\u000aOutput:\u000a5\u000a15\u000aExplanation\u000aValues in the array A:\u000aBefore the operations: [1, 2, 3]\u000aAfter the first operation: [1, 3, 6]\u000aAfter the second operation: [1, 4, 10]\u000aAfter the third operation: [1, 5, 15]\u000aSince input file can be fairly large (about 8 MB), it's recommended to use fast I/O (for example, in C++, use scanf/printf instead of cin/cout).\u000aAuthor: antoniuk1\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/STROPR\u000aTags: antoniuk1 combinatorics easy feb16 maths\u000aDate Added: 23-01-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef has an array A consisting of N integers (1-based indexing). He asks you to perform the following operation M times:\u000a for i = 2 to N:\u000a  Ai = Ai + Ai-1\u000aYour task is to find the xth element of the array (i.e., Ax) after performing the above operation M times. As the answer could be large, please output it modulo 109 + 7.\u000aInput\u000aThe first line of input contains an integer T denoting the number of test cases.\u000aThe first line of each test case contains three space-separated integers \u2014 N, x, and M \u2014 denoting the size of the array, index of the element you need to find, and the amount of times you need to repeat operation before finding the element, respectively. The second line contains N space-separated integers A1, A2, \u2026, AN.\u000aOutput\u000aFor each test case, output a single line containing one integer: Ax modulo 109 + 7.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000a1 \u2264 x \u2264 N \u2264 105\u000a1 \u2264 M \u2264 1018\u000a1 \u2264 Ai \u2264 1018\u000aSubtasks\u000aSubtask 1 (8 points):\u000a1 \u2264 x \u2264 min{2, N}\u000aSubtask 2 (24 points):\u000a1 \u2264 N * M \u2264 106\u000aSubtask 3 (68 points): No additional constraints\u000aExample\u000aInput:\u000a2\u000a3 2 3\u000a1 2 3\u000a3 3 3 \u000a1 2 3\u000a\u000aOutput:\u000a5\u000a15\u000aExplanation\u000aValues in the array A:\u000aBefore the operations: [1, 2, 3]\u000aAfter the first operation: [1, 3, 6]\u000aAfter the second operation: [1, 4, 10]\u000aAfter the third operation: [1, 5, 15]\u000aSince input file can be fairly large (about 8 MB), it's recommended to use fast I/O (for example, in C++, use scanf/printf instead of cin/cout).\u000aAuthor: antoniuk1\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/STROPR\u000aTags: antoniuk1 combinatorics easy feb16 maths\u000aDate Added: 23-01-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef has an array A consisting of N integers (1-based indexing). He asks you to perform the following operation M times: A N M    for i = 2 to N:\u000a  Ai = Ai + Ai-1  for i = 2 to N:\u000a  Ai = Ai + Ai-1 for N A i A i A i-1   Your task is to find the xth element of the array (i.e., Ax) after performing the above operation M times. As the answer could be large, please output it modulo 109 + 7. xth th Ax x M 9 Input The first line of input contains an integer T denoting the number of test cases.\u000aThe first line of each test case contains three space-separated integers \u2014 N, x, and M \u2014 denoting the size of the array, index of the element you need to find, and the amount of times you need to repeat operation before finding the element, respectively. The second line contains N space-separated integers A1, A2, \u2026, AN. The first line of input contains an integer T denoting the number of test cases. T The first line of each test case contains three space-separated integers \u2014 N, x, and M \u2014 denoting the size of the array, index of the element you need to find, and the amount of times you need to repeat operation before finding the element, respectively. The second line contains N space-separated integers A1, A2, \u2026, AN. N x M N A1 1 A2 2 AN N Output For each test case, output a single line containing one integer: Ax modulo 109 + 7. Ax x 9 Constraints 1 \u2264 T \u2264 10\u000a1 \u2264 x \u2264 N \u2264 105\u000a1 \u2264 M \u2264 1018\u000a1 \u2264 Ai \u2264 1018 1 \u2264 T \u2264 10 1 T 10 1 \u2264 x \u2264 N \u2264 105 1 x N 105 5 1 \u2264 M \u2264 1018 1 M 1018 18  1 \u2264 Ai \u2264 1018 1 Ai i  1018 18  Subtasks Subtask 1 (8 points): 1 \u2264 x \u2264 min{2, N} 1 \u2264 x \u2264 min{2, N} 1 \u2264 x \u2264 min{2, N} Subtask 2 (24 points): 1 \u2264 N * M \u2264 106 1 \u2264 N * M \u2264 106 1 \u2264 N * M \u2264 106 6 Subtask 3 (68 points): Example Input:\u000a2\u000a3 2 3\u000a1 2 3\u000a3 3 3 \u000a1 2 3\u000a\u000aOutput:\u000a5\u000a15 Input: Output: Explanation Values in the array A: A Before the operations: [1, 2, 3]\u000aAfter the first operation: [1, 3, 6]\u000aAfter the second operation: [1, 4, 10]\u000aAfter the third operation: [1, 5, 15] Before the operations: [1, 2, 3] [1, 2, 3] After the first operation: [1, 3, 6] [1, 3, 6] After the second operation: [1, 4, 10] [1, 4, 10] After the third operation: [1, 5, 15] [1, 5, 15]  Since input file can be fairly large (about 8 MB), it's recommended to use fast I/O (for example, in C++, use scanf/printf instead of cin/cout). Since input file can be fairly large (about 8 MB), it's recommended to use fast I/O (for example, in C++, use scanf/printf instead of cin/cout).  Author: antoniuk1\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/STROPR\u000aTags: antoniuk1 combinatorics easy feb16 maths\u000aDate Added: 23-01-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: antoniuk1\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/STROPR\u000aTags: antoniuk1 combinatorics easy feb16 maths\u000aDate Added: 23-01-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: antoniuk1 Author: antoniuk1 antoniuk1 Tester: iscsi Tester: iscsi iscsi Editorial: http://discuss.codechef.com/problems/STROPR Editorial: http://discuss.codechef.com/problems/STROPR http://discuss.codechef.com/problems/STROPR Tags: antoniuk1 combinatorics easy feb16 maths Tags: antoniuk1 combinatorics easy feb16 maths antoniuk1 combinatorics easy feb16 maths Date Added: 23-01-2015 Date Added: 23-01-2015 Time Limit: 2 sec Time Limit: 2 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V antoniuk1 combinatorics easy feb16 maths
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/STROPR
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef has an array A consisting of N integers (1-based indexing). He asks you to perform the following operation M times:
p18
aVfor i = 2 to N:
p19
aVAi = Ai + Ai-1
p20
aVYour task is to find the xth element of the array (i.e., Ax) after performing the above operation M times. As the answer could be large, please output it modulo 109 + 7.
p21
asS'input'
p22
(lp23
VInput
p24
aVThe first line of input contains an integer T denoting the number of test cases.
p25
aVThe first line of each test case contains three space-separated integers \u2014 N, x, and M \u2014 denoting the size of the array, index of the element you need to find, and the amount of times you need to repeat operation before finding the element, respectively. The second line contains N space-separated integers A1, A2, \u2026, AN.
p26
aVOutput
p27
aVFor each test case, output a single line containing one integer: Ax modulo 109 + 7.
p28
asS'constraints'
p29
(lp30
VConstraints
p31
aV1 \u2264 T \u2264 10
p32
aV1 \u2264 x \u2264 N \u2264 105
p33
aV1 \u2264 M \u2264 1018
p34
aV1 \u2264 Ai \u2264 1018
p35
aVSubtasks
p36
aVSubtask 1 (8 points):
p37
aV1 \u2264 x \u2264 min{2, N}
p38
aVSubtask 2 (24 points):
p39
aV1 \u2264 N * M \u2264 106
p40
aVSubtask 3 (68 points): No additional constraints
p41
asS'id'
p42
c__builtin__
id
p43
sS'name'
p44
VSTROPR
p45
sb.