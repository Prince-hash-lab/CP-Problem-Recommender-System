(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef lives in Chefland. Chefland can be thought as a two-dimensional grid of dimensions NxM. Some of the cells of the Chefland are prohibited to visit (denoted by '*'). One can never step on such prohibited cells. There is a city at each at each non-prohibited cell (will be denoted by '.' or 'C' (denoting capital city)).\u000aSadly people in the capital city of Chefland (denoted by 'C') are lazy for their shopping. So they invented a robot for carrying their groceries. They want to feed a command of at max 105 characters to the robot such that if the robot starts from any cell (non-prohibited) of the grid, it should be able to visit the capital city during its walk. Each character of the command will be one of 'U', 'D', 'L', 'R' denoting the movement to go up, down, left and right cell from the current cell (provided it exists and the cell is not prohibited to visit). Otherwise, the robot will just stay at its current cell. The characters of the command will be followed in the order from left to right.\u000aNow, after thinking a lot, citizens of Chefland could not come up such a command to feed to robot. So, they ask your help in it. They have come to know from an oracle that it is guaranteed that such a command exists.\u000aInput\u000aFirst line contains two space separated integers N, M, denoting the dimensions of the grid.\u000aEach of next N lines contains M symbols denoting the map of Chefland.\u000aOutput\u000aOutput one non-empty string corresponding to the command with length \u2264 105 containing only symbols 'U', 'L', 'D', 'R'. it's guaranteed that such pattern exists.\u000aConstraints\u000a4 \u2264 N, M \u2264 20\u000aEach cell can be one of three types: 'C', '.', '*'.\u000aAll border cells are '*'.\u000aExample\u000aInput:\u000a\u000a4 4\u000a****\u000a*.C*\u000a*..*\u000a****\u000a\u000aOutput:\u000aLDUR\u000aInput:\u000a5 6\u000a******\u000a*.C..*\u000a**.***\u000a*....*\u000a******\u000a\u000aOutput:\u000aRLLURUU\u000aExplanation\u000aYou can reach to capital city by feeding this command to robot starting from any city. We have shown one such application of the command for the city on the cell (2, 2).\u000aFrom cell (2, 2), you can go to following cells in order when you apply the command.\u000aStart at (2, 2).\u000aApply the command 'L'. The cell at the left (2, 1) is prohibited, so you stay at (2, 2).\u000aApply the command 'D'. You go to cell (3, 2).\u000aApply the command 'U'. You come back to cell (2, 2).\u000aApply the command 'R'. You come back to cell (2, 3), i.e. the capital city.\u000aAuthor: mgch\u000aTester: karanaggarwal\u000aEditorial: http://discuss.codechef.com/problems/CHEFIHG\u000aTags: bfs cook72 easy-medium graph mgch\u000aDate Added: 10-07-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef lives in Chefland. Chefland can be thought as a two-dimensional grid of dimensions NxM. Some of the cells of the Chefland are prohibited to visit (denoted by '*'). One can never step on such prohibited cells. There is a city at each at each non-prohibited cell (will be denoted by '.' or 'C' (denoting capital city)).\u000aSadly people in the capital city of Chefland (denoted by 'C') are lazy for their shopping. So they invented a robot for carrying their groceries. They want to feed a command of at max 105 characters to the robot such that if the robot starts from any cell (non-prohibited) of the grid, it should be able to visit the capital city during its walk. Each character of the command will be one of 'U', 'D', 'L', 'R' denoting the movement to go up, down, left and right cell from the current cell (provided it exists and the cell is not prohibited to visit). Otherwise, the robot will just stay at its current cell. The characters of the command will be followed in the order from left to right.\u000aNow, after thinking a lot, citizens of Chefland could not come up such a command to feed to robot. So, they ask your help in it. They have come to know from an oracle that it is guaranteed that such a command exists.\u000aInput\u000aFirst line contains two space separated integers N, M, denoting the dimensions of the grid.\u000aEach of next N lines contains M symbols denoting the map of Chefland.\u000aOutput\u000aOutput one non-empty string corresponding to the command with length \u2264 105 containing only symbols 'U', 'L', 'D', 'R'. it's guaranteed that such pattern exists.\u000aConstraints\u000a4 \u2264 N, M \u2264 20\u000aEach cell can be one of three types: 'C', '.', '*'.\u000aAll border cells are '*'.\u000aExample\u000aInput:\u000a\u000a4 4\u000a****\u000a*.C*\u000a*..*\u000a****\u000a\u000aOutput:\u000aLDUR\u000aInput:\u000a5 6\u000a******\u000a*.C..*\u000a**.***\u000a*....*\u000a******\u000a\u000aOutput:\u000aRLLURUU\u000aExplanation\u000aYou can reach to capital city by feeding this command to robot starting from any city. We have shown one such application of the command for the city on the cell (2, 2).\u000aFrom cell (2, 2), you can go to following cells in order when you apply the command.\u000aStart at (2, 2).\u000aApply the command 'L'. The cell at the left (2, 1) is prohibited, so you stay at (2, 2).\u000aApply the command 'D'. You go to cell (3, 2).\u000aApply the command 'U'. You come back to cell (2, 2).\u000aApply the command 'R'. You come back to cell (2, 3), i.e. the capital city.\u000aAuthor: mgch\u000aTester: karanaggarwal\u000aEditorial: http://discuss.codechef.com/problems/CHEFIHG\u000aTags: bfs cook72 easy-medium graph mgch\u000aDate Added: 10-07-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef lives in Chefland. Chefland can be thought as a two-dimensional grid of dimensions NxM. Some of the cells of the Chefland are prohibited to visit (denoted by '*'). One can never step on such prohibited cells. There is a city at each at each non-prohibited cell (will be denoted by '.' or 'C' (denoting capital city)). N M Sadly people in the capital city of Chefland (denoted by 'C') are lazy for their shopping. So they invented a robot for carrying their groceries. They want to feed a command of at max 105 characters to the robot such that if the robot starts from any cell (non-prohibited) of the grid, it should be able to visit the capital city during its walk. Each character of the command will be one of 'U', 'D', 'L', 'R' denoting the movement to go up, down, left and right cell from the current cell (provided it exists and the cell is not prohibited to visit). Otherwise, the robot will just stay at its current cell. The characters of the command will be followed in the order from left to right. 105 5 Now, after thinking a lot, citizens of Chefland could not come up such a command to feed to robot. So, they ask your help in it. They have come to know from an oracle that it is guaranteed that such a command exists. Input First line contains two space separated integers N, M, denoting the dimensions of the grid. N M Each of next N lines contains M symbols denoting the map of Chefland. N M Output Output one non-empty string corresponding to the command with length \u2264 105 containing only symbols 'U', 'L', 'D', 'R'. it's guaranteed that such pattern exists. 105 5 Constraints 4 \u2264 N, M \u2264 20\u000aEach cell can be one of three types: 'C', '.', '*'.\u000aAll border cells are '*'. 4 \u2264 N, M \u2264 20 N, M Each cell can be one of three types: 'C', '.', '*'. All border cells are '*'. Example Input:\u000a\u000a4 4\u000a****\u000a*.C*\u000a*..*\u000a****\u000a\u000aOutput:\u000aLDUR Input: 4 4\u000a****\u000a*.C*\u000a*..*\u000a**** Output: Input:\u000a5 6\u000a******\u000a*.C..*\u000a**.***\u000a*....*\u000a******\u000a\u000aOutput:\u000aRLLURUU Input: 5 6\u000a******\u000a*.C..*\u000a**.***\u000a*....*\u000a****** Output: Explanation You can reach to capital city by feeding this command to robot starting from any city. We have shown one such application of the command for the city on the cell (2, 2). From cell (2, 2), you can go to following cells in order when you apply the command. Start at (2, 2).\u000aApply the command 'L'. The cell at the left (2, 1) is prohibited, so you stay at (2, 2).\u000aApply the command 'D'. You go to cell (3, 2).\u000aApply the command 'U'. You come back to cell (2, 2).\u000aApply the command 'R'. You come back to cell (2, 3), i.e. the capital city. Start at (2, 2). Apply the command 'L'. The cell at the left (2, 1) is prohibited, so you stay at (2, 2). Apply the command 'D'. You go to cell (3, 2). Apply the command 'U'. You come back to cell (2, 2). Apply the command 'R'. You come back to cell (2, 3), i.e. the capital city.  Author: mgch\u000aTester: karanaggarwal\u000aEditorial: http://discuss.codechef.com/problems/CHEFIHG\u000aTags: bfs cook72 easy-medium graph mgch\u000aDate Added: 10-07-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: mgch\u000aTester: karanaggarwal\u000aEditorial: http://discuss.codechef.com/problems/CHEFIHG\u000aTags: bfs cook72 easy-medium graph mgch\u000aDate Added: 10-07-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: mgch Author: mgch mgch Tester: karanaggarwal Tester: karanaggarwal karanaggarwal Editorial: http://discuss.codechef.com/problems/CHEFIHG Editorial: http://discuss.codechef.com/problems/CHEFIHG http://discuss.codechef.com/problems/CHEFIHG Tags: bfs cook72 easy-medium graph mgch Tags: bfs cook72 easy-medium graph mgch bfs cook72 easy-medium graph mgch Date Added: 10-07-2016 Date Added: 10-07-2016 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V bfs cook72 easy-medium graph mgch
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/CHEFIHG
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef lives in Chefland. Chefland can be thought as a two-dimensional grid of dimensions NxM. Some of the cells of the Chefland are prohibited to visit (denoted by '*'). One can never step on such prohibited cells. There is a city at each at each non-prohibited cell (will be denoted by '.' or 'C' (denoting capital city)).
p18
aVSadly people in the capital city of Chefland (denoted by 'C') are lazy for their shopping. So they invented a robot for carrying their groceries. They want to feed a command of at max 105 characters to the robot such that if the robot starts from any cell (non-prohibited) of the grid, it should be able to visit the capital city during its walk. Each character of the command will be one of 'U', 'D', 'L', 'R' denoting the movement to go up, down, left and right cell from the current cell (provided it exists and the cell is not prohibited to visit). Otherwise, the robot will just stay at its current cell. The characters of the command will be followed in the order from left to right.
p19
aVNow, after thinking a lot, citizens of Chefland could not come up such a command to feed to robot. So, they ask your help in it. They have come to know from an oracle that it is guaranteed that such a command exists.
p20
asS'input'
p21
(lp22
VInput
p23
aVFirst line contains two space separated integers N, M, denoting the dimensions of the grid.
p24
aVEach of next N lines contains M symbols denoting the map of Chefland.
p25
aVOutput
p26
aVOutput one non-empty string corresponding to the command with length \u2264 105 containing only symbols 'U', 'L', 'D', 'R'. it's guaranteed that such pattern exists.
p27
asS'constraints'
p28
(lp29
VConstraints
p30
aV4 \u2264 N, M \u2264 20
p31
aVEach cell can be one of three types: 'C', '.', '*'.
p32
aVAll border cells are '*'.
p33
asS'id'
p34
c__builtin__
id
p35
sS'name'
p36
VCHEFIHG
p37
sb.