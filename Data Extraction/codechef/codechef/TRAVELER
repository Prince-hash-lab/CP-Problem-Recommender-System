(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 2 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aChef likes to travel very much. He plans some travel routes and wants to know their lengths. He hired you to make these calculations. But be careful, some of the routes are incorrect. There may be some misspelling in city names or there will be no road between some two consecutive cities in the route. Also note that Chef hates to visit the same city twice during his travel. Even the last city should differ from the first. Two consecutive cities in the route should also be different. So you need to check these conditions for the given routes too.\u000a\u000aYou will be given the list of all cities and all roads between them with their lengths. All roads are one-way. Also you will be given the list of all travel routes that Chef plans. For each route you should check whether it is correct and find its length in this case.\u000aInput\u000aThe first line contains positive integer N, the number of cities. The second line contains space separated list of N strings, city names. All city names are distinct.\u000a\u000aThe third line contains non-negative integer M, the number of available roads. Each of the next M lines describes one road and contains names C1 and C2 of two cities followed by the positive integer D, the length of the one-way road that connects C1 with C2. It is guaranteed that C1 and C2 will be correct names of two different cities from the list of N cities given in the second line of the input file. For each pair of different cities there is at most one road in each direction and each road will be described exactly once in the input file.\u000a\u000aNext line contains positive integer T, the number of travel routes planned by the Chef. Each of the next T lines contains positive integer K followed by K strings, names of cities of the current route. Cities are given in order in which Chef will visit them during his travel.\u000a\u000aAll strings in the input file composed only of lowercase, uppercase letters of the English alphabet and hyphens. Each string is non-empty and has length at most 20. If some line of the input file contains more then one element than consecutive elements of this line are separated by exactly one space. Each line of the input file has no leading or trailing spaces.\u000aOutput\u000aFor each travel route from the input file output a single line containing word ERROR if the route is incorrect and its length otherwise.\u000aConstraints\u000a1 <= N <= 50\u000a0 <= M <= N * (N - 1)\u000a1 <= D <= 20000\u000a1 <= T <= 50\u000a1 <= K <= 50\u000a1 <= length of each string <= 20\u000aExample\u000aInput:\u000a5\u000aDonetsk Kiev New-York Miami Hollywood\u000a9\u000aDonetsk Kiev 560\u000aKiev New-York 7507\u000aNew-York Miami 1764\u000aMiami Hollywood 28\u000aHollywood Miami 30\u000aMiami New-York 1764\u000aKiev Donetsk 550\u000aHollywood New-York 1736\u000aNew-York Hollywood 1738\u000a13\u000a5 Donetsk Kiev New-York Miami Hollywood\u000a5 Hollywood Miami New-York Kiev Donetsk\u000a3 Donetsk Kiev Donetsk\u000a2 Kyiv New-York\u000a3 New-York Hollywood Miami\u000a2 New-York Miami\u000a3 Hollywood New-York Miami\u000a4 Donetsk Kiev Miami Hollywood\u000a2 Donetsk Hollywood\u000a1 Donetsk\u000a2 Mumbai Deli\u000a6 Donetsk Kiev New-York Miami Hollywood New-York\u000a2 Miami Miami\u000a\u000aOutput:\u000a9859\u000aERROR\u000aERROR\u000aERROR\u000a1768\u000a1764\u000a3500\u000aERROR\u000aERROR\u000a0\u000aERROR\u000aERROR\u000aERROR\u000aExplanation\u000aThe 2nd route is incorrect since there is no road from New-York to Kiev. Note however that inverse road from Kiev to New-York exists.\u000aThe 3rd route is incorrect since the first city coincides with the last one.\u000aThe 4th route is incorrect since there is no city with name Kyiv (Probably Chef means Kiev but he misspells this word).\u000aThe 8th route is incorrect since there is no road from Miami to Kiev.\u000aThe 9th route is incorrect since there is no road from Donetsk to Hollywood.\u000aThe 10th route is correct. Note that a route composed of exactly one city is always correct provided that city name is written correctly.\u000aThe 11th route is incorrect since there is no cities with names Mumbai and Deli. (Probably Chef is not so good in geography :))\u000aThe 12th route is incorrect since city New-York is visited twice.\u000aFinally the 13th route is incorrect since we have equal consecutive cities.\u000aAuthor: anton_lunyov\u000aTester: pieguy\u000aEditorial: http://discuss.codechef.com/problems/TRAVELER\u000aTags: anton_lunyov cook15 easy\u000aDate Added: 17-10-2011\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aChef likes to travel very much. He plans some travel routes and wants to know their lengths. He hired you to make these calculations. But be careful, some of the routes are incorrect. There may be some misspelling in city names or there will be no road between some two consecutive cities in the route. Also note that Chef hates to visit the same city twice during his travel. Even the last city should differ from the first. Two consecutive cities in the route should also be different. So you need to check these conditions for the given routes too.\u000a\u000aYou will be given the list of all cities and all roads between them with their lengths. All roads are one-way. Also you will be given the list of all travel routes that Chef plans. For each route you should check whether it is correct and find its length in this case.\u000aInput\u000aThe first line contains positive integer N, the number of cities. The second line contains space separated list of N strings, city names. All city names are distinct.\u000a\u000aThe third line contains non-negative integer M, the number of available roads. Each of the next M lines describes one road and contains names C1 and C2 of two cities followed by the positive integer D, the length of the one-way road that connects C1 with C2. It is guaranteed that C1 and C2 will be correct names of two different cities from the list of N cities given in the second line of the input file. For each pair of different cities there is at most one road in each direction and each road will be described exactly once in the input file.\u000a\u000aNext line contains positive integer T, the number of travel routes planned by the Chef. Each of the next T lines contains positive integer K followed by K strings, names of cities of the current route. Cities are given in order in which Chef will visit them during his travel.\u000a\u000aAll strings in the input file composed only of lowercase, uppercase letters of the English alphabet and hyphens. Each string is non-empty and has length at most 20. If some line of the input file contains more then one element than consecutive elements of this line are separated by exactly one space. Each line of the input file has no leading or trailing spaces.\u000aOutput\u000aFor each travel route from the input file output a single line containing word ERROR if the route is incorrect and its length otherwise.\u000aConstraints\u000a1 <= N <= 50\u000a0 <= M <= N * (N - 1)\u000a1 <= D <= 20000\u000a1 <= T <= 50\u000a1 <= K <= 50\u000a1 <= length of each string <= 20\u000aExample\u000aInput:\u000a5\u000aDonetsk Kiev New-York Miami Hollywood\u000a9\u000aDonetsk Kiev 560\u000aKiev New-York 7507\u000aNew-York Miami 1764\u000aMiami Hollywood 28\u000aHollywood Miami 30\u000aMiami New-York 1764\u000aKiev Donetsk 550\u000aHollywood New-York 1736\u000aNew-York Hollywood 1738\u000a13\u000a5 Donetsk Kiev New-York Miami Hollywood\u000a5 Hollywood Miami New-York Kiev Donetsk\u000a3 Donetsk Kiev Donetsk\u000a2 Kyiv New-York\u000a3 New-York Hollywood Miami\u000a2 New-York Miami\u000a3 Hollywood New-York Miami\u000a4 Donetsk Kiev Miami Hollywood\u000a2 Donetsk Hollywood\u000a1 Donetsk\u000a2 Mumbai Deli\u000a6 Donetsk Kiev New-York Miami Hollywood New-York\u000a2 Miami Miami\u000a\u000aOutput:\u000a9859\u000aERROR\u000aERROR\u000aERROR\u000a1768\u000a1764\u000a3500\u000aERROR\u000aERROR\u000a0\u000aERROR\u000aERROR\u000aERROR\u000aExplanation\u000aThe 2nd route is incorrect since there is no road from New-York to Kiev. Note however that inverse road from Kiev to New-York exists.\u000aThe 3rd route is incorrect since the first city coincides with the last one.\u000aThe 4th route is incorrect since there is no city with name Kyiv (Probably Chef means Kiev but he misspells this word).\u000aThe 8th route is incorrect since there is no road from Miami to Kiev.\u000aThe 9th route is incorrect since there is no road from Donetsk to Hollywood.\u000aThe 10th route is correct. Note that a route composed of exactly one city is always correct provided that city name is written correctly.\u000aThe 11th route is incorrect since there is no cities with names Mumbai and Deli. (Probably Chef is not so good in geography :))\u000aThe 12th route is incorrect since city New-York is visited twice.\u000aFinally the 13th route is incorrect since we have equal consecutive cities.\u000aAuthor: anton_lunyov\u000aTester: pieguy\u000aEditorial: http://discuss.codechef.com/problems/TRAVELER\u000aTags: anton_lunyov cook15 easy\u000aDate Added: 17-10-2011\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Chef likes to travel very much. He plans some travel routes and wants to know their lengths. He hired you to make these calculations. But be careful, some of the routes are incorrect. There may be some misspelling in city names or there will be no road between some two consecutive cities in the route. Also note that Chef hates to visit the same city twice during his travel. Even the last city should differ from the first. Two consecutive cities in the route should also be different. So you need to check these conditions for the given routes too.\u000a\u000aYou will be given the list of all cities and all roads between them with their lengths. All roads are one-way. Also you will be given the list of all travel routes that Chef plans. For each route you should check whether it is correct and find its length in this case.   Input The first line contains positive integer N, the number of cities. The second line contains space separated list of N strings, city names. All city names are distinct.\u000a\u000aThe third line contains non-negative integer M, the number of available roads. Each of the next M lines describes one road and contains names C1 and C2 of two cities followed by the positive integer D, the length of the one-way road that connects C1 with C2. It is guaranteed that C1 and C2 will be correct names of two different cities from the list of N cities given in the second line of the input file. For each pair of different cities there is at most one road in each direction and each road will be described exactly once in the input file.\u000a\u000aNext line contains positive integer T, the number of travel routes planned by the Chef. Each of the next T lines contains positive integer K followed by K strings, names of cities of the current route. Cities are given in order in which Chef will visit them during his travel.\u000a\u000aAll strings in the input file composed only of lowercase, uppercase letters of the English alphabet and hyphens. Each string is non-empty and has length at most 20. If some line of the input file contains more then one element than consecutive elements of this line are separated by exactly one space. Each line of the input file has no leading or trailing spaces. N N   M M C1 1 C2 2 D C1 1 C2 2 C1 1 C2 2 N   T T K K   Output For each travel route from the input file output a single line containing word ERROR if the route is incorrect and its length otherwise. ERROR Constraints  1 <= N <= 50\u000a0 <= M <= N * (N - 1)\u000a1 <= D <= 20000\u000a1 <= T <= 50\u000a1 <= K <= 50\u000a1 <= length of each string <= 20 1 <= N <= 50\u000a0 <= M <= N * (N - 1)\u000a1 <= D <= 20000\u000a1 <= T <= 50\u000a1 <= K <= 50\u000a1 <= length of each string <= 20      Example Input:\u000a5\u000aDonetsk Kiev New-York Miami Hollywood\u000a9\u000aDonetsk Kiev 560\u000aKiev New-York 7507\u000aNew-York Miami 1764\u000aMiami Hollywood 28\u000aHollywood Miami 30\u000aMiami New-York 1764\u000aKiev Donetsk 550\u000aHollywood New-York 1736\u000aNew-York Hollywood 1738\u000a13\u000a5 Donetsk Kiev New-York Miami Hollywood\u000a5 Hollywood Miami New-York Kiev Donetsk\u000a3 Donetsk Kiev Donetsk\u000a2 Kyiv New-York\u000a3 New-York Hollywood Miami\u000a2 New-York Miami\u000a3 Hollywood New-York Miami\u000a4 Donetsk Kiev Miami Hollywood\u000a2 Donetsk Hollywood\u000a1 Donetsk\u000a2 Mumbai Deli\u000a6 Donetsk Kiev New-York Miami Hollywood New-York\u000a2 Miami Miami\u000a\u000aOutput:\u000a9859\u000aERROR\u000aERROR\u000aERROR\u000a1768\u000a1764\u000a3500\u000aERROR\u000aERROR\u000a0\u000aERROR\u000aERROR\u000aERROR Input: Output: Explanation nd New-York Kiev Kiev New-York  rd  th Kyiv Kiev  th Miami Kiev  th Donetsk Hollywood  th  th Mumbai Deli  th New-York  th  Author: anton_lunyov\u000aTester: pieguy\u000aEditorial: http://discuss.codechef.com/problems/TRAVELER\u000aTags: anton_lunyov cook15 easy\u000aDate Added: 17-10-2011\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: anton_lunyov\u000aTester: pieguy\u000aEditorial: http://discuss.codechef.com/problems/TRAVELER\u000aTags: anton_lunyov cook15 easy\u000aDate Added: 17-10-2011\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: anton_lunyov Author: anton_lunyov anton_lunyov Tester: pieguy Tester: pieguy pieguy Editorial: http://discuss.codechef.com/problems/TRAVELER Editorial: http://discuss.codechef.com/problems/TRAVELER http://discuss.codechef.com/problems/TRAVELER Tags: anton_lunyov cook15 easy Tags: anton_lunyov cook15 easy anton_lunyov cook15 easy Date Added: 17-10-2011 Date Added: 17-10-2011 Time Limit: 2 sec Time Limit: 2 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V anton_lunyov cook15 easy
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/TRAVELER
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVChef likes to travel very much. He plans some travel routes and wants to know their lengths. He hired you to make these calculations. But be careful, some of the routes are incorrect. There may be some misspelling in city names or there will be no road between some two consecutive cities in the route. Also note that Chef hates to visit the same city twice during his travel. Even the last city should differ from the first. Two consecutive cities in the route should also be different. So you need to check these conditions for the given routes too.
p17
aV
p18
aVYou will be given the list of all cities and all roads between them with their lengths. All roads are one-way. Also you will be given the list of all travel routes that Chef plans. For each route you should check whether it is correct and find its length in this case.
p19
asS'input'
p20
(lp21
VInput
p22
aVThe first line contains positive integer N, the number of cities. The second line contains space separated list of N strings, city names. All city names are distinct.
p23
ag18
aVThe third line contains non-negative integer M, the number of available roads. Each of the next M lines describes one road and contains names C1 and C2 of two cities followed by the positive integer D, the length of the one-way road that connects C1 with C2. It is guaranteed that C1 and C2 will be correct names of two different cities from the list of N cities given in the second line of the input file. For each pair of different cities there is at most one road in each direction and each road will be described exactly once in the input file.
p24
ag18
aVNext line contains positive integer T, the number of travel routes planned by the Chef. Each of the next T lines contains positive integer K followed by K strings, names of cities of the current route. Cities are given in order in which Chef will visit them during his travel.
p25
ag18
aVAll strings in the input file composed only of lowercase, uppercase letters of the English alphabet and hyphens. Each string is non-empty and has length at most 20. If some line of the input file contains more then one element than consecutive elements of this line are separated by exactly one space. Each line of the input file has no leading or trailing spaces.
p26
aVOutput
p27
aVFor each travel route from the input file output a single line containing word ERROR if the route is incorrect and its length otherwise.
p28
asS'constraints'
p29
(lp30
VConstraints
p31
aV1 <= N <= 50
p32
aV0 <= M <= N * (N - 1)
p33
aV1 <= D <= 20000
p34
aV1 <= T <= 50
p35
aV1 <= K <= 50
p36
aV1 <= length of each string <= 20
p37
asS'id'
p38
c__builtin__
id
p39
sS'name'
p40
VTRAVELER
p41
sb.