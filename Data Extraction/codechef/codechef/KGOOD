(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef Al Gorithm was reading a book about climate and oceans when he encountered the word \u201cglaciological\u201d. He thought it was quite curious, because it has the following interesting property: For every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 1.\u000aChef Al was happy about this and called such words 1-good words. He also generalized the concept: He said a word was K-good if for every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 K.\u000aNow, the Chef likes K-good words a lot and so was wondering: Given some word w, how many letters does he have to remove to make it K-good?\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aEach test case consists of a single line containing two things: a word w and an integer K, separated by a space.\u000aOutput\u000aFor each test case, output a single line containing a single integer: the minimum number of letters he has to remove to make the word K-good.\u000aConstraints\u000a1 \u2264 T \u2264 30\u000a1 \u2264 |w| \u2264 105\u000a0 \u2264 K \u2264 105\u000aw contains only lowercase English letters.\u000aExample\u000aInput:\u000a4\u000aglaciological 1\u000ateammate 0\u000apossessions 3\u000adefenselessness 3\u000a\u000aOutput:\u000a0\u000a0\u000a1\u000a2\u000aExplanation\u000aExample case 1. The word \u201cglaciological\u201d is already 1-good, so the Chef doesn't have to remove any letter.\u000aExample case 2. Similarly, \u201cteammate\u201d is already 0-good.\u000aExample case 3. The word \u201cpossessions\u201d is 4-good. To make it 3-good, the Chef can remove the last s to make \u201cpossession\u201d.\u000aExample case 4. The word \u201cdefenselessness\u201d is 4-good. To make it 3-good, Chef Al can remove an s and an e to make, for example, \u201cdefenslesness\u201d. Note that the word doesn't have to be a valid English word.\u000aAuthor: kevinsogo\u000aTester: kevinsogo,xcwgf666,antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/KGOOD\u000aTags: easy greedy-algo kevinsogo snckql16 strings\u000aDate Added: 25-05-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef Al Gorithm was reading a book about climate and oceans when he encountered the word \u201cglaciological\u201d. He thought it was quite curious, because it has the following interesting property: For every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 1.\u000aChef Al was happy about this and called such words 1-good words. He also generalized the concept: He said a word was K-good if for every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 K.\u000aNow, the Chef likes K-good words a lot and so was wondering: Given some word w, how many letters does he have to remove to make it K-good?\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aEach test case consists of a single line containing two things: a word w and an integer K, separated by a space.\u000aOutput\u000aFor each test case, output a single line containing a single integer: the minimum number of letters he has to remove to make the word K-good.\u000aConstraints\u000a1 \u2264 T \u2264 30\u000a1 \u2264 |w| \u2264 105\u000a0 \u2264 K \u2264 105\u000aw contains only lowercase English letters.\u000aExample\u000aInput:\u000a4\u000aglaciological 1\u000ateammate 0\u000apossessions 3\u000adefenselessness 3\u000a\u000aOutput:\u000a0\u000a0\u000a1\u000a2\u000aExplanation\u000aExample case 1. The word \u201cglaciological\u201d is already 1-good, so the Chef doesn't have to remove any letter.\u000aExample case 2. Similarly, \u201cteammate\u201d is already 0-good.\u000aExample case 3. The word \u201cpossessions\u201d is 4-good. To make it 3-good, the Chef can remove the last s to make \u201cpossession\u201d.\u000aExample case 4. The word \u201cdefenselessness\u201d is 4-good. To make it 3-good, Chef Al can remove an s and an e to make, for example, \u201cdefenslesness\u201d. Note that the word doesn't have to be a valid English word.\u000aAuthor: kevinsogo\u000aTester: kevinsogo,xcwgf666,antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/KGOOD\u000aTags: easy greedy-algo kevinsogo snckql16 strings\u000aDate Added: 25-05-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef Al Gorithm was reading a book about climate and oceans when he encountered the word \u201cglaciological\u201d. He thought it was quite curious, because it has the following interesting property: For every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 1. glaciological x y |x - y| \u2264 1 Chef Al was happy about this and called such words 1-good words. He also generalized the concept: He said a word was K-good if for every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 K. 1-good K-good for every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 K x y |x - y| \u2264 K Now, the Chef likes K-good words a lot and so was wondering: Given some word w, how many letters does he have to remove to make it K-good? K w K Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. T T Each test case consists of a single line containing two things: a word w and an integer K, separated by a space. w K Output For each test case, output a single line containing a single integer: the minimum number of letters he has to remove to make the word K-good. K Constraints 1 \u2264 T \u2264 30\u000a1 \u2264 |w| \u2264 105\u000a0 \u2264 K \u2264 105\u000aw contains only lowercase English letters. 1 \u2264 T \u2264 30 1 T 30 1 \u2264 |w| \u2264 105 1 |w| 105 5 0 \u2264 K \u2264 105 0 K 105 5 w contains only lowercase English letters. w Example Input:\u000a4\u000aglaciological 1\u000ateammate 0\u000apossessions 3\u000adefenselessness 3\u000a\u000aOutput:\u000a0\u000a0\u000a1\u000a2 Input: Output: Explanation Example case 1. The word \u201cglaciological\u201d is already 1-good, so the Chef doesn't have to remove any letter. Example case 1. glaciological Example case 2. Similarly, \u201cteammate\u201d is already 0-good. Example case 2. teammate Example case 3. The word \u201cpossessions\u201d is 4-good. To make it 3-good, the Chef can remove the last s to make \u201cpossession\u201d. Example case 3. possessions s possession Example case 4. The word \u201cdefenselessness\u201d is 4-good. To make it 3-good, Chef Al can remove an s and an e to make, for example, \u201cdefenslesness\u201d. Note that the word doesn't have to be a valid English word. Example case 4. defenselessness s e defenslesness  Author: kevinsogo\u000aTester: kevinsogo,xcwgf666,antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/KGOOD\u000aTags: easy greedy-algo kevinsogo snckql16 strings\u000aDate Added: 25-05-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: kevinsogo\u000aTester: kevinsogo,xcwgf666,antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/KGOOD\u000aTags: easy greedy-algo kevinsogo snckql16 strings\u000aDate Added: 25-05-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: kevinsogo Author: kevinsogo kevinsogo Tester: kevinsogo,xcwgf666,antoniuk1 Tester: kevinsogo,xcwgf666,antoniuk1 kevinsogo,xcwgf666,antoniuk1 Editorial: http://discuss.codechef.com/problems/KGOOD Editorial: http://discuss.codechef.com/problems/KGOOD http://discuss.codechef.com/problems/KGOOD Tags: easy greedy-algo kevinsogo snckql16 strings Tags: easy greedy-algo kevinsogo snckql16 strings easy greedy-algo kevinsogo snckql16 strings Date Added: 25-05-2016 Date Added: 25-05-2016 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V easy greedy-algo kevinsogo snckql16 strings
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/KGOOD
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef Al Gorithm was reading a book about climate and oceans when he encountered the word \u201cglaciological\u201d. He thought it was quite curious, because it has the following interesting property: For every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 1.
p18
aVChef Al was happy about this and called such words 1-good words. He also generalized the concept: He said a word was K-good if for every two letters in the word, if the first appears x times and the second appears y times, then |x - y| \u2264 K.
p19
aVNow, the Chef likes K-good words a lot and so was wondering: Given some word w, how many letters does he have to remove to make it K-good?
p20
asS'input'
p21
(lp22
VInput
p23
aVThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
p24
aVEach test case consists of a single line containing two things: a word w and an integer K, separated by a space.
p25
aVOutput
p26
aVFor each test case, output a single line containing a single integer: the minimum number of letters he has to remove to make the word K-good.
p27
asS'constraints'
p28
(lp29
VConstraints
p30
aV1 \u2264 T \u2264 30
p31
aV1 \u2264 |w| \u2264 105
p32
aV0 \u2264 K \u2264 105
p33
aVw contains only lowercase English letters.
p34
asS'id'
p35
c__builtin__
id
p36
sS'name'
p37
VKGOOD
p38
sb.