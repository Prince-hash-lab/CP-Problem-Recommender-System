(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aYou are given an array A consisting of N integers. A group of disjoint subarrays in it will be a collection of subarrays of the array. Formally a group of subarrays consisting of K subarrays can be denoted by 2 * K indices, [i1, j1], [i2, j2] , ..., [iK, jK], such that i1 \u2264 j1 < i2 \u2264 j2 < ... < iK \u2264 jK.\u000aFor example, in array A = {5, 6, 7}. A group of subarrays could be the subarrays denoted by indices [1, 1], [2, 3]. The subarray corresponding to indices [1, 1] will be {5}. The subarray corresponding to indices [2, 3] will be {6, 7}. So, we have i1 = 1, j1 = 1, i2 = 2, j2 = 3 and K = 2. You can check that the indices satisfy the property i1 \u2264 j1 < i2 \u2264 j2.\u000aNote that the group of subarrays [1, 2] and [2, 3] won't be disjoint, as it does not satisfy the property j1 < i2. In other words, the index 2 is common in two subarrays, which should not happen.\u000aLet M denote the maximum value of K in a group of K disjoint subarrays of array A, such that there are not two elements (not indices) common in those subarrays. This means, that if the group contained subarrays [A[i1], A[j1], [A[i2], A[j2]] , ..., A[[iK, jK]], then there should not be an element which is present in more than one subarrays.\u000aYou have to find maximum number of group of disjoint subarrays that number of subarrays in those groups are equal to M. As the answer could be large, output it modulo 109 + 7.\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aFirst line of the each test case contains a single integer N denoting number of elements in array A.\u000aSecond line of each test case contains N space separated integers denoting the elements of the array A\u000aOutput\u000aFor each test case, output a single line corresponding to maximum number of group of disjoint subarrays of array A.\u000aConstraints\u000a1 \u2264 T, N \u2264 105\u000a1 \u2264 Ai \u2264 n\u000aSum of N over all the test cases in a single file won't exceed 105\u000aSubtasks\u000aSubtask #1 (30 points)\u000a1 \u2264 T, N \u2264 103\u000a1 \u2264 Ai \u2264 n\u000aSum of N over all the test cases in a single file won't exceed 103\u000aSubtask #2 (70 points)\u000aoriginal constraints\u000aExample\u000aInput\u000a3\u000a2\u000a3 4\u000a3\u000a1 2 2\u000a5\u000a1 1 2 2 2\u000a\u000aOutput:\u000a1\u000a3\u000a18\u000aExplanation\u000aExample case 1. M will be equal to 2. The subarrays will be {[1, 1], [2, 2]}.\u000aExample case 2. M will be equal to 3. The subarrays will be {[1, 1], [2, 2]}, {[1, 1], [3, 3]} and {[1, 1], [2, 3]}. Note that {[2, 2], [3, 3]} won't be a non-intersecting subarray as A[2] = 2 and A[3] = 2. So, 2 is common in both these subarrays.\u000aAuthor: admin2\u000aTags: admin2\u000aDate Added: 23-06-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aYou are given an array A consisting of N integers. A group of disjoint subarrays in it will be a collection of subarrays of the array. Formally a group of subarrays consisting of K subarrays can be denoted by 2 * K indices, [i1, j1], [i2, j2] , ..., [iK, jK], such that i1 \u2264 j1 < i2 \u2264 j2 < ... < iK \u2264 jK.\u000aFor example, in array A = {5, 6, 7}. A group of subarrays could be the subarrays denoted by indices [1, 1], [2, 3]. The subarray corresponding to indices [1, 1] will be {5}. The subarray corresponding to indices [2, 3] will be {6, 7}. So, we have i1 = 1, j1 = 1, i2 = 2, j2 = 3 and K = 2. You can check that the indices satisfy the property i1 \u2264 j1 < i2 \u2264 j2.\u000aNote that the group of subarrays [1, 2] and [2, 3] won't be disjoint, as it does not satisfy the property j1 < i2. In other words, the index 2 is common in two subarrays, which should not happen.\u000aLet M denote the maximum value of K in a group of K disjoint subarrays of array A, such that there are not two elements (not indices) common in those subarrays. This means, that if the group contained subarrays [A[i1], A[j1], [A[i2], A[j2]] , ..., A[[iK, jK]], then there should not be an element which is present in more than one subarrays.\u000aYou have to find maximum number of group of disjoint subarrays that number of subarrays in those groups are equal to M. As the answer could be large, output it modulo 109 + 7.\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aFirst line of the each test case contains a single integer N denoting number of elements in array A.\u000aSecond line of each test case contains N space separated integers denoting the elements of the array A\u000aOutput\u000aFor each test case, output a single line corresponding to maximum number of group of disjoint subarrays of array A.\u000aConstraints\u000a1 \u2264 T, N \u2264 105\u000a1 \u2264 Ai \u2264 n\u000aSum of N over all the test cases in a single file won't exceed 105\u000aSubtasks\u000aSubtask #1 (30 points)\u000a1 \u2264 T, N \u2264 103\u000a1 \u2264 Ai \u2264 n\u000aSum of N over all the test cases in a single file won't exceed 103\u000aSubtask #2 (70 points)\u000aoriginal constraints\u000aExample\u000aInput\u000a3\u000a2\u000a3 4\u000a3\u000a1 2 2\u000a5\u000a1 1 2 2 2\u000a\u000aOutput:\u000a1\u000a3\u000a18\u000aExplanation\u000aExample case 1. M will be equal to 2. The subarrays will be {[1, 1], [2, 2]}.\u000aExample case 2. M will be equal to 3. The subarrays will be {[1, 1], [2, 2]}, {[1, 1], [3, 3]} and {[1, 1], [2, 3]}. Note that {[2, 2], [3, 3]} won't be a non-intersecting subarray as A[2] = 2 and A[3] = 2. So, 2 is common in both these subarrays.\u000aAuthor: admin2\u000aTags: admin2\u000aDate Added: 23-06-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. You are given an array A consisting of N integers. A group of disjoint subarrays in it will be a collection of subarrays of the array. Formally a group of subarrays consisting of K subarrays can be denoted by 2 * K indices, [i1, j1], [i2, j2] , ..., [iK, jK], such that i1 \u2264 j1 < i2 \u2264 j2 < ... < iK \u2264 jK. A N K 2 * K [i1, j1] 1 1 [i2, j2] 2 2 [iK, jK] K K i1 \u2264 j1 < i2 \u2264 j2 1 1 2 2 iK \u2264 jK. K K For example, in array A = {5, 6, 7}. A group of subarrays could be the subarrays denoted by indices [1, 1], [2, 3]. The subarray corresponding to indices [1, 1] will be {5}. The subarray corresponding to indices [2, 3] will be {6, 7}. So, we have i1 = 1, j1 = 1, i2 = 2, j2 = 3 and K = 2. You can check that the indices satisfy the property i1 \u2264 j1 < i2 \u2264 j2. A = {5, 6, 7} [1, 1], [2, 3] [1, 1] {5} [2, 3] {6, 7} i1 = 1, j1 = 1, i2 = 2, j2 = 3 1 1 2 2 K = 2 i1 \u2264 j1 < i2 \u2264 j2 1 1 2 2 Note that the group of subarrays [1, 2] and [2, 3] won't be disjoint, as it does not satisfy the property j1 < i2. In other words, the index 2 is common in two subarrays, which should not happen. [1, 2] [2, 3] j1 < i2 1 2 Let M denote the maximum value of K in a group of K disjoint subarrays of array A, such that there are not two elements (not indices) common in those subarrays. This means, that if the group contained subarrays [A[i1], A[j1], [A[i2], A[j2]] , ..., A[[iK, jK]], then there should not be an element which is present in more than one subarrays. M K K A not indices [A[i1], A[j1] 1 1 [A[i2], A[j2]] 2 2 A[[iK, jK]] K K You have to find maximum number of group of disjoint subarrays that number of subarrays in those groups are equal to M. As the answer could be large, output it modulo 109 + 7. M 109 + 7 9 Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. T T First line of the each test case contains a single integer N denoting number of elements in array A. N A Second line of each test case contains N space separated integers denoting the elements of the array A N A Output For each test case, output a single line corresponding to maximum number of group of disjoint subarrays of array A. A Constraints 1 \u2264 T, N \u2264 105\u000a1 \u2264 Ai \u2264 n\u000aSum of N over all the test cases in a single file won't exceed 105 1 \u2264 T, N \u2264 105 T, N 105 5 1 \u2264 Ai \u2264 n Ai i n Sum of N over all the test cases in a single file won't exceed 105 N 105 5 Subtasks Subtask #1 (30 points) Subtask #1 (30 points)  1 \u2264 T, N \u2264 103\u000a1 \u2264 Ai \u2264 n\u000aSum of N over all the test cases in a single file won't exceed 103 1 \u2264 T, N \u2264 103 T, N 103 3 1 \u2264 Ai \u2264 n Ai i n Sum of N over all the test cases in a single file won't exceed 103 N 103 3  Subtask #2 (70 points) Subtask #2 (70 points) original constraints original constraints Example Input\u000a3\u000a2\u000a3 4\u000a3\u000a1 2 2\u000a5\u000a1 1 2 2 2\u000a\u000aOutput:\u000a1\u000a3\u000a18 Input Output: Explanation Example case 1. M will be equal to 2. The subarrays will be {[1, 1], [2, 2]}. Example case 1. M Example case 2. M will be equal to 3. The subarrays will be {[1, 1], [2, 2]}, {[1, 1], [3, 3]} and {[1, 1], [2, 3]}. Note that {[2, 2], [3, 3]} won't be a non-intersecting subarray as A[2] = 2 and A[3] = 2. So, 2 is common in both these subarrays. Example case 2. M  Author: admin2\u000aTags: admin2\u000aDate Added: 23-06-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: admin2\u000aTags: admin2\u000aDate Added: 23-06-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: admin2 Author: admin2 admin2 Tags: admin2 Tags: admin2 admin2 Date Added: 23-06-2016 Date Added: 23-06-2016 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V admin2
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/MXSUBARR
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVYou are given an array A consisting of N integers. A group of disjoint subarrays in it will be a collection of subarrays of the array. Formally a group of subarrays consisting of K subarrays can be denoted by 2 * K indices, [i1, j1], [i2, j2] , ..., [iK, jK], such that i1 \u2264 j1 < i2 \u2264 j2 < ... < iK \u2264 jK.
p17
aVFor example, in array A = {5, 6, 7}. A group of subarrays could be the subarrays denoted by indices [1, 1], [2, 3]. The subarray corresponding to indices [1, 1] will be {5}. The subarray corresponding to indices [2, 3] will be {6, 7}. So, we have i1 = 1, j1 = 1, i2 = 2, j2 = 3 and K = 2. You can check that the indices satisfy the property i1 \u2264 j1 < i2 \u2264 j2.
p18
aVNote that the group of subarrays [1, 2] and [2, 3] won't be disjoint, as it does not satisfy the property j1 < i2. In other words, the index 2 is common in two subarrays, which should not happen.
p19
aVLet M denote the maximum value of K in a group of K disjoint subarrays of array A, such that there are not two elements (not indices) common in those subarrays. This means, that if the group contained subarrays [A[i1], A[j1], [A[i2], A[j2]] , ..., A[[iK, jK]], then there should not be an element which is present in more than one subarrays.
p20
aVYou have to find maximum number of group of disjoint subarrays that number of subarrays in those groups are equal to M. As the answer could be large, output it modulo 109 + 7.
p21
asS'input'
p22
(lp23
VInput
p24
aVThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
p25
aVFirst line of the each test case contains a single integer N denoting number of elements in array A.
p26
aVSecond line of each test case contains N space separated integers denoting the elements of the array A
p27
aVOutput
p28
aVFor each test case, output a single line corresponding to maximum number of group of disjoint subarrays of array A.
p29
asS'constraints'
p30
(lp31
VConstraints
p32
aV1 \u2264 T, N \u2264 105
p33
aV1 \u2264 Ai \u2264 n
p34
aVSum of N over all the test cases in a single file won't exceed 105
p35
aVSubtasks
p36
aVSubtask #1 (30 points)
p37
aV1 \u2264 T, N \u2264 103
p38
aV1 \u2264 Ai \u2264 n
p39
aVSum of N over all the test cases in a single file won't exceed 103
p40
aVSubtask #2 (70 points)
p41
aVoriginal constraints
p42
asS'id'
p43
c__builtin__
id
p44
sS'name'
p45
VMXSUBARR
p46
sb.