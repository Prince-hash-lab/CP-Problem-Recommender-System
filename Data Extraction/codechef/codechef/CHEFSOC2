(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef is a big fan of soccer! He loves soccer so much, that he even invented soccer for his pet dogs! Here are the rules of the game:\u000aThere are N dogs numerated from 1 to N stay in a line, so dogs i and i + 1 are adjacent.\u000aThere is a ball which dogs will pass around. Initially, dog s has the ball.\u000aA dog with ball can pass it to another dog. If the current pass-strength of dog is x, then it can pass the ball to either dog i - x or dog i + x (provided such dog/s exist).\u000aTo make it even more exciting, Chef created an array A of M positive integers denoting pass strengths. In i-th pass, current pass-strength of the dog making the pass will be given by Ai.\u000aChef asks dogs to execute these M passes one by one. As stated before, dog s will make the first pass, then some other dog and so on till M passes.\u000aDogs quickly found out that there can be lot of possible sequences of passes which will end up with a dog having the ball. Now each dog asks your help in finding number of different pass sequences which result in this dog ending up ball. Two pass sequences are considered different if after some number of passes they lead the ball to different dogs. As the answer could be quite large, output it modulo 109 + 7 (1000000007).\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aThe first line of each test case contains three space separated integers N, M, s denoting the number of dogs, number of pass strengths and number of dog having a ball at the beginning.\u000aThe second line contains M space-separated integers A1, A2, ..., AM denoting the pass strengths.\u000aOutput\u000aFor each test case, output a single line containing N space-separated integers, where i-th integer should be equal to number of different valid pass sequences leading the ball to i-th dog modulo 109 + 7.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000a1 \u2264 N, M \u2264 10^3\u000a1 \u2264 s \u2264 N\u000a1 \u2264 Ai \u2264 10^3\u000aSubtasks\u000aSubtask #1 (30 points) : N, M \u2264 10\u000aSubtask #2 (70 points) : Original constraints\u000aExample\u000aInput:\u000a3\u000a3 2 2\u000a1 2 \u000a3 3 3\u000a1 1 1\u000a3 1 1\u000a3\u000a\u000aOutput:\u000a1 0 1\u000a0 2 0\u000a0 0 0\u000aExplanation\u000aExample case 1.\u000aPossible sequence for dog 1 is 2->3->1.\u000aPossible sequence for dog 3 is 2->1->3.\u000aExample case 2.\u000aPossible sequences for dog 2 are 3->2->1->2 and 3->2->3->2.\u000aExample case 3.\u000aThere are no valid sequences for such input.\u000aAuthor: berezin\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFSOC2\u000aTags: berezin dp easy may16\u000aDate Added: 12-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef is a big fan of soccer! He loves soccer so much, that he even invented soccer for his pet dogs! Here are the rules of the game:\u000aThere are N dogs numerated from 1 to N stay in a line, so dogs i and i + 1 are adjacent.\u000aThere is a ball which dogs will pass around. Initially, dog s has the ball.\u000aA dog with ball can pass it to another dog. If the current pass-strength of dog is x, then it can pass the ball to either dog i - x or dog i + x (provided such dog/s exist).\u000aTo make it even more exciting, Chef created an array A of M positive integers denoting pass strengths. In i-th pass, current pass-strength of the dog making the pass will be given by Ai.\u000aChef asks dogs to execute these M passes one by one. As stated before, dog s will make the first pass, then some other dog and so on till M passes.\u000aDogs quickly found out that there can be lot of possible sequences of passes which will end up with a dog having the ball. Now each dog asks your help in finding number of different pass sequences which result in this dog ending up ball. Two pass sequences are considered different if after some number of passes they lead the ball to different dogs. As the answer could be quite large, output it modulo 109 + 7 (1000000007).\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aThe first line of each test case contains three space separated integers N, M, s denoting the number of dogs, number of pass strengths and number of dog having a ball at the beginning.\u000aThe second line contains M space-separated integers A1, A2, ..., AM denoting the pass strengths.\u000aOutput\u000aFor each test case, output a single line containing N space-separated integers, where i-th integer should be equal to number of different valid pass sequences leading the ball to i-th dog modulo 109 + 7.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000a1 \u2264 N, M \u2264 10^3\u000a1 \u2264 s \u2264 N\u000a1 \u2264 Ai \u2264 10^3\u000aSubtasks\u000aSubtask #1 (30 points) : N, M \u2264 10\u000aSubtask #2 (70 points) : Original constraints\u000aExample\u000aInput:\u000a3\u000a3 2 2\u000a1 2 \u000a3 3 3\u000a1 1 1\u000a3 1 1\u000a3\u000a\u000aOutput:\u000a1 0 1\u000a0 2 0\u000a0 0 0\u000aExplanation\u000aExample case 1.\u000aPossible sequence for dog 1 is 2->3->1.\u000aPossible sequence for dog 3 is 2->1->3.\u000aExample case 2.\u000aPossible sequences for dog 2 are 3->2->1->2 and 3->2->3->2.\u000aExample case 3.\u000aThere are no valid sequences for such input.\u000aAuthor: berezin\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFSOC2\u000aTags: berezin dp easy may16\u000aDate Added: 12-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef is a big fan of soccer! He loves soccer so much, that he even invented soccer for his pet dogs! Here are the rules of the game: There are N dogs numerated from 1 to N stay in a line, so dogs i and i + 1 are adjacent.\u000aThere is a ball which dogs will pass around. Initially, dog s has the ball.\u000aA dog with ball can pass it to another dog. If the current pass-strength of dog is x, then it can pass the ball to either dog i - x or dog i + x (provided such dog/s exist). There are N dogs numerated from 1 to N stay in a line, so dogs i and i + 1 are adjacent. N 1 N i i + 1 There is a ball which dogs will pass around. Initially, dog s has the ball. s A dog with ball can pass it to another dog. If the current pass-strength of dog is x, then it can pass the ball to either dog i - x or dog i + x (provided such dog/s exist). x i - x i + x To make it even more exciting, Chef created an array A of M positive integers denoting pass strengths. In i-th pass, current pass-strength of the dog making the pass will be given by Ai.\u000aChef asks dogs to execute these M passes one by one. As stated before, dog s will make the first pass, then some other dog and so on till M passes. A M Ai i  M s M Dogs quickly found out that there can be lot of possible sequences of passes which will end up with a dog having the ball. Now each dog asks your help in finding number of different pass sequences which result in this dog ending up ball. Two pass sequences are considered different if after some number of passes they lead the ball to different dogs. As the answer could be quite large, output it modulo 109 + 7 (1000000007). 109 + 7 (1000000007) 9 Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aThe first line of each test case contains three space separated integers N, M, s denoting the number of dogs, number of pass strengths and number of dog having a ball at the beginning.\u000aThe second line contains M space-separated integers A1, A2, ..., AM denoting the pass strengths. The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. T T The first line of each test case contains three space separated integers N, M, s denoting the number of dogs, number of pass strengths and number of dog having a ball at the beginning. N, M, s The second line contains M space-separated integers A1, A2, ..., AM denoting the pass strengths. M A1 1 A2 2 AM M Output For each test case, output a single line containing N space-separated integers, where i-th integer should be equal to number of different valid pass sequences leading the ball to i-th dog modulo 109 + 7. For each test case, output a single line containing N space-separated integers, where i-th integer should be equal to number of different valid pass sequences leading the ball to i-th dog modulo 109 + 7. N 109 + 7 9 Constraints 1 \u2264 T \u2264 10\u000a1 \u2264 N, M \u2264 10^3\u000a1 \u2264 s \u2264 N\u000a1 \u2264 Ai \u2264 10^3 1 \u2264 T \u2264 10 1 T 10 1 \u2264 N, M \u2264 10^3 1 N, M 10^3 1 \u2264 s \u2264 N 1 s N 1 \u2264 Ai \u2264 10^3 1 Ai i 10^3 Subtasks Subtask #1 (30 points) : N, M \u2264 10\u000aSubtask #2 (70 points) : Original constraints Subtask #1 (30 points) : N, M \u2264 10 N, M 10 Subtask #2 (70 points) : Original constraints Original constraints Example Input:\u000a3\u000a3 2 2\u000a1 2 \u000a3 3 3\u000a1 1 1\u000a3 1 1\u000a3\u000a\u000aOutput:\u000a1 0 1\u000a0 2 0\u000a0 0 0 Input: Output: Explanation Example case 1.\u000aPossible sequence for dog 1 is 2->3->1.\u000aPossible sequence for dog 3 is 2->1->3. Example case 1.  1 2->3->1  3 2->1->3 Example case 2.\u000aPossible sequences for dog 2 are 3->2->1->2 and 3->2->3->2. Example case 2.  2 3->2->1->2 3->2->3->2 Example case 3.\u000aThere are no valid sequences for such input. Example case 3.   Author: berezin\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFSOC2\u000aTags: berezin dp easy may16\u000aDate Added: 12-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: berezin\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFSOC2\u000aTags: berezin dp easy may16\u000aDate Added: 12-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: berezin Author: berezin berezin Tester: kevinsogo Tester: kevinsogo kevinsogo Editorial: http://discuss.codechef.com/problems/CHEFSOC2 Editorial: http://discuss.codechef.com/problems/CHEFSOC2 http://discuss.codechef.com/problems/CHEFSOC2 Tags: berezin dp easy may16 Tags: berezin dp easy may16 berezin dp easy may16 Date Added: 12-04-2016 Date Added: 12-04-2016 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V berezin dp easy may16
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/CHEFSOC2
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef is a big fan of soccer! He loves soccer so much, that he even invented soccer for his pet dogs! Here are the rules of the game:
p18
aVThere are N dogs numerated from 1 to N stay in a line, so dogs i and i + 1 are adjacent.
p19
aVThere is a ball which dogs will pass around. Initially, dog s has the ball.
p20
aVA dog with ball can pass it to another dog. If the current pass-strength of dog is x, then it can pass the ball to either dog i - x or dog i + x (provided such dog/s exist).
p21
aVTo make it even more exciting, Chef created an array A of M positive integers denoting pass strengths. In i-th pass, current pass-strength of the dog making the pass will be given by Ai.
p22
aVChef asks dogs to execute these M passes one by one. As stated before, dog s will make the first pass, then some other dog and so on till M passes.
p23
aVDogs quickly found out that there can be lot of possible sequences of passes which will end up with a dog having the ball. Now each dog asks your help in finding number of different pass sequences which result in this dog ending up ball. Two pass sequences are considered different if after some number of passes they lead the ball to different dogs. As the answer could be quite large, output it modulo 109 + 7 (1000000007).
p24
asS'input'
p25
(lp26
VInput
p27
aVThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
p28
aVThe first line of each test case contains three space separated integers N, M, s denoting the number of dogs, number of pass strengths and number of dog having a ball at the beginning.
p29
aVThe second line contains M space-separated integers A1, A2, ..., AM denoting the pass strengths.
p30
aVOutput
p31
aVFor each test case, output a single line containing N space-separated integers, where i-th integer should be equal to number of different valid pass sequences leading the ball to i-th dog modulo 109 + 7.
p32
asS'constraints'
p33
(lp34
VConstraints
p35
aV1 \u2264 T \u2264 10
p36
aV1 \u2264 N, M \u2264 10^3
p37
aV1 \u2264 s \u2264 N
p38
aV1 \u2264 Ai \u2264 10^3
p39
aVSubtasks
p40
aVSubtask #1 (30 points) : N, M \u2264 10
p41
aVSubtask #2 (70 points) : Original constraints
p42
asS'id'
p43
c__builtin__
id
p44
sS'name'
p45
VCHEFSOC2
p46
sb.