(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aTuzik and Vanya are playing the following game.\u000aThey have an N × M board and a chip to indicate the current game position. The chip can be placed on any one cell of the game board, each of which is uniquely identified by an ordered pair of positive integers (r, c), where 1 \u2264 r \u2264 N is the row number and 1 \u2264 c \u2264 M is the column number.\u000aInitially, the chip is placed at the cell identified as (1, 1). For his move, a player can move it either 1, 2 or 3 cells up, or 1 or 2 cells to the right. The player who can not move the chip loses. In other words, a player suffers defeat if the chip is placed in the cell (N, M) at the start of his turn.\u000aTuzik starts the game. You have to determine who will win the game if both players play optimally.\u000aInput\u000aThe first line contains an integer T denoting the number of tests. Each of the following T lines contain two integers N and M.\u000aOutput\u000aFor each test output "Tuzik" or "Vanya" on a separate line, indicating who will win the game.\u000aConstraints\u000a1 \u2264 T \u2264 100\u000a1 \u2264 N, M \u2264 106\u000aExample\u000aInput:\u000a2\u000a4 4\u000a2 2\u000a\u000aOutput:\u000aTuzik\u000aVanya\u000aExplanation\u000aTest case 1: On his first turn Tuzik moves chip 3 cells up to the cell (4, 1). On his turn Vanya can move chip only right to the cell (4, 2) or to the cell (4, 3) and after that Tuzik moves it to (4, 4) and finishes the game.\u000aTest case 2: On his first Turn Tuzik can move chip to the cell (2, 1) or (1, 2), but on his next turn Vanya moves it to (2, 2) and wins the game.\u000aAuthor: pavel1996\u000aTester: kostya_by\u000aEditorial: http://discuss.codechef.com/problems/TUZGMBR\u000aTags: cook67 dynamic-prog easy game-theory pavel1996\u000aDate Added: 10-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aTuzik and Vanya are playing the following game.\u000aThey have an N × M board and a chip to indicate the current game position. The chip can be placed on any one cell of the game board, each of which is uniquely identified by an ordered pair of positive integers (r, c), where 1 \u2264 r \u2264 N is the row number and 1 \u2264 c \u2264 M is the column number.\u000aInitially, the chip is placed at the cell identified as (1, 1). For his move, a player can move it either 1, 2 or 3 cells up, or 1 or 2 cells to the right. The player who can not move the chip loses. In other words, a player suffers defeat if the chip is placed in the cell (N, M) at the start of his turn.\u000aTuzik starts the game. You have to determine who will win the game if both players play optimally.\u000aInput\u000aThe first line contains an integer T denoting the number of tests. Each of the following T lines contain two integers N and M.\u000aOutput\u000aFor each test output "Tuzik" or "Vanya" on a separate line, indicating who will win the game.\u000aConstraints\u000a1 \u2264 T \u2264 100\u000a1 \u2264 N, M \u2264 106\u000aExample\u000aInput:\u000a2\u000a4 4\u000a2 2\u000a\u000aOutput:\u000aTuzik\u000aVanya\u000aExplanation\u000aTest case 1: On his first turn Tuzik moves chip 3 cells up to the cell (4, 1). On his turn Vanya can move chip only right to the cell (4, 2) or to the cell (4, 3) and after that Tuzik moves it to (4, 4) and finishes the game.\u000aTest case 2: On his first Turn Tuzik can move chip to the cell (2, 1) or (1, 2), but on his next turn Vanya moves it to (2, 2) and wins the game.\u000aAuthor: pavel1996\u000aTester: kostya_by\u000aEditorial: http://discuss.codechef.com/problems/TUZGMBR\u000aTags: cook67 dynamic-prog easy game-theory pavel1996\u000aDate Added: 10-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Tuzik and Vanya are playing the following game. They have an N × M board and a chip to indicate the current game position. The chip can be placed on any one cell of the game board, each of which is uniquely identified by an ordered pair of positive integers (r, c), where 1 \u2264 r \u2264 N is the row number and 1 \u2264 c \u2264 M is the column number. N × M (r, c) 1 \u2264 r \u2264 N 1 \u2264 c \u2264 M Initially, the chip is placed at the cell identified as (1, 1). For his move, a player can move it either 1, 2 or 3 cells up, or 1 or 2 cells to the right. The player who can not move the chip loses. In other words, a player suffers defeat if the chip is placed in the cell (N, M) at the start of his turn. (1, 1) 1, 2 or 3 1 or 2 (N, M) Tuzik starts the game. You have to determine who will win the game if both players play optimally. Input The first line contains an integer T denoting the number of tests. Each of the following T lines contain two integers N and M. T T N M Output For each test output "Tuzik" or "Vanya" on a separate line, indicating who will win the game. Constraints 1 \u2264 T \u2264 100\u000a1 \u2264 N, M \u2264 106 1 \u2264 T \u2264 100 1 T 100 1 \u2264 N, M \u2264 106 1 N, M 106 6 Example Input:\u000a2\u000a4 4\u000a2 2\u000a\u000aOutput:\u000aTuzik\u000aVanya Input: Output:  Explanation Test case 1: (4, 1) (4, 2) (4, 3) (4, 4)  Test case 2: (2, 1) (1, 2) (2, 2)  Author: pavel1996\u000aTester: kostya_by\u000aEditorial: http://discuss.codechef.com/problems/TUZGMBR\u000aTags: cook67 dynamic-prog easy game-theory pavel1996\u000aDate Added: 10-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: pavel1996\u000aTester: kostya_by\u000aEditorial: http://discuss.codechef.com/problems/TUZGMBR\u000aTags: cook67 dynamic-prog easy game-theory pavel1996\u000aDate Added: 10-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: pavel1996 Author: pavel1996 pavel1996 Tester: kostya_by Tester: kostya_by kostya_by Editorial: http://discuss.codechef.com/problems/TUZGMBR Editorial: http://discuss.codechef.com/problems/TUZGMBR http://discuss.codechef.com/problems/TUZGMBR Tags: cook67 dynamic-prog easy game-theory pavel1996 Tags: cook67 dynamic-prog easy game-theory pavel1996 cook67 dynamic-prog easy game-theory pavel1996 Date Added: 10-02-2016 Date Added: 10-02-2016 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V cook67 dynamic-prog easy game-theory pavel1996
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/TUZGMBR
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVTuzik and Vanya are playing the following game.
p18
aVThey have an N × M board and a chip to indicate the current game position. The chip can be placed on any one cell of the game board, each of which is uniquely identified by an ordered pair of positive integers (r, c), where 1 \u2264 r \u2264 N is the row number and 1 \u2264 c \u2264 M is the column number.
p19
aVInitially, the chip is placed at the cell identified as (1, 1). For his move, a player can move it either 1, 2 or 3 cells up, or 1 or 2 cells to the right. The player who can not move the chip loses. In other words, a player suffers defeat if the chip is placed in the cell (N, M) at the start of his turn.
p20
aVTuzik starts the game. You have to determine who will win the game if both players play optimally.
p21
asS'input'
p22
(lp23
VInput
p24
aVThe first line contains an integer T denoting the number of tests. Each of the following T lines contain two integers N and M.
p25
aVOutput
p26
aVFor each test output "Tuzik" or "Vanya" on a separate line, indicating who will win the game.
p27
asS'constraints'
p28
(lp29
VConstraints
p30
aV1 \u2264 T \u2264 100
p31
aV1 \u2264 N, M \u2264 106
p32
asS'id'
p33
c__builtin__
id
p34
sS'name'
p35
VTUZGMBR
p36
sb.