(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 3 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aDid you know that the Hindus believe there are 330 million deities ? Lets discuss about them in long contests. The three main forces of god Brahma, Vishnu and Mahesh, also called Trimurti ( 3 forms ), want to decide when to end the world. Given an array A, which contains the 'Good' ( or 'Evil' ) score of each place on earth, they can easily find the maximum sum of the scores of a (contiguous) sub-array of places. But this is not much useful to them. So, each of them gives a value K and want to know the Kth maximum sum of scores of a contiguous sub-array. In other words, find the value of S[K] (1-based index), where the array S contains the sums of all possible contiguous sub-arrays in non-increasing order.\u000aInput\u000aFirst line contains T, number of test cases. T cases follow. In each test case, first line contains N K1 K2 K3. Next line contains N space separated integers.\u000aOutput\u000aFor each test case, output the K1th, K2th and K3th maximum sum in a single line, separated by a single space. See sample cases and explanation for more clarity.\u000aConstraints\u000a1 \u2264 T \u2264 3\u000a2 \u2264 N \u2264 10000\u000a1 \u2264 K1 < K2 < K3 \u2264 2012\u000aK3 \u2264 N*(N+1)/2\u000a-10000 \u2264 A[i] \u2264 10000\u000aExample\u000aInput:\u000a3\u000a3 1 2 3\u000a10 20 30\u000a3 3 4 6\u000a10 20 30\u000a4 2 6 10\u000a20 -15 10 -15\u000a\u000aOutput:\u000a60 50 30\u000a30 30 10\u000a15 -5 -20\u000a\u000aExplanation:\u000aCase 1 & 2 : A = { 10, 20, 30 }. All possible sums of sub-arrays in non-increasing order, S[1..6] = { 60, 50, 30, 30, 20, 10 }\u000a\u000a\u000aWarning : "Large input / output. Be careful with certain languages. Eg: Prefer using scanf/printf to cin/cout for C++"\u000a\u000aNote : There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted.\u000aAuthor: flying_ant\u000aTester: masked_zorro\u000aEditorial: http://discuss.codechef.com/problems/KSUBSUM\u000aTags: cook18 easy flying_ant\u000aDate Added: 9-01-2012\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aDid you know that the Hindus believe there are 330 million deities ? Lets discuss about them in long contests. The three main forces of god Brahma, Vishnu and Mahesh, also called Trimurti ( 3 forms ), want to decide when to end the world. Given an array A, which contains the 'Good' ( or 'Evil' ) score of each place on earth, they can easily find the maximum sum of the scores of a (contiguous) sub-array of places. But this is not much useful to them. So, each of them gives a value K and want to know the Kth maximum sum of scores of a contiguous sub-array. In other words, find the value of S[K] (1-based index), where the array S contains the sums of all possible contiguous sub-arrays in non-increasing order.\u000aInput\u000aFirst line contains T, number of test cases. T cases follow. In each test case, first line contains N K1 K2 K3. Next line contains N space separated integers.\u000aOutput\u000aFor each test case, output the K1th, K2th and K3th maximum sum in a single line, separated by a single space. See sample cases and explanation for more clarity.\u000aConstraints\u000a1 \u2264 T \u2264 3\u000a2 \u2264 N \u2264 10000\u000a1 \u2264 K1 < K2 < K3 \u2264 2012\u000aK3 \u2264 N*(N+1)/2\u000a-10000 \u2264 A[i] \u2264 10000\u000aExample\u000aInput:\u000a3\u000a3 1 2 3\u000a10 20 30\u000a3 3 4 6\u000a10 20 30\u000a4 2 6 10\u000a20 -15 10 -15\u000a\u000aOutput:\u000a60 50 30\u000a30 30 10\u000a15 -5 -20\u000a\u000aExplanation:\u000aCase 1 & 2 : A = { 10, 20, 30 }. All possible sums of sub-arrays in non-increasing order, S[1..6] = { 60, 50, 30, 30, 20, 10 }\u000a\u000a\u000aWarning : "Large input / output. Be careful with certain languages. Eg: Prefer using scanf/printf to cin/cout for C++"\u000a\u000aNote : There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted.\u000aAuthor: flying_ant\u000aTester: masked_zorro\u000aEditorial: http://discuss.codechef.com/problems/KSUBSUM\u000aTags: cook18 easy flying_ant\u000aDate Added: 9-01-2012\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Did you know that the Hindus believe there are 330 million deities ? Lets discuss about them in long contests. The three main forces of god Brahma, Vishnu and Mahesh, also called Trimurti ( 3 forms ), want to decide when to end the world. Given an array A, which contains the 'Good' ( or 'Evil' ) score of each place on earth, they can easily find the maximum sum of the scores of a (contiguous) sub-array of places. But this is not much useful to them. So, each of them gives a value K and want to know the Kth maximum sum of scores of a contiguous sub-array. In other words, find the value of S[K] (1-based index), where the array S contains the sums of all possible contiguous sub-arrays in non-increasing order. each Input  First line contains T, number of test cases. T cases follow. In each test case, first line contains N K1 K2 K3. Next line contains N space separated integers.  Output  For each test case, output the K1th, K2th and K3th maximum sum in a single line, separated by a single space. See sample cases and explanation for more clarity. th th th Constraints  1 \u2264 T \u2264 3\u000a2 \u2264 N \u2264 10000\u000a1 \u2264 K1 < K2 < K3 \u2264 2012\u000aK3 \u2264 N*(N+1)/2\u000a-10000 \u2264 A[i] \u2264 10000      Example Input:\u000a3\u000a3 1 2 3\u000a10 20 30\u000a3 3 4 6\u000a10 20 30\u000a4 2 6 10\u000a20 -15 10 -15\u000a\u000aOutput:\u000a60 50 30\u000a30 30 10\u000a15 -5 -20 Input: Output:  Explanation:     Warning : "Large input / output. Be careful with certain languages. Eg: Prefer using scanf/printf to cin/cout for C++" Warning :   Note : There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted. Note :   Author: flying_ant\u000aTester: masked_zorro\u000aEditorial: http://discuss.codechef.com/problems/KSUBSUM\u000aTags: cook18 easy flying_ant\u000aDate Added: 9-01-2012\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: flying_ant\u000aTester: masked_zorro\u000aEditorial: http://discuss.codechef.com/problems/KSUBSUM\u000aTags: cook18 easy flying_ant\u000aDate Added: 9-01-2012\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: flying_ant Author: flying_ant flying_ant Tester: masked_zorro Tester: masked_zorro masked_zorro Editorial: http://discuss.codechef.com/problems/KSUBSUM Editorial: http://discuss.codechef.com/problems/KSUBSUM http://discuss.codechef.com/problems/KSUBSUM Tags: cook18 easy flying_ant Tags: cook18 easy flying_ant cook18 easy flying_ant Date Added: 9-01-2012 Date Added: 9-01-2012 Time Limit: 3 sec Time Limit: 3 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V cook18 easy flying_ant
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/KSUBSUM
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVDid you know that the Hindus believe there are 330 million deities ? Lets discuss about them in long contests. The three main forces of god Brahma, Vishnu and Mahesh, also called Trimurti ( 3 forms ), want to decide when to end the world. Given an array A, which contains the 'Good' ( or 'Evil' ) score of each place on earth, they can easily find the maximum sum of the scores of a (contiguous) sub-array of places. But this is not much useful to them. So, each of them gives a value K and want to know the Kth maximum sum of scores of a contiguous sub-array. In other words, find the value of S[K] (1-based index), where the array S contains the sums of all possible contiguous sub-arrays in non-increasing order.
p17
asS'input'
p18
(lp19
VInput
p20
aVFirst line contains T, number of test cases. T cases follow. In each test case, first line contains N K1 K2 K3. Next line contains N space separated integers.
p21
aVOutput
p22
aVFor each test case, output the K1th, K2th and K3th maximum sum in a single line, separated by a single space. See sample cases and explanation for more clarity.
p23
asS'constraints'
p24
(lp25
VConstraints
p26
aV1 \u2264 T \u2264 3
p27
aV2 \u2264 N \u2264 10000
p28
aV1 \u2264 K1 < K2 < K3 \u2264 2012
p29
aVK3 \u2264 N*(N+1)/2
p30
aV-10000 \u2264 A[i] \u2264 10000
p31
asS'id'
p32
c__builtin__
id
p33
sS'name'
p34
VKSUBSUM
p35
sb.