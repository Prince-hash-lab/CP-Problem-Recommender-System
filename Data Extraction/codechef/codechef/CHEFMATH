(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 2 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef's team is going to participate at the legendary math battles. One of the main task in the competition is to calculate the number of ways to create a number by adding some Chefonacci numbers. A number is called a Chefonacci number if it is an element of Chefonacci sequence defined as follows.\u000af(0) = 1; \u000af(1) = 2; \u000aFor i > 1 : f(i) = f(i - 1) + f(i - 2)\u000aChef asked you to help him with this task. There will be Q question of form X, K : How many different ways are there to create X by adding K Chefonacci numbers. Note that the order of numbers in the addition does not matter, i.e. (f(i) + f(j) + f(k)) and (f(j) + f(i) + f(k)) will not be counted as distinct ways. Also note that you are allowed to use a Chefonacci number any number of times (zero or more).\u000aAs the answer could be large, print your answer modulo 109 + 7 (1000000007).\u000aInput\u000aFirst line of the input contains an integer Q denoting number of questions Chef was asked.\u000aIn the next Q lines follow the questions, i-th of the line will denote the i-th question represented by two space separated integer X, K respectively.\u000aOutput\u000aFor each question, output a separate line containing the answer of the question.\u000aConstraints and Subtasks\u000aSubtask 1 : [10 points]\u000a1 \u2264 Q \u2264 50\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 4\u000a\u000a\u000aSubtask 2 : [20 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 5\u000a\u000a\u000aSubtask 3 : [20 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 102\u000a1 \u2264 K \u2264 10\u000a\u000a\u000aSubtask 4 : [50 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 10\u000aExample\u000aInput:\u000a5\u000a12 1\u000a13 1\u000a13 2\u000a13 3\u000a13 4\u000a\u000aOutput:\u000a0\u000a1\u000a1\u000a2\u000a4\u000aExplanation\u000aExample case 1.\u000aThere is no way to create 12 by adding one Chefonacci number, as 12 is not a Chefonacci number.\u000aExample case 2.\u000aThere is only one way to create 13 by adding one Chefonacci number, i.e. 13.\u000aExample case 3.\u000aThere is one way to create 13 by adding two Chefonacci numbers, i.e. 5 + 8.\u000aExample case 4.\u000aThere are two ways to create 13 by adding three Chefonacci numbers: 2 + 3 + 8, 3 + 5 + 5.\u000aExample case 5.\u000aThere are four ways to create 13 by adding four Chefonacci numbers: 1 + 1 + 3 + 8, 1 + 2 + 2 + 8, 1 + 2 + 5 + 5, 2 + 3 + 3 + 5\u000aAuthor: omelyanenko\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFMATH\u000aTags: dp easy-medium may16 meet-in-middle omelyanenko recursion\u000aDate Added: 9-02-2016\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef's team is going to participate at the legendary math battles. One of the main task in the competition is to calculate the number of ways to create a number by adding some Chefonacci numbers. A number is called a Chefonacci number if it is an element of Chefonacci sequence defined as follows.\u000af(0) = 1; \u000af(1) = 2; \u000aFor i > 1 : f(i) = f(i - 1) + f(i - 2)\u000aChef asked you to help him with this task. There will be Q question of form X, K : How many different ways are there to create X by adding K Chefonacci numbers. Note that the order of numbers in the addition does not matter, i.e. (f(i) + f(j) + f(k)) and (f(j) + f(i) + f(k)) will not be counted as distinct ways. Also note that you are allowed to use a Chefonacci number any number of times (zero or more).\u000aAs the answer could be large, print your answer modulo 109 + 7 (1000000007).\u000aInput\u000aFirst line of the input contains an integer Q denoting number of questions Chef was asked.\u000aIn the next Q lines follow the questions, i-th of the line will denote the i-th question represented by two space separated integer X, K respectively.\u000aOutput\u000aFor each question, output a separate line containing the answer of the question.\u000aConstraints and Subtasks\u000aSubtask 1 : [10 points]\u000a1 \u2264 Q \u2264 50\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 4\u000a\u000a\u000aSubtask 2 : [20 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 5\u000a\u000a\u000aSubtask 3 : [20 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 102\u000a1 \u2264 K \u2264 10\u000a\u000a\u000aSubtask 4 : [50 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 10\u000aExample\u000aInput:\u000a5\u000a12 1\u000a13 1\u000a13 2\u000a13 3\u000a13 4\u000a\u000aOutput:\u000a0\u000a1\u000a1\u000a2\u000a4\u000aExplanation\u000aExample case 1.\u000aThere is no way to create 12 by adding one Chefonacci number, as 12 is not a Chefonacci number.\u000aExample case 2.\u000aThere is only one way to create 13 by adding one Chefonacci number, i.e. 13.\u000aExample case 3.\u000aThere is one way to create 13 by adding two Chefonacci numbers, i.e. 5 + 8.\u000aExample case 4.\u000aThere are two ways to create 13 by adding three Chefonacci numbers: 2 + 3 + 8, 3 + 5 + 5.\u000aExample case 5.\u000aThere are four ways to create 13 by adding four Chefonacci numbers: 1 + 1 + 3 + 8, 1 + 2 + 2 + 8, 1 + 2 + 5 + 5, 2 + 3 + 3 + 5\u000aAuthor: omelyanenko\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFMATH\u000aTags: dp easy-medium may16 meet-in-middle omelyanenko recursion\u000aDate Added: 9-02-2016\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef's team is going to participate at the legendary math battles. One of the main task in the competition is to calculate the number of ways to create a number by adding some Chefonacci numbers. A number is called a Chefonacci number if it is an element of Chefonacci sequence defined as follows. f(0) = 1; \u000af(1) = 2; \u000aFor i > 1 : f(i) = f(i - 1) + f(i - 2) f(0) = 1; \u000af(1) = 2; \u000aFor i > 1 : f(i) = f(i - 1) + f(i - 2) Chef asked you to help him with this task. There will be Q question of form X, K : How many different ways are there to create X by adding K Chefonacci numbers. Note that the order of numbers in the addition does not matter, i.e. (f(i) + f(j) + f(k)) and (f(j) + f(i) + f(k)) will not be counted as distinct ways. Also note that you are allowed to use a Chefonacci number any number of times (zero or more). Q X, K X K As the answer could be large, print your answer modulo 109 + 7 (1000000007). 109 + 7 (1000000007) 9 Input First line of the input contains an integer Q denoting number of questions Chef was asked. Q In the next Q lines follow the questions, i-th of the line will denote the i-th question represented by two space separated integer X, K respectively. Q X, K Output For each question, output a separate line containing the answer of the question. Constraints and Subtasks Subtask 1 : [10 points]\u000a1 \u2264 Q \u2264 50\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 4\u000a\u000a\u000aSubtask 2 : [20 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 5\u000a\u000a\u000aSubtask 3 : [20 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 102\u000a1 \u2264 K \u2264 10\u000a\u000a\u000aSubtask 4 : [50 points]\u000a1 \u2264 Q \u2264 100\u000a1 \u2264 X \u2264 109\u000a1 \u2264 K \u2264 10 Subtask 1 : [10 points] 1 \u2264 Q \u2264 50 1 Q 50 1 \u2264 X \u2264 109 1 X 109 9 1 \u2264 K \u2264 4 1 K 4 Subtask 2 : [20 points]   Subtask 2 : [20 points] 1 \u2264 Q \u2264 100 1 Q 100 1 \u2264 X \u2264 109 1 X 109 9 1 \u2264 K \u2264 5 1 K 5 Subtask 3 : [20 points]   Subtask 3 : [20 points] 1 \u2264 Q \u2264 100 1 Q 100 1 \u2264 X \u2264 102 1 X 102 2 1 \u2264 K \u2264 10 1 K 10 Subtask 4 : [50 points]   Subtask 4 : [50 points] 1 \u2264 Q \u2264 100 1 Q 100 1 \u2264 X \u2264 109 1 X 109 9 1 \u2264 K \u2264 10 1 K 10 Example Input:\u000a5\u000a12 1\u000a13 1\u000a13 2\u000a13 3\u000a13 4\u000a\u000aOutput:\u000a0\u000a1\u000a1\u000a2\u000a4 Input: Output: Explanation Example case 1.\u000aThere is no way to create 12 by adding one Chefonacci number, as 12 is not a Chefonacci number. Example case 1.  Example case 2.\u000aThere is only one way to create 13 by adding one Chefonacci number, i.e. 13. Example case 2.  Example case 3.\u000aThere is one way to create 13 by adding two Chefonacci numbers, i.e. 5 + 8. Example case 3.  Example case 4.\u000aThere are two ways to create 13 by adding three Chefonacci numbers: 2 + 3 + 8, 3 + 5 + 5. Example case 4.  Example case 5.\u000aThere are four ways to create 13 by adding four Chefonacci numbers: 1 + 1 + 3 + 8, 1 + 2 + 2 + 8, 1 + 2 + 5 + 5, 2 + 3 + 3 + 5 Example case 5.   Author: omelyanenko\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFMATH\u000aTags: dp easy-medium may16 meet-in-middle omelyanenko recursion\u000aDate Added: 9-02-2016\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: omelyanenko\u000aTester: kevinsogo\u000aEditorial: http://discuss.codechef.com/problems/CHEFMATH\u000aTags: dp easy-medium may16 meet-in-middle omelyanenko recursion\u000aDate Added: 9-02-2016\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: omelyanenko Author: omelyanenko omelyanenko Tester: kevinsogo Tester: kevinsogo kevinsogo Editorial: http://discuss.codechef.com/problems/CHEFMATH Editorial: http://discuss.codechef.com/problems/CHEFMATH http://discuss.codechef.com/problems/CHEFMATH Tags: dp easy-medium may16 meet-in-middle omelyanenko recursion Tags: dp easy-medium may16 meet-in-middle omelyanenko recursion dp easy-medium may16 meet-in-middle omelyanenko recursion Date Added: 9-02-2016 Date Added: 9-02-2016 Time Limit: 2 sec Time Limit: 2 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V dp easy-medium may16 meet-in-middle omelyanenko recursion
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/CHEFMATH
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef's team is going to participate at the legendary math battles. One of the main task in the competition is to calculate the number of ways to create a number by adding some Chefonacci numbers. A number is called a Chefonacci number if it is an element of Chefonacci sequence defined as follows.
p18
aVf(0) = 1;
p19
aVf(1) = 2;
p20
aVFor i > 1 : f(i) = f(i - 1) + f(i - 2)
p21
aVChef asked you to help him with this task. There will be Q question of form X, K : How many different ways are there to create X by adding K Chefonacci numbers. Note that the order of numbers in the addition does not matter, i.e. (f(i) + f(j) + f(k)) and (f(j) + f(i) + f(k)) will not be counted as distinct ways. Also note that you are allowed to use a Chefonacci number any number of times (zero or more).
p22
aVAs the answer could be large, print your answer modulo 109 + 7 (1000000007).
p23
asS'input'
p24
(lp25
VInput
p26
aVFirst line of the input contains an integer Q denoting number of questions Chef was asked.
p27
aVIn the next Q lines follow the questions, i-th of the line will denote the i-th question represented by two space separated integer X, K respectively.
p28
aVOutput
p29
aVFor each question, output a separate line containing the answer of the question.
p30
asS'constraints'
p31
(lp32
VConstraints and Subtasks
p33
aVSubtask 1 : [10 points]
p34
aV1 \u2264 Q \u2264 50
p35
aV1 \u2264 X \u2264 109
p36
aV1 \u2264 K \u2264 4
p37
aV
p38
ag38
aVSubtask 2 : [20 points]
p39
aV1 \u2264 Q \u2264 100
p40
aV1 \u2264 X \u2264 109
p41
aV1 \u2264 K \u2264 5
p42
ag38
ag38
aVSubtask 3 : [20 points]
p43
aV1 \u2264 Q \u2264 100
p44
aV1 \u2264 X \u2264 102
p45
aV1 \u2264 K \u2264 10
p46
ag38
ag38
aVSubtask 4 : [50 points]
p47
aV1 \u2264 Q \u2264 100
p48
aV1 \u2264 X \u2264 109
p49
aV1 \u2264 K \u2264 10
p50
asS'id'
p51
c__builtin__
id
p52
sS'name'
p53
VCHEFMATH
p54
sb.