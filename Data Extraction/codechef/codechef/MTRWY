(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 5 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese and Russian.\u000aYou have a rectangular grid of size N × M, namely, there are cells (x, y) for 1 \u2264 x \u2264 N, 1 \u2264 y \u2264 M. Two cells are adjacent if they share a side. More formally, two cells (x1, y1), (x2, y2) are adjacent if |x1 \u2212 x2| + |y1 \u2212 y2| = 1. Between two adjacent cells there can be a wall. Two cells a and b are connected if there is a way between them (in other words there is a sequence of cells c1, c2, ..., ck that c1 = a, ck = b, and for each 1 \u2264 i < k, ci, ci+1 are adjacent cells without wall between them).\u000aNow you are given Q queries, each of whom is of following four types.\u000a1 x y - build the wall between cells (x, y) and (x, y+1). If there is already exist a wall between them, this query is ignored.\u000a2 x y - build the wall between cells (x, y) and (x+1, y). If there is already exist a wall between them, this query is ignored.\u000a3 x1 y1 x2 y2 - check if cells (x1, y1) and (x2, y2) are connected. You must answer 1 if they are connected, 0 otherwise.\u000a4 - You must answer the size of the largest connected component. A connected component is a set of sells wherein each two cells are connected. The size of a connected component is a number of the cells in it.\u000aYou must assume that there are no walls on the grid before the queries.\u000aInput\u000aThe first line of input contains an integer T, denoting the number of test cases. Then T test cases are follow.\u000aThe first line of each test case contains three space-separated integers N, M and Q, denoting the grid sizes and amount of queries. For next Q lines, each line contains a query. The format of queries are the same as described by the statement.\u000aOutput\u000aFor each test case, output an integer, denoting the sum of answers for queries of type 3 and 4. Note that you just print only the sum of the answers for each test case.\u000aConstraints and Subtasks\u000a1 \u2264 T \u2264 100\u000a2 \u2264 N, M \u2264 1000\u000aThe sum of Q over all test cases in one test file does not exceed 106\u000aFor queries of type 1: 1 \u2264 x \u2264 N and 1 \u2264 y \u2264 M\u22121\u000aFor queries of type 2: 1 \u2264 x \u2264 N\u22121 and 1 \u2264 y \u2264 M\u000aFor queries of type 3: 1 \u2264 x1, x2 \u2264 N and 1 \u2264 y1, y2 \u2264 M\u000aSubtask 1: (15 points)\u000a1 \u2264 Q × N × M \u2264 106\u000aSubtask 2: (15 points)\u000a1 \u2264 N, M \u2264 300\u000aThe sum of Q over all test cases in one test file does not exceed 105\u000aSubtask 3: (70 points)\u000aNo additional constraints\u000aExample\u000aInput:\u000a1\u000a3 4 10\u000a3 1 1 3 4\u000a1 1 2\u000a1 2 2\u000a2 2 2\u000a4\u000a1 3 1\u000a4\u000a3 1 1 3 4\u000a1 1 2\u000a3 1 1 1 1\u000a\u000aOutput:\u000a21\u000aExplanation\u000aQuery 1. There are a lot of ways from (1,1) to (3,4). One of them is marked in red in the picture #1. So these are connected, then Answer = 1 in this query.\u000aQuery 2. In the picture #2 you can see the grid after second query.\u000aQuery 3. In the picture #3 you can see the grid after third query.\u000aQuery 4. In the picture #4 you can see the grid after fourth query.\u000aQuery 5. In the picture #5 the largest connected component marked in green. Thus Answer = 12.\u000aQuery 6. In the picture #6 you can see the grid after sixth query.\u000aQuery 7. In the picture #7 the largest connected component marked in green. Thus Answer = 7.\u000aQuery 8. As you can see in the picture #8, there are no ways from (1,1) to (3,4). So they are no longer connected, then Answer = 0.\u000aQuery 9. In the picture #9 you can see the grid after ninth query. There is no difference between it and the grid after the sixth query, because before the ninth query the wall was already built.\u000aQuery 10. When a = b, two cells a and b are always connected. Thus Answer = 1.\u000aTherefore, the sum of the answers is 1 + 12 + 7 + 0 + 1 = 21, which you should print.\u000aAuthor: antoniuk1\u000aTester: laycurse\u000aEditorial: http://discuss.codechef.com/problems/MTRWY\u000aTags: antoniuk1 easy march15 union-find\u000aDate Added: 29-01-2015\u000aTime Limit: 5 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese and Russian.\u000aYou have a rectangular grid of size N × M, namely, there are cells (x, y) for 1 \u2264 x \u2264 N, 1 \u2264 y \u2264 M. Two cells are adjacent if they share a side. More formally, two cells (x1, y1), (x2, y2) are adjacent if |x1 \u2212 x2| + |y1 \u2212 y2| = 1. Between two adjacent cells there can be a wall. Two cells a and b are connected if there is a way between them (in other words there is a sequence of cells c1, c2, ..., ck that c1 = a, ck = b, and for each 1 \u2264 i < k, ci, ci+1 are adjacent cells without wall between them).\u000aNow you are given Q queries, each of whom is of following four types.\u000a1 x y - build the wall between cells (x, y) and (x, y+1). If there is already exist a wall between them, this query is ignored.\u000a2 x y - build the wall between cells (x, y) and (x+1, y). If there is already exist a wall between them, this query is ignored.\u000a3 x1 y1 x2 y2 - check if cells (x1, y1) and (x2, y2) are connected. You must answer 1 if they are connected, 0 otherwise.\u000a4 - You must answer the size of the largest connected component. A connected component is a set of sells wherein each two cells are connected. The size of a connected component is a number of the cells in it.\u000aYou must assume that there are no walls on the grid before the queries.\u000aInput\u000aThe first line of input contains an integer T, denoting the number of test cases. Then T test cases are follow.\u000aThe first line of each test case contains three space-separated integers N, M and Q, denoting the grid sizes and amount of queries. For next Q lines, each line contains a query. The format of queries are the same as described by the statement.\u000aOutput\u000aFor each test case, output an integer, denoting the sum of answers for queries of type 3 and 4. Note that you just print only the sum of the answers for each test case.\u000aConstraints and Subtasks\u000a1 \u2264 T \u2264 100\u000a2 \u2264 N, M \u2264 1000\u000aThe sum of Q over all test cases in one test file does not exceed 106\u000aFor queries of type 1: 1 \u2264 x \u2264 N and 1 \u2264 y \u2264 M\u22121\u000aFor queries of type 2: 1 \u2264 x \u2264 N\u22121 and 1 \u2264 y \u2264 M\u000aFor queries of type 3: 1 \u2264 x1, x2 \u2264 N and 1 \u2264 y1, y2 \u2264 M\u000aSubtask 1: (15 points)\u000a1 \u2264 Q × N × M \u2264 106\u000aSubtask 2: (15 points)\u000a1 \u2264 N, M \u2264 300\u000aThe sum of Q over all test cases in one test file does not exceed 105\u000aSubtask 3: (70 points)\u000aNo additional constraints\u000aExample\u000aInput:\u000a1\u000a3 4 10\u000a3 1 1 3 4\u000a1 1 2\u000a1 2 2\u000a2 2 2\u000a4\u000a1 3 1\u000a4\u000a3 1 1 3 4\u000a1 1 2\u000a3 1 1 1 1\u000a\u000aOutput:\u000a21\u000aExplanation\u000aQuery 1. There are a lot of ways from (1,1) to (3,4). One of them is marked in red in the picture #1. So these are connected, then Answer = 1 in this query.\u000aQuery 2. In the picture #2 you can see the grid after second query.\u000aQuery 3. In the picture #3 you can see the grid after third query.\u000aQuery 4. In the picture #4 you can see the grid after fourth query.\u000aQuery 5. In the picture #5 the largest connected component marked in green. Thus Answer = 12.\u000aQuery 6. In the picture #6 you can see the grid after sixth query.\u000aQuery 7. In the picture #7 the largest connected component marked in green. Thus Answer = 7.\u000aQuery 8. As you can see in the picture #8, there are no ways from (1,1) to (3,4). So they are no longer connected, then Answer = 0.\u000aQuery 9. In the picture #9 you can see the grid after ninth query. There is no difference between it and the grid after the sixth query, because before the ninth query the wall was already built.\u000aQuery 10. When a = b, two cells a and b are always connected. Thus Answer = 1.\u000aTherefore, the sum of the answers is 1 + 12 + 7 + 0 + 1 = 21, which you should print.\u000aAuthor: antoniuk1\u000aTester: laycurse\u000aEditorial: http://discuss.codechef.com/problems/MTRWY\u000aTags: antoniuk1 easy march15 union-find\u000aDate Added: 29-01-2015\u000aTime Limit: 5 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese and Russian. Mandarin Chinese Russian You have a rectangular grid of size N × M, namely, there are cells (x, y) for 1 \u2264 x \u2264 N, 1 \u2264 y \u2264 M. Two cells are adjacent if they share a side. More formally, two cells (x1, y1), (x2, y2) are adjacent if |x1 \u2212 x2| + |y1 \u2212 y2| = 1. Between two adjacent cells there can be a wall. Two cells a and b are connected if there is a way between them (in other words there is a sequence of cells c1, c2, ..., ck that c1 = a, ck = b, and for each 1 \u2264 i < k, ci, ci+1 are adjacent cells without wall between them). N × M (x, y) 1 \u2264 x \u2264 N, 1 \u2264 y \u2264 M (x1, y1), (x2, y2) 1 1 2 2 |x1 \u2212 x2| + |y1 \u2212 y2| = 1 1 2 1 2 a b c1, c2, ..., ck 1 2 k c1 = a, ck = b 1 k 1 \u2264 i < k ci, ci+1 i i+1 Now you are given Q queries, each of whom is of following four types. Q 1 x y - build the wall between cells (x, y) and (x, y+1). If there is already exist a wall between them, this query is ignored.\u000a2 x y - build the wall between cells (x, y) and (x+1, y). If there is already exist a wall between them, this query is ignored.\u000a3 x1 y1 x2 y2 - check if cells (x1, y1) and (x2, y2) are connected. You must answer 1 if they are connected, 0 otherwise.\u000a4 - You must answer the size of the largest connected component. A connected component is a set of sells wherein each two cells are connected. The size of a connected component is a number of the cells in it. 1 x y - build the wall between cells (x, y) and (x, y+1). If there is already exist a wall between them, this query is ignored. 1 x y (x, y) (x, y+1) 2 x y - build the wall between cells (x, y) and (x+1, y). If there is already exist a wall between them, this query is ignored. 2 x y (x, y) (x+1, y) 3 x1 y1 x2 y2 - check if cells (x1, y1) and (x2, y2) are connected. You must answer 1 if they are connected, 0 otherwise. 3 x1 y1 x2 y2 1 1 2 2 (x1, y1) 1 1 (x2, y2) 2 2 1 0 4 - You must answer the size of the largest connected component. A connected component is a set of sells wherein each two cells are connected. The size of a connected component is a number of the cells in it. 4 You must assume that there are no walls on the grid before the queries. Input The first line of input contains an integer T, denoting the number of test cases. Then T test cases are follow. T T The first line of each test case contains three space-separated integers N, M and Q, denoting the grid sizes and amount of queries. For next Q lines, each line contains a query. The format of queries are the same as described by the statement. N, M Q Q Output For each test case, output an integer, denoting the sum of answers for queries of type 3 and 4. Note that you just print only the sum of the answers for each test case. 3 4 Constraints and Subtasks 1 \u2264 T \u2264 100\u000a2 \u2264 N, M \u2264 1000\u000aThe sum of Q over all test cases in one test file does not exceed 106\u000aFor queries of type 1: 1 \u2264 x \u2264 N and 1 \u2264 y \u2264 M\u22121\u000aFor queries of type 2: 1 \u2264 x \u2264 N\u22121 and 1 \u2264 y \u2264 M\u000aFor queries of type 3: 1 \u2264 x1, x2 \u2264 N and 1 \u2264 y1, y2 \u2264 M 1 \u2264 T \u2264 100 1 \u2264 T \u2264 100 2 \u2264 N, M \u2264 1000 2 \u2264 N, M \u2264 1000 The sum of Q over all test cases in one test file does not exceed 106 Q 106 6 For queries of type 1: 1 \u2264 x \u2264 N and 1 \u2264 y \u2264 M\u22121 1 1 \u2264 x \u2264 N 1 \u2264 y \u2264 M\u22121 For queries of type 2: 1 \u2264 x \u2264 N\u22121 and 1 \u2264 y \u2264 M 2 1 \u2264 x \u2264 N\u22121 1 \u2264 y \u2264 M For queries of type 3: 1 \u2264 x1, x2 \u2264 N and 1 \u2264 y1, y2 \u2264 M 3 1 \u2264 x1, x2 \u2264 N 1 2 1 \u2264 y1, y2 \u2264 M 1 2  Subtask 1: (15 points) Subtask 1: (15 points) 1 \u2264 Q × N × M \u2264 106 1 \u2264 Q × N × M \u2264 106 1 \u2264 Q × N × M \u2264 106 6  Subtask 2: (15 points) Subtask 2: (15 points) 1 \u2264 N, M \u2264 300\u000aThe sum of Q over all test cases in one test file does not exceed 105 1 \u2264 N, M \u2264 300 1 \u2264 N, M \u2264 300 The sum of Q over all test cases in one test file does not exceed 105 Q 105 5  Subtask 3: (70 points) Subtask 3: (70 points) No additional constraints No additional constraints Example Input:\u000a1\u000a3 4 10\u000a3 1 1 3 4\u000a1 1 2\u000a1 2 2\u000a2 2 2\u000a4\u000a1 3 1\u000a4\u000a3 1 1 3 4\u000a1 1 2\u000a3 1 1 1 1\u000a\u000aOutput:\u000a21 Input: Output: Explanation Query 1. There are a lot of ways from (1,1) to (3,4). One of them is marked in red in the picture #1. So these are connected, then Answer = 1 in this query. Query 1. (1,1) (3,4) Answer = 1 Query 2. In the picture #2 you can see the grid after second query. Query 2. Query 3. In the picture #3 you can see the grid after third query. Query 3. Query 4. In the picture #4 you can see the grid after fourth query. Query 4. Query 5. In the picture #5 the largest connected component marked in green. Thus Answer = 12. Query 5. Answer = 12 Query 6. In the picture #6 you can see the grid after sixth query. Query 6. Query 7. In the picture #7 the largest connected component marked in green. Thus Answer = 7. Query 7. Answer = 7 Query 8. As you can see in the picture #8, there are no ways from (1,1) to (3,4). So they are no longer connected, then Answer = 0. Query 8. (1,1) (3,4) Answer = 0 Query 9. In the picture #9 you can see the grid after ninth query. There is no difference between it and the grid after the sixth query, because before the ninth query the wall was already built. Query 9. Query 10. When a = b, two cells a and b are always connected. Thus Answer = 1. Query 10. a = b a b Answer = 1 Therefore, the sum of the answers is 1 + 12 + 7 + 0 + 1 = 21, which you should print. 1 + 12 + 7 + 0 + 1 = 21    Author: antoniuk1\u000aTester: laycurse\u000aEditorial: http://discuss.codechef.com/problems/MTRWY\u000aTags: antoniuk1 easy march15 union-find\u000aDate Added: 29-01-2015\u000aTime Limit: 5 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: antoniuk1\u000aTester: laycurse\u000aEditorial: http://discuss.codechef.com/problems/MTRWY\u000aTags: antoniuk1 easy march15 union-find\u000aDate Added: 29-01-2015\u000aTime Limit: 5 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: antoniuk1 Author: antoniuk1 antoniuk1 Tester: laycurse Tester: laycurse laycurse Editorial: http://discuss.codechef.com/problems/MTRWY Editorial: http://discuss.codechef.com/problems/MTRWY http://discuss.codechef.com/problems/MTRWY Tags: antoniuk1 easy march15 union-find Tags: antoniuk1 easy march15 union-find antoniuk1 easy march15 union-find Date Added: 29-01-2015 Date Added: 29-01-2015 Time Limit: 5 sec Time Limit: 5 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V antoniuk1 easy march15 union-find
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/MTRWY
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese and Russian.
p17
aVYou have a rectangular grid of size N × M, namely, there are cells (x, y) for 1 \u2264 x \u2264 N, 1 \u2264 y \u2264 M. Two cells are adjacent if they share a side. More formally, two cells (x1, y1), (x2, y2) are adjacent if |x1 \u2212 x2| + |y1 \u2212 y2| = 1. Between two adjacent cells there can be a wall. Two cells a and b are connected if there is a way between them (in other words there is a sequence of cells c1, c2, ..., ck that c1 = a, ck = b, and for each 1 \u2264 i < k, ci, ci+1 are adjacent cells without wall between them).
p18
aVNow you are given Q queries, each of whom is of following four types.
p19
aV1 x y - build the wall between cells (x, y) and (x, y+1). If there is already exist a wall between them, this query is ignored.
p20
aV2 x y - build the wall between cells (x, y) and (x+1, y). If there is already exist a wall between them, this query is ignored.
p21
aV3 x1 y1 x2 y2 - check if cells (x1, y1) and (x2, y2) are connected. You must answer 1 if they are connected, 0 otherwise.
p22
aV4 - You must answer the size of the largest connected component. A connected component is a set of sells wherein each two cells are connected. The size of a connected component is a number of the cells in it.
p23
aVYou must assume that there are no walls on the grid before the queries.
p24
asS'input'
p25
(lp26
VInput
p27
aVThe first line of input contains an integer T, denoting the number of test cases. Then T test cases are follow.
p28
aVThe first line of each test case contains three space-separated integers N, M and Q, denoting the grid sizes and amount of queries. For next Q lines, each line contains a query. The format of queries are the same as described by the statement.
p29
aVOutput
p30
aVFor each test case, output an integer, denoting the sum of answers for queries of type 3 and 4. Note that you just print only the sum of the answers for each test case.
p31
asS'constraints'
p32
(lp33
VConstraints and Subtasks
p34
aV1 \u2264 T \u2264 100
p35
aV2 \u2264 N, M \u2264 1000
p36
aVThe sum of Q over all test cases in one test file does not exceed 106
p37
aVFor queries of type 1: 1 \u2264 x \u2264 N and 1 \u2264 y \u2264 M\u22121
p38
aVFor queries of type 2: 1 \u2264 x \u2264 N\u22121 and 1 \u2264 y \u2264 M
p39
aVFor queries of type 3: 1 \u2264 x1, x2 \u2264 N and 1 \u2264 y1, y2 \u2264 M
p40
aVSubtask 1: (15 points)
p41
aV1 \u2264 Q × N × M \u2264 106
p42
aVSubtask 2: (15 points)
p43
aV1 \u2264 N, M \u2264 300
p44
aVThe sum of Q over all test cases in one test file does not exceed 105
p45
aVSubtask 3: (70 points)
p46
aVNo additional constraints
p47
asS'id'
p48
c__builtin__
id
p49
sS'name'
p50
VMTRWY
p51
sb.