(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 2 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef spent N days working really hard! He planned loads of tasks: as many as Ai tasks to do on the ith day! Chef's work was brutal, so he only managed to finish Bi tasks on the ith day.\u000aThe good news is that Chef has a Time Machine!\u000aThe Time Machine has K white buttons and M black buttons. Each button has a positive integer printed on it. Now Chef goes through all N days consequently and presses buttons. Each day Chef can only press one button (either white or black). After using a button once, it becomes inactive.\u000aPressing a white button with integer x printed on it reduces the number of planned tasks on the day it was pressed by exactly x. Note that this white button can only be pressed if number of planned tasks on the day are greater than or equal to x.\u000aPressing a black button with integer x printed on it increases the number of completed tasks on the day it was pressed by exactly x. Note that this black button can only be pressed if after pressing it, number of completed tasks don't exceed the number of tasks.\u000aChef is interested in finding the minimum possible amount of total uncompleted tasks he will still be left with after N days using the Machine in the best way?\u000aBe careful! Time is sensitive! Chef cannot make a day when he completed more tasks then planned, as this may result in a more-work-than-planned paradox, killing all lazy people on the planet!\u000aInput\u000aThe first line of input contains a single integer T, denoting the number of test cases. Description of T test cases follows.\u000aThe first line of each test case contains three integers \u2014 N, K, M \u2014 denoting the number of days, white and black buttons appropriately.\u000aThe second line contains N space-separated integers A1, A2, \u2026 , AN, denoting the number of planned tasks.\u000aThe third line contains N space-separated integers B1, B2, \u2026 , BN, denoting the number of completed tasks.\u000aThe fourth line contains K space-separated integers C1, C2, \u2026 , CK, denoting the integers on white buttons.\u000aThe fifth and last line contains M space-separated integers D1, D2, \u2026 , DM, denoting the integers on black buttons.\u000aOutput\u000aIn a single line, output an integer \u2014 the minimum possible amount of uncompleted tasks.\u000aConstraints\u000a1 \u2264 T \u2264 4\u000a1 \u2264 N, K, M \u2264 10^5\u000a1 \u2264 Bi \u2264 Ai \u2264 10^5\u000a1 \u2264 Ci, Di \u2264 10^5\u000aSubtasks\u000aSubtask N \u2264 10, K, M \u2264 5. Points: 30\u000aSubtask Original constraints. Points: 70\u000aExample\u000aInput:\u000a1\u000a4 2 2 \u000a5 7 6 1\u000a3 3 1 1\u000a6 3\u000a1 4\u000a\u000aOutput:\u000a3\u000aExplanation\u000aExample case 1.\u000aIn this example Chef goes through the following steps:\u000aUse black button 1 on the first day.\u000aUse black button 4 on the second day.\u000aUse white button 3 on the third day.\u000aThe arrays A and B are now effectively changed to:\u000a5 7 3 1\u000a4 7 1 1\u000aSo he will have 3 uncompleted tasks.\u000aAuthor: berezin\u000aTester: antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/CHEFTMA\u000aTags: berezin greedy jan16 simple stl\u000aDate Added: 8-12-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef spent N days working really hard! He planned loads of tasks: as many as Ai tasks to do on the ith day! Chef's work was brutal, so he only managed to finish Bi tasks on the ith day.\u000aThe good news is that Chef has a Time Machine!\u000aThe Time Machine has K white buttons and M black buttons. Each button has a positive integer printed on it. Now Chef goes through all N days consequently and presses buttons. Each day Chef can only press one button (either white or black). After using a button once, it becomes inactive.\u000aPressing a white button with integer x printed on it reduces the number of planned tasks on the day it was pressed by exactly x. Note that this white button can only be pressed if number of planned tasks on the day are greater than or equal to x.\u000aPressing a black button with integer x printed on it increases the number of completed tasks on the day it was pressed by exactly x. Note that this black button can only be pressed if after pressing it, number of completed tasks don't exceed the number of tasks.\u000aChef is interested in finding the minimum possible amount of total uncompleted tasks he will still be left with after N days using the Machine in the best way?\u000aBe careful! Time is sensitive! Chef cannot make a day when he completed more tasks then planned, as this may result in a more-work-than-planned paradox, killing all lazy people on the planet!\u000aInput\u000aThe first line of input contains a single integer T, denoting the number of test cases. Description of T test cases follows.\u000aThe first line of each test case contains three integers \u2014 N, K, M \u2014 denoting the number of days, white and black buttons appropriately.\u000aThe second line contains N space-separated integers A1, A2, \u2026 , AN, denoting the number of planned tasks.\u000aThe third line contains N space-separated integers B1, B2, \u2026 , BN, denoting the number of completed tasks.\u000aThe fourth line contains K space-separated integers C1, C2, \u2026 , CK, denoting the integers on white buttons.\u000aThe fifth and last line contains M space-separated integers D1, D2, \u2026 , DM, denoting the integers on black buttons.\u000aOutput\u000aIn a single line, output an integer \u2014 the minimum possible amount of uncompleted tasks.\u000aConstraints\u000a1 \u2264 T \u2264 4\u000a1 \u2264 N, K, M \u2264 10^5\u000a1 \u2264 Bi \u2264 Ai \u2264 10^5\u000a1 \u2264 Ci, Di \u2264 10^5\u000aSubtasks\u000aSubtask N \u2264 10, K, M \u2264 5. Points: 30\u000aSubtask Original constraints. Points: 70\u000aExample\u000aInput:\u000a1\u000a4 2 2 \u000a5 7 6 1\u000a3 3 1 1\u000a6 3\u000a1 4\u000a\u000aOutput:\u000a3\u000aExplanation\u000aExample case 1.\u000aIn this example Chef goes through the following steps:\u000aUse black button 1 on the first day.\u000aUse black button 4 on the second day.\u000aUse white button 3 on the third day.\u000aThe arrays A and B are now effectively changed to:\u000a5 7 3 1\u000a4 7 1 1\u000aSo he will have 3 uncompleted tasks.\u000aAuthor: berezin\u000aTester: antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/CHEFTMA\u000aTags: berezin greedy jan16 simple stl\u000aDate Added: 8-12-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef spent N days working really hard! He planned loads of tasks: as many as Ai tasks to do on the ith day! Chef's work was brutal, so he only managed to finish Bi tasks on the ith day. N Ai i ith th Bi i ith th The good news is that Chef has a Time Machine! The Time Machine has K white buttons and M black buttons. Each button has a positive integer printed on it. Now Chef goes through all N days consequently and presses buttons. Each day Chef can only press one button (either white or black). After using a button once, it becomes inactive. K M N one Pressing a white button with integer x printed on it reduces the number of planned tasks on the day it was pressed by exactly x. Note that this white button can only be pressed if number of planned tasks on the day are greater than or equal to x. x x Pressing a black button with integer x printed on it increases the number of completed tasks on the day it was pressed by exactly x. Note that this black button can only be pressed if after pressing it, number of completed tasks don't exceed the number of tasks. x x Chef is interested in finding the minimum possible amount of total uncompleted tasks he will still be left with after N days using the Machine in the best way? total N Be careful! Time is sensitive! Chef cannot make a day when he completed more tasks then planned, as this may result in a more-work-than-planned paradox, killing all lazy people on the planet! cannot Input The first line of input contains a single integer T, denoting the number of test cases. Description of T test cases follows.\u000aThe first line of each test case contains three integers \u2014 N, K, M \u2014 denoting the number of days, white and black buttons appropriately.\u000aThe second line contains N space-separated integers A1, A2, \u2026 , AN, denoting the number of planned tasks.\u000aThe third line contains N space-separated integers B1, B2, \u2026 , BN, denoting the number of completed tasks.\u000aThe fourth line contains K space-separated integers C1, C2, \u2026 , CK, denoting the integers on white buttons.\u000aThe fifth and last line contains M space-separated integers D1, D2, \u2026 , DM, denoting the integers on black buttons. The first line of input contains a single integer T, denoting the number of test cases. Description of T test cases follows. T T The first line of each test case contains three integers \u2014 N, K, M \u2014 denoting the number of days, white and black buttons appropriately. N, K, M The second line contains N space-separated integers A1, A2, \u2026 , AN, denoting the number of planned tasks. N A1 1 A2 2 AN N The third line contains N space-separated integers B1, B2, \u2026 , BN, denoting the number of completed tasks. N B1 1 B2 2 BN N The fourth line contains K space-separated integers C1, C2, \u2026 , CK, denoting the integers on white buttons. K C1 1 C2 2 CK K The fifth and last line contains M space-separated integers D1, D2, \u2026 , DM, denoting the integers on black buttons. M D1 1 D2 2 DM M Output In a single line, output an integer \u2014 the minimum possible amount of uncompleted tasks. In a single line, output an integer \u2014 the minimum possible amount of uncompleted tasks. Constraints 1 \u2264 T \u2264 4\u000a1 \u2264 N, K, M \u2264 10^5\u000a1 \u2264 Bi \u2264 Ai \u2264 10^5\u000a1 \u2264 Ci, Di \u2264 10^5 1 \u2264 T \u2264 4 1 T 4 1 \u2264 N, K, M \u2264 10^5 1 N, K, M 10^5 1 \u2264 Bi \u2264 Ai \u2264 10^5 1 Bi i Ai i 10^5 1 \u2264 Ci, Di \u2264 10^5 1 Ci i Di i 10^5 Subtasks Subtask N \u2264 10, K, M \u2264 5. Points: 30\u000aSubtask Original constraints. Points: 70 Subtask N \u2264 10, K, M \u2264 5. Points: 30 N 10 K, M 5 30 Subtask Original constraints. Points: 70 Original constraints 70 Example Input:\u000a1\u000a4 2 2 \u000a5 7 6 1\u000a3 3 1 1\u000a6 3\u000a1 4\u000a\u000aOutput:\u000a3 Input: Output: Explanation Example case 1.\u000aIn this example Chef goes through the following steps:\u000aUse black button 1 on the first day.\u000aUse black button 4 on the second day.\u000aUse white button 3 on the third day.\u000aThe arrays A and B are now effectively changed to:\u000a5 7 3 1\u000a4 7 1 1\u000aSo he will have 3 uncompleted tasks. Example case 1. 1 4 3 A B 3  Author: berezin\u000aTester: antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/CHEFTMA\u000aTags: berezin greedy jan16 simple stl\u000aDate Added: 8-12-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: berezin\u000aTester: antoniuk1\u000aEditorial: http://discuss.codechef.com/problems/CHEFTMA\u000aTags: berezin greedy jan16 simple stl\u000aDate Added: 8-12-2015\u000aTime Limit: 2 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: berezin Author: berezin berezin Tester: antoniuk1 Tester: antoniuk1 antoniuk1 Editorial: http://discuss.codechef.com/problems/CHEFTMA Editorial: http://discuss.codechef.com/problems/CHEFTMA http://discuss.codechef.com/problems/CHEFTMA Tags: berezin greedy jan16 simple stl Tags: berezin greedy jan16 simple stl berezin greedy jan16 simple stl Date Added: 8-12-2015 Date Added: 8-12-2015 Time Limit: 2 sec Time Limit: 2 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V berezin greedy jan16 simple stl
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/CHEFTMA
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef spent N days working really hard! He planned loads of tasks: as many as Ai tasks to do on the ith day! Chef's work was brutal, so he only managed to finish Bi tasks on the ith day.
p18
aVThe good news is that Chef has a Time Machine!
p19
aVThe Time Machine has K white buttons and M black buttons. Each button has a positive integer printed on it. Now Chef goes through all N days consequently and presses buttons. Each day Chef can only press one button (either white or black). After using a button once, it becomes inactive.
p20
aVPressing a white button with integer x printed on it reduces the number of planned tasks on the day it was pressed by exactly x. Note that this white button can only be pressed if number of planned tasks on the day are greater than or equal to x.
p21
aVPressing a black button with integer x printed on it increases the number of completed tasks on the day it was pressed by exactly x. Note that this black button can only be pressed if after pressing it, number of completed tasks don't exceed the number of tasks.
p22
aVChef is interested in finding the minimum possible amount of total uncompleted tasks he will still be left with after N days using the Machine in the best way?
p23
aVBe careful! Time is sensitive! Chef cannot make a day when he completed more tasks then planned, as this may result in a more-work-than-planned paradox, killing all lazy people on the planet!
p24
asS'input'
p25
(lp26
VInput
p27
aVThe first line of input contains a single integer T, denoting the number of test cases. Description of T test cases follows.
p28
aVThe first line of each test case contains three integers \u2014 N, K, M \u2014 denoting the number of days, white and black buttons appropriately.
p29
aVThe second line contains N space-separated integers A1, A2, \u2026 , AN, denoting the number of planned tasks.
p30
aVThe third line contains N space-separated integers B1, B2, \u2026 , BN, denoting the number of completed tasks.
p31
aVThe fourth line contains K space-separated integers C1, C2, \u2026 , CK, denoting the integers on white buttons.
p32
aVThe fifth and last line contains M space-separated integers D1, D2, \u2026 , DM, denoting the integers on black buttons.
p33
aVOutput
p34
aVIn a single line, output an integer \u2014 the minimum possible amount of uncompleted tasks.
p35
asS'constraints'
p36
(lp37
VConstraints
p38
aV1 \u2264 T \u2264 4
p39
aV1 \u2264 N, K, M \u2264 10^5
p40
aV1 \u2264 Bi \u2264 Ai \u2264 10^5
p41
aV1 \u2264 Ci, Di \u2264 10^5
p42
aVSubtasks
p43
aVSubtask N \u2264 10, K, M \u2264 5. Points: 30
p44
aVSubtask Original constraints. Points: 70
p45
asS'id'
p46
c__builtin__
id
p47
sS'name'
p48
VCHEFTMA
p49
sb.