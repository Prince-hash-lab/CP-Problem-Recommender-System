(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 3 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef's love for Fibonacci numbers helps him to design following interesting problem.\u000aHe defines a function F for an array S as follows:\u000awhere\u000aSi denotes a non-empty subset of multiset S.\u000asum(Si) denotes the sum of all element of multiset Si.\u000aFibonacci(x) denotes the xth Fibonacci number.\u000aGiven an array A consisting of N elements. Chef asked you to process following two types of queries on this array accurately and efficiently.\u000aC X Y: Change the value of Xth element of array to Y i.e AX = Y.\u000aQ L R: Compute function F over the subarray defined by the elements of array A in the range L to R, both inclusive.\u000aPlease see the Note section if you need details regarding Fibonacci function.\u000aInput\u000aFirst line of input contains 2 space separated integer N and M denoting the size of array A and the number of queries to be performed. Next line of input contains N space separated integers denoting the elements of array A. Each of next M lines of input contains a query having one of the mentioned two types.\u000aOutput\u000aFor each query of type Q, output the value of function F for the given range of array A.\u000aConstraints\u000a1 \u2264 N, M \u2264 105\u000a1 \u2264 Ai, Y \u2264 109\u000a1 \u2264 L, R, X \u2264 N\u000atype = {'C', 'Q'}\u000aSubtasks\u000aSubtask 1 (20 points) : 1 \u2264 N, M \u2264 1000, 1 \u2264 Ai, Y \u2264 106, type = { 'Q' }\u000aSubtask 2 (20 points) : 1 \u2264 N, M \u2264 50000, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' }\u000aSubtask 3 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'Q' }\u000aSubtask 4 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' }\u000aExample\u000aInput\u000a3 5\u000a1 2 3\u000aQ 1 2\u000aQ 2 3\u000aC 1 2\u000aQ 1 2\u000aQ 1 3\u000aOutput\u000a4\u000a8\u000a5\u000a30\u000aExplanation:\u000aQ1 : F = Fibonacci(1) + Fibonacci(2) + Fibonacci(1+2) = 4 % 1000000007 = 4\u000aQ2 : F = Fibonacci(2) + Fibonacci(3) + Fibonacci(2+3) = 8 % 1000000007 = 8\u000aQ3 : A = {2, 2, 3}\u000aQ4 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(2+2) = 5 % 1000000007 = 5\u000aQ5 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(3) + Fibonacci(2+2) + Fibonacci(2+3) + Fibonacci(2+3) + Fibonacci(2+2+3) = 30 % 1000000007 = 30\u000aNote\u000aFibonacciK denotes the Kth Fibonacci number. Fibonacci series is defined as follows:\u000aFor 1 \u2264 K \u2264 2, FibonacciK = 1\u000aOtherwise, FibonacciK = FibonacciK-1 + FibonacciK-2\u000aPlease check this link for more details about Fibonacci numbers.\u000aAuthor: ma5termind\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/FIBQ\u000aTags: april16 fibonacci ma5termind medium segment-tree\u000aDate Added: 12-01-2016\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef's love for Fibonacci numbers helps him to design following interesting problem.\u000aHe defines a function F for an array S as follows:\u000awhere\u000aSi denotes a non-empty subset of multiset S.\u000asum(Si) denotes the sum of all element of multiset Si.\u000aFibonacci(x) denotes the xth Fibonacci number.\u000aGiven an array A consisting of N elements. Chef asked you to process following two types of queries on this array accurately and efficiently.\u000aC X Y: Change the value of Xth element of array to Y i.e AX = Y.\u000aQ L R: Compute function F over the subarray defined by the elements of array A in the range L to R, both inclusive.\u000aPlease see the Note section if you need details regarding Fibonacci function.\u000aInput\u000aFirst line of input contains 2 space separated integer N and M denoting the size of array A and the number of queries to be performed. Next line of input contains N space separated integers denoting the elements of array A. Each of next M lines of input contains a query having one of the mentioned two types.\u000aOutput\u000aFor each query of type Q, output the value of function F for the given range of array A.\u000aConstraints\u000a1 \u2264 N, M \u2264 105\u000a1 \u2264 Ai, Y \u2264 109\u000a1 \u2264 L, R, X \u2264 N\u000atype = {'C', 'Q'}\u000aSubtasks\u000aSubtask 1 (20 points) : 1 \u2264 N, M \u2264 1000, 1 \u2264 Ai, Y \u2264 106, type = { 'Q' }\u000aSubtask 2 (20 points) : 1 \u2264 N, M \u2264 50000, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' }\u000aSubtask 3 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'Q' }\u000aSubtask 4 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' }\u000aExample\u000aInput\u000a3 5\u000a1 2 3\u000aQ 1 2\u000aQ 2 3\u000aC 1 2\u000aQ 1 2\u000aQ 1 3\u000aOutput\u000a4\u000a8\u000a5\u000a30\u000aExplanation:\u000aQ1 : F = Fibonacci(1) + Fibonacci(2) + Fibonacci(1+2) = 4 % 1000000007 = 4\u000aQ2 : F = Fibonacci(2) + Fibonacci(3) + Fibonacci(2+3) = 8 % 1000000007 = 8\u000aQ3 : A = {2, 2, 3}\u000aQ4 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(2+2) = 5 % 1000000007 = 5\u000aQ5 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(3) + Fibonacci(2+2) + Fibonacci(2+3) + Fibonacci(2+3) + Fibonacci(2+2+3) = 30 % 1000000007 = 30\u000aNote\u000aFibonacciK denotes the Kth Fibonacci number. Fibonacci series is defined as follows:\u000aFor 1 \u2264 K \u2264 2, FibonacciK = 1\u000aOtherwise, FibonacciK = FibonacciK-1 + FibonacciK-2\u000aPlease check this link for more details about Fibonacci numbers.\u000aAuthor: ma5termind\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/FIBQ\u000aTags: april16 fibonacci ma5termind medium segment-tree\u000aDate Added: 12-01-2016\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef's love for Fibonacci numbers helps him to design following interesting problem. He defines a function F for an array S as follows: F S   where Si denotes a non-empty subset of multiset S.\u000asum(Si) denotes the sum of all element of multiset Si.\u000aFibonacci(x) denotes the xth Fibonacci number. Si denotes a non-empty subset of multiset S. Si i non-empty S sum(Si) denotes the sum of all element of multiset Si. sum(Si) i Si i Fibonacci(x) denotes the xth Fibonacci number. Fibonacci(x) xth th Given an array A consisting of N elements. Chef asked you to process following two types of queries on this array accurately and efficiently. A N C X Y: Change the value of Xth element of array to Y i.e AX = Y.\u000aQ L R: Compute function F over the subarray defined by the elements of array A in the range L to R, both inclusive. C X Y: Change the value of Xth element of array to Y i.e AX = Y. C X Y: Xth th Y AX = Y X Q L R: Compute function F over the subarray defined by the elements of array A in the range L to R, both inclusive. Q L R: F A L R Please see the Note section if you need details regarding Fibonacci function. Input First line of input contains 2 space separated integer N and M denoting the size of array A and the number of queries to be performed. Next line of input contains N space separated integers denoting the elements of array A. Each of next M lines of input contains a query having one of the mentioned two types. 2 N M A N A M Output For each query of type Q, output the value of function F for the given range of array A. Q F A Constraints 1 \u2264 N, M \u2264 105\u000a1 \u2264 Ai, Y \u2264 109\u000a1 \u2264 L, R, X \u2264 N\u000atype = {'C', 'Q'} 1 \u2264 N, M \u2264 105 1 \u2264 N, M \u2264 105 5 1 \u2264 Ai, Y \u2264 109 1 \u2264 Ai, Y \u2264 109 i 9 1 \u2264 L, R, X \u2264 N 1 \u2264 L, R, X \u2264 N type = {'C', 'Q'} {'C', 'Q'} Subtasks Subtask 1 (20 points) : 1 \u2264 N, M \u2264 1000, 1 \u2264 Ai, Y \u2264 106, type = { 'Q' }\u000aSubtask 2 (20 points) : 1 \u2264 N, M \u2264 50000, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' }\u000aSubtask 3 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'Q' }\u000aSubtask 4 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' } Subtask 1 (20 points) : 1 \u2264 N, M \u2264 1000, 1 \u2264 Ai, Y \u2264 106, type = { 'Q' } 1 \u2264 N, M \u2264 1000, 1 \u2264 Ai, Y \u2264 106, type = { 'Q' } i 6 Subtask 2 (20 points) : 1 \u2264 N, M \u2264 50000, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' } 1 \u2264 N, M \u2264 50000, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' } i 9 Subtask 3 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'Q' } 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'Q' } 5 i 9 Subtask 4 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' } 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' } 5 i 9 Example Input Input 3 5\u000a1 2 3\u000aQ 1 2\u000aQ 2 3\u000aC 1 2\u000aQ 1 2\u000aQ 1 3 Output Output 4\u000a8\u000a5\u000a30 Explanation: Q1 : F = Fibonacci(1) + Fibonacci(2) + Fibonacci(1+2) = 4 % 1000000007 = 4\u000aQ2 : F = Fibonacci(2) + Fibonacci(3) + Fibonacci(2+3) = 8 % 1000000007 = 8\u000aQ3 : A = {2, 2, 3}\u000aQ4 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(2+2) = 5 % 1000000007 = 5\u000aQ5 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(3) + Fibonacci(2+2) + Fibonacci(2+3) + Fibonacci(2+3) + Fibonacci(2+2+3) = 30 % 1000000007 = 30 Q1 : F = Fibonacci(1) + Fibonacci(2) + Fibonacci(1+2) = 4 % 1000000007 = 4 Q1 1 Q2 : F = Fibonacci(2) + Fibonacci(3) + Fibonacci(2+3) = 8 % 1000000007 = 8 Q2 2 Q3 : A = {2, 2, 3} Q3 3 Q4 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(2+2) = 5 % 1000000007 = 5 Q4 4 Q5 : F = Fibonacci(2) + Fibonacci(2) + Fibonacci(3) + Fibonacci(2+2) + Fibonacci(2+3) + Fibonacci(2+3) + Fibonacci(2+2+3) = 30 % 1000000007 = 30 Q5 5 Note FibonacciK denotes the Kth Fibonacci number. Fibonacci series is defined as follows: FibonacciK K Kth th For 1 \u2264 K \u2264 2, FibonacciK = 1\u000aOtherwise, FibonacciK = FibonacciK-1 + FibonacciK-2\u000aPlease check this link for more details about Fibonacci numbers. For 1 \u2264 K \u2264 2, FibonacciK = 1 1 \u2264 K \u2264 2 FibonacciK = 1 K Otherwise, FibonacciK = FibonacciK-1 + FibonacciK-2 FibonacciK = FibonacciK-1 + FibonacciK-2 K K-1 K-2 Please check this link for more details about Fibonacci numbers. link  Author: ma5termind\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/FIBQ\u000aTags: april16 fibonacci ma5termind medium segment-tree\u000aDate Added: 12-01-2016\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: ma5termind\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/FIBQ\u000aTags: april16 fibonacci ma5termind medium segment-tree\u000aDate Added: 12-01-2016\u000aTime Limit: 3 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: ma5termind Author: ma5termind ma5termind Tester: xcwgf666 Tester: xcwgf666 xcwgf666 Editorial: http://discuss.codechef.com/problems/FIBQ Editorial: http://discuss.codechef.com/problems/FIBQ http://discuss.codechef.com/problems/FIBQ Tags: april16 fibonacci ma5termind medium segment-tree Tags: april16 fibonacci ma5termind medium segment-tree april16 fibonacci ma5termind medium segment-tree Date Added: 12-01-2016 Date Added: 12-01-2016 Time Limit: 3 sec Time Limit: 3 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V april16 fibonacci ma5termind medium segment-tree
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/FIBQ
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef's love for Fibonacci numbers helps him to design following interesting problem.
p18
aVHe defines a function F for an array S as follows:
p19
aVwhere
p20
aVSi denotes a non-empty subset of multiset S.
p21
aVsum(Si) denotes the sum of all element of multiset Si.
p22
aVFibonacci(x) denotes the xth Fibonacci number.
p23
aVGiven an array A consisting of N elements. Chef asked you to process following two types of queries on this array accurately and efficiently.
p24
aVC X Y: Change the value of Xth element of array to Y i.e AX = Y.
p25
aVQ L R: Compute function F over the subarray defined by the elements of array A in the range L to R, both inclusive.
p26
aVPlease see the Note section if you need details regarding Fibonacci function.
p27
asS'input'
p28
(lp29
VInput
p30
aVFirst line of input contains 2 space separated integer N and M denoting the size of array A and the number of queries to be performed. Next line of input contains N space separated integers denoting the elements of array A. Each of next M lines of input contains a query having one of the mentioned two types.
p31
aVOutput
p32
aVFor each query of type Q, output the value of function F for the given range of array A.
p33
asS'constraints'
p34
(lp35
VConstraints
p36
aV1 \u2264 N, M \u2264 105
p37
aV1 \u2264 Ai, Y \u2264 109
p38
aV1 \u2264 L, R, X \u2264 N
p39
aVtype = {'C', 'Q'}
p40
aVSubtasks
p41
aVSubtask 1 (20 points) : 1 \u2264 N, M \u2264 1000, 1 \u2264 Ai, Y \u2264 106, type = { 'Q' }
p42
aVSubtask 2 (20 points) : 1 \u2264 N, M \u2264 50000, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' }
p43
aVSubtask 3 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'Q' }
p44
aVSubtask 4 (30 points) : 1 \u2264 N, M \u2264 105, 1 \u2264 Ai, Y \u2264 109, type = { 'C', Q' }
p45
asS'id'
p46
c__builtin__
id
p47
sS'name'
p48
VFIBQ
p49
sb.