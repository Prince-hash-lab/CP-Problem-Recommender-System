(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef has bought N robots to transport cakes for a large community wedding. He has assigned unique indices, from 1 to N, to each of them. How it will happen?\u000aChef arranges the N robots in a row, in the (increasing) order of their indices. Then, he chooses the first M robots and moves them to the end of the queue. Now, Chef goes to the robot at the first position in the row and hands it one cake. He then notes this robot's index (say k) in his notebook, and goes to the kth position in the row. If the robot at this position does not have a cake, he give him one cake, notes his index in his notebook, and continues the same process. If a robot visited by Chef already has a cake with it, then he stops moving and the cake assignment process is stopped.\u000aChef will be satisfied if all robots have a cake in the end. In order to prepare the kitchen staff for Chef's wrath (or happiness :) ), you must find out if he will be satisfied or not? If not, you have to find out how much robots have a cake, so that the kitchen staff can prepare themselves accordingly.\u000aInput\u000aThe first line of input contains a single integer T denoting the number of test cases.\u000aThe single line of each test cases contains two space separated integers N and M.\u000aOutput\u000aFor each of the T test cases, output a single line:\u000aIf all N robots have a cake, output "Yes" (without quotes).\u000aOtherwise, output "No" (without quotes) followed by a space and the number of robots which have a cake.\u000aConstraints and Subtasks\u000a1 \u2264 T \u2264 10\u000a0 \u2264 M < N\u000aSubtask 1: 25 points\u000a1 \u2264 N \u2264 10^5\u000aSubtask 3: 75 points\u000a1 \u2264 N \u2264 10^9\u000aExample\u000aInput:\u000a3\u000a2 0\u000a2 1\u000a4 2\u000a\u000aOutput:\u000aNo 1\u000aYes\u000aNo 2\u000aExplanation\u000aIn test case 1, we have two robots indexed 1 and 2. They are arranged as (1 2). Chef goes to the first robot, gives him a cake, and moves to position 1. In the next step, he sees that robot at this position already has a has cake. So Chef stops moving, and our answer is "No 1".\u000aIn test case 2, we again have two robots indexed 1 and 2. Initially, they are arranged as (1 2). Then, Chef moves robot#1 to the end of the row, and thus the arrangement becomes (2 1). Chef goes to the robot at the first position, which is robot#2. Chef hands him a cake, and moves to position 2. Then, he hands a cake to robot#1 at position 2, and moves back to the first position. Since, robot#2 at the first position already ahs a cake, Chef stops moving. All N robots have cakes, so Chef is satisfied, and our answer is "Yes".\u000aIn the 3rd test case, we have the following arrangement of robots: (3 4 1 2). Only robots with indices 3 and 1 will get cakes. So our answer is "No 2".\u000aAuthor: egor_bobyk\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/EGRCAKE\u000aTags: egor_bobyk gcd nov15 simple\u000aDate Added: 20-09-2015\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef has bought N robots to transport cakes for a large community wedding. He has assigned unique indices, from 1 to N, to each of them. How it will happen?\u000aChef arranges the N robots in a row, in the (increasing) order of their indices. Then, he chooses the first M robots and moves them to the end of the queue. Now, Chef goes to the robot at the first position in the row and hands it one cake. He then notes this robot's index (say k) in his notebook, and goes to the kth position in the row. If the robot at this position does not have a cake, he give him one cake, notes his index in his notebook, and continues the same process. If a robot visited by Chef already has a cake with it, then he stops moving and the cake assignment process is stopped.\u000aChef will be satisfied if all robots have a cake in the end. In order to prepare the kitchen staff for Chef's wrath (or happiness :) ), you must find out if he will be satisfied or not? If not, you have to find out how much robots have a cake, so that the kitchen staff can prepare themselves accordingly.\u000aInput\u000aThe first line of input contains a single integer T denoting the number of test cases.\u000aThe single line of each test cases contains two space separated integers N and M.\u000aOutput\u000aFor each of the T test cases, output a single line:\u000aIf all N robots have a cake, output "Yes" (without quotes).\u000aOtherwise, output "No" (without quotes) followed by a space and the number of robots which have a cake.\u000aConstraints and Subtasks\u000a1 \u2264 T \u2264 10\u000a0 \u2264 M < N\u000aSubtask 1: 25 points\u000a1 \u2264 N \u2264 10^5\u000aSubtask 3: 75 points\u000a1 \u2264 N \u2264 10^9\u000aExample\u000aInput:\u000a3\u000a2 0\u000a2 1\u000a4 2\u000a\u000aOutput:\u000aNo 1\u000aYes\u000aNo 2\u000aExplanation\u000aIn test case 1, we have two robots indexed 1 and 2. They are arranged as (1 2). Chef goes to the first robot, gives him a cake, and moves to position 1. In the next step, he sees that robot at this position already has a has cake. So Chef stops moving, and our answer is "No 1".\u000aIn test case 2, we again have two robots indexed 1 and 2. Initially, they are arranged as (1 2). Then, Chef moves robot#1 to the end of the row, and thus the arrangement becomes (2 1). Chef goes to the robot at the first position, which is robot#2. Chef hands him a cake, and moves to position 2. Then, he hands a cake to robot#1 at position 2, and moves back to the first position. Since, robot#2 at the first position already ahs a cake, Chef stops moving. All N robots have cakes, so Chef is satisfied, and our answer is "Yes".\u000aIn the 3rd test case, we have the following arrangement of robots: (3 4 1 2). Only robots with indices 3 and 1 will get cakes. So our answer is "No 2".\u000aAuthor: egor_bobyk\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/EGRCAKE\u000aTags: egor_bobyk gcd nov15 simple\u000aDate Added: 20-09-2015\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef has bought N robots to transport cakes for a large community wedding. He has assigned unique indices, from 1 to N, to each of them. How it will happen? N N Chef arranges the N robots in a row, in the (increasing) order of their indices. Then, he chooses the first M robots and moves them to the end of the queue. Now, Chef goes to the robot at the first position in the row and hands it one cake. He then notes this robot's index (say k) in his notebook, and goes to the kth position in the row. If the robot at this position does not have a cake, he give him one cake, notes his index in his notebook, and continues the same process. If a robot visited by Chef already has a cake with it, then he stops moving and the cake assignment process is stopped. N M th Chef will be satisfied if all robots have a cake in the end. In order to prepare the kitchen staff for Chef's wrath (or happiness :) ), you must find out if he will be satisfied or not? If not, you have to find out how much robots have a cake, so that the kitchen staff can prepare themselves accordingly. Input The first line of input contains a single integer T denoting the number of test cases.\u000aThe single line of each test cases contains two space separated integers N and M. The first line of input contains a single integer T denoting the number of test cases. T The single line of each test cases contains two space separated integers N and M. N M Output For each of the T test cases, output a single line: T If all N robots have a cake, output "Yes" (without quotes).\u000aOtherwise, output "No" (without quotes) followed by a space and the number of robots which have a cake. If all N robots have a cake, output "Yes" (without quotes). N "Yes" Otherwise, output "No" (without quotes) followed by a space and the number of robots which have a cake. "No" number of robots Constraints and Subtasks 1 \u2264 T \u2264 10\u000a0 \u2264 M < N 1 \u2264 T \u2264 10 1 T 10 0 \u2264 M < N 0 M N Subtask 1: 25 points Subtask 1: 25 points 1 \u2264 N \u2264 10^5 1 \u2264 N \u2264 10^5 1 N 10^5 Subtask 3: 75 points Subtask 3: 75 points 1 \u2264 N \u2264 10^9 1 \u2264 N \u2264 10^9 1 N 10^9 Example Input:\u000a3\u000a2 0\u000a2 1\u000a4 2\u000a\u000aOutput:\u000aNo 1\u000aYes\u000aNo 2 Input: Output: Explanation In test case 1, we have two robots indexed 1 and 2. They are arranged as (1 2). Chef goes to the first robot, gives him a cake, and moves to position 1. In the next step, he sees that robot at this position already has a has cake. So Chef stops moving, and our answer is "No 1". answer "No 1" In test case 2, we again have two robots indexed 1 and 2. Initially, they are arranged as (1 2). Then, Chef moves robot#1 to the end of the row, and thus the arrangement becomes (2 1). Chef goes to the robot at the first position, which is robot#2. Chef hands him a cake, and moves to position 2. Then, he hands a cake to robot#1 at position 2, and moves back to the first position. Since, robot#2 at the first position already ahs a cake, Chef stops moving. All N robots have cakes, so Chef is satisfied, and our answer is "Yes". N answer "Yes" In the 3rd test case, we have the following arrangement of robots: (3 4 1 2). Only robots with indices 3 and 1 will get cakes. So our answer is "No 2". rd answer "No 2"  Author: egor_bobyk\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/EGRCAKE\u000aTags: egor_bobyk gcd nov15 simple\u000aDate Added: 20-09-2015\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: egor_bobyk\u000aTester: iscsi\u000aEditorial: http://discuss.codechef.com/problems/EGRCAKE\u000aTags: egor_bobyk gcd nov15 simple\u000aDate Added: 20-09-2015\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: egor_bobyk Author: egor_bobyk egor_bobyk Tester: iscsi Tester: iscsi iscsi Editorial: http://discuss.codechef.com/problems/EGRCAKE Editorial: http://discuss.codechef.com/problems/EGRCAKE http://discuss.codechef.com/problems/EGRCAKE Tags: egor_bobyk gcd nov15 simple Tags: egor_bobyk gcd nov15 simple egor_bobyk gcd nov15 simple Date Added: 20-09-2015 Date Added: 20-09-2015 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V egor_bobyk gcd nov15 simple
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/EGRCAKE
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef has bought N robots to transport cakes for a large community wedding. He has assigned unique indices, from 1 to N, to each of them. How it will happen?
p18
aVChef arranges the N robots in a row, in the (increasing) order of their indices. Then, he chooses the first M robots and moves them to the end of the queue. Now, Chef goes to the robot at the first position in the row and hands it one cake. He then notes this robot's index (say k) in his notebook, and goes to the kth position in the row. If the robot at this position does not have a cake, he give him one cake, notes his index in his notebook, and continues the same process. If a robot visited by Chef already has a cake with it, then he stops moving and the cake assignment process is stopped.
p19
aVChef will be satisfied if all robots have a cake in the end. In order to prepare the kitchen staff for Chef's wrath (or happiness :) ), you must find out if he will be satisfied or not? If not, you have to find out how much robots have a cake, so that the kitchen staff can prepare themselves accordingly.
p20
asS'input'
p21
(lp22
VInput
p23
aVThe first line of input contains a single integer T denoting the number of test cases.
p24
aVThe single line of each test cases contains two space separated integers N and M.
p25
aVOutput
p26
aVFor each of the T test cases, output a single line:
p27
aVIf all N robots have a cake, output "Yes" (without quotes).
p28
aVOtherwise, output "No" (without quotes) followed by a space and the number of robots which have a cake.
p29
asS'constraints'
p30
(lp31
VConstraints and Subtasks
p32
aV1 \u2264 T \u2264 10
p33
aV0 \u2264 M < N
p34
aVSubtask 1: 25 points
p35
aV1 \u2264 N \u2264 10^5
p36
aVSubtask 3: 75 points
p37
aV1 \u2264 N \u2264 10^9
p38
asS'id'
p39
c__builtin__
id
p40
sS'name'
p41
VEGRCAKE
p42
sb.