(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef cooks nice receipes in the cafeteria of his company. The cafe contains N boxes with food enumerated from 1 to N and are placed in a circle in clocwise order (boxes 1 and N are adjacent). Each box has unlimited amount of food with a tastyness level of Ai. Chef invented a definition of a magic box!\u000aChef picks a box i and stays in front of it.\u000aNow Chef eats food from box i and skips next Ai boxes.\u000aNow Chef is staying at some other (probably even the same!) box and repeats.\u000aBox i is a magic box if at some point of such game started from box i, Chef will find himself staying in front of it again.\u000aWhen Chef came home, Chef's dog Tommy asked him about how many magic boxes were in the cafe? Help Chef to in finding that!\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aThe first line of each test case contains a single integer N denoting the number of boxes.\u000aThe second line contains N space-separated integers A1, A2, ..., AN denoting the tastyness levels of each box.\u000aOutput\u000aFor each test case, output a single line containing number of magical boxes.\u000aConstraints\u000a1 \u2264 sum of all N over all the test cases in a single test file \u2264 106\u000a0 \u2264 Ai \u2264 109\u000aSubtasks\u000aSubtask #1 (30 points): 1 \u2264 sum of all N over all the test cases \u2264 104; 1 \u2264 N \u2264 1000\u000aSubtask #2 (70 points): 1 \u2264 sum of all N over all the test cases \u2264 106; 1 \u2264 N \u2264 105\u000aExample\u000aInput:\u000a3\u000a4\u000a1 1 1 1\u000a4\u000a3 0 0 0\u000a4\u000a0 0 0 2\u000aOutput:\u000a4\u000a1\u000a2\u000aExplanation\u000aExample case 1.\u000aHere are Chef's paths if he starting from each the box:\u000a1->3->1\u000a2->4->2\u000a3->1->3\u000a4->2->4\u000aAs you see, all 4 boxes are magical.\u000aExample case 2.\u000aHere are Chef's paths if he starts from each box appropriately:\u000a1->1\u000a2->3->4->1->1\u000a3->4->1->1\u000a4->1->1\u000aAS you see, only box 1 is magical.\u000aAuthor: berezin\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/CHEFRRUN\u000aTags: aug16 berezin graph simple\u000aDate Added: 8-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\u000aChef cooks nice receipes in the cafeteria of his company. The cafe contains N boxes with food enumerated from 1 to N and are placed in a circle in clocwise order (boxes 1 and N are adjacent). Each box has unlimited amount of food with a tastyness level of Ai. Chef invented a definition of a magic box!\u000aChef picks a box i and stays in front of it.\u000aNow Chef eats food from box i and skips next Ai boxes.\u000aNow Chef is staying at some other (probably even the same!) box and repeats.\u000aBox i is a magic box if at some point of such game started from box i, Chef will find himself staying in front of it again.\u000aWhen Chef came home, Chef's dog Tommy asked him about how many magic boxes were in the cafe? Help Chef to in finding that!\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aThe first line of each test case contains a single integer N denoting the number of boxes.\u000aThe second line contains N space-separated integers A1, A2, ..., AN denoting the tastyness levels of each box.\u000aOutput\u000aFor each test case, output a single line containing number of magical boxes.\u000aConstraints\u000a1 \u2264 sum of all N over all the test cases in a single test file \u2264 106\u000a0 \u2264 Ai \u2264 109\u000aSubtasks\u000aSubtask #1 (30 points): 1 \u2264 sum of all N over all the test cases \u2264 104; 1 \u2264 N \u2264 1000\u000aSubtask #2 (70 points): 1 \u2264 sum of all N over all the test cases \u2264 106; 1 \u2264 N \u2264 105\u000aExample\u000aInput:\u000a3\u000a4\u000a1 1 1 1\u000a4\u000a3 0 0 0\u000a4\u000a0 0 0 2\u000aOutput:\u000a4\u000a1\u000a2\u000aExplanation\u000aExample case 1.\u000aHere are Chef's paths if he starting from each the box:\u000a1->3->1\u000a2->4->2\u000a3->1->3\u000a4->2->4\u000aAs you see, all 4 boxes are magical.\u000aExample case 2.\u000aHere are Chef's paths if he starts from each box appropriately:\u000a1->1\u000a2->3->4->1->1\u000a3->4->1->1\u000a4->1->1\u000aAS you see, only box 1 is magical.\u000aAuthor: berezin\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/CHEFRRUN\u000aTags: aug16 berezin graph simple\u000aDate Added: 8-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese, Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese Chef cooks nice receipes in the cafeteria of his company. The cafe contains N boxes with food enumerated from 1 to N and are placed in a circle in clocwise order (boxes 1 and N are adjacent). Each box has unlimited amount of food with a tastyness level of Ai. Chef invented a definition of a magic box! N 1 N 1 N Ai i Chef picks a box i and stays in front of it.\u000aNow Chef eats food from box i and skips next Ai boxes.\u000aNow Chef is staying at some other (probably even the same!) box and repeats.\u000aBox i is a magic box if at some point of such game started from box i, Chef will find himself staying in front of it again. Chef picks a box i and stays in front of it. i Now Chef eats food from box i and skips next Ai boxes. i skips Ai i Now Chef is staying at some other (probably even the same!) box and repeats. Box i is a magic box if at some point of such game started from box i, Chef will find himself staying in front of it again. i i  When Chef came home, Chef's dog Tommy asked him about how many magic boxes were in the cafe? Help Chef to in finding that! Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. T T The first line of each test case contains a single integer N denoting the number of boxes. N The second line contains N space-separated integers A1, A2, ..., AN denoting the tastyness levels of each box. N A1 1 A2 2 AN N Output For each test case, output a single line containing number of magical boxes. Constraints 1 \u2264 sum of all N over all the test cases in a single test file \u2264 106\u000a0 \u2264 Ai \u2264 109 1 \u2264 sum of all N over all the test cases in a single test file \u2264 106 1 N 106 6 0 \u2264 Ai \u2264 109 0 Ai i 109 9 Subtasks Subtask #1 (30 points): 1 \u2264 sum of all N over all the test cases \u2264 104; 1 \u2264 N \u2264 1000\u000aSubtask #2 (70 points): 1 \u2264 sum of all N over all the test cases \u2264 106; 1 \u2264 N \u2264 105 Subtask #1 (30 points): 1 \u2264 sum of all N over all the test cases \u2264 104; 1 \u2264 N \u2264 1000 Subtask #1 (30 points): 1 N 104 4 1 N 1000 Subtask #2 (70 points): 1 \u2264 sum of all N over all the test cases \u2264 106; 1 \u2264 N \u2264 105 Subtask #2 (70 points): 1 N 106 6 1 N 105 5 Example Input:\u000a3\u000a4\u000a1 1 1 1\u000a4\u000a3 0 0 0\u000a4\u000a0 0 0 2\u000aOutput:\u000a4\u000a1\u000a2 Input: 3\u000a4\u000a1 1 1 1\u000a4\u000a3 0 0 0\u000a4\u000a0 0 0 2 Output: 4\u000a1\u000a2 Explanation Example case 1. Example case 1. 1->3->1\u000a2->4->2\u000a3->1->3\u000a4->2->4 1 3 1 2 4 2 3 1 3 4 2 4 4 Example case 2. Example case 2. 1->1\u000a2->3->4->1->1\u000a3->4->1->1\u000a4->1->1 1 1 2 3 4 1 1 3 4 1 1 4 1 1 1  Author: berezin\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/CHEFRRUN\u000aTags: aug16 berezin graph simple\u000aDate Added: 8-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: berezin\u000aTester: xcwgf666\u000aEditorial: http://discuss.codechef.com/problems/CHEFRRUN\u000aTags: aug16 berezin graph simple\u000aDate Added: 8-04-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: berezin Author: berezin berezin Tester: xcwgf666 Tester: xcwgf666 xcwgf666 Editorial: http://discuss.codechef.com/problems/CHEFRRUN Editorial: http://discuss.codechef.com/problems/CHEFRRUN http://discuss.codechef.com/problems/CHEFRRUN Tags: aug16 berezin graph simple Tags: aug16 berezin graph simple aug16 berezin graph simple Date Added: 8-04-2016 Date Added: 8-04-2016 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V aug16 berezin graph simple
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/CHEFRRUN
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.
p17
aVChef cooks nice receipes in the cafeteria of his company. The cafe contains N boxes with food enumerated from 1 to N and are placed in a circle in clocwise order (boxes 1 and N are adjacent). Each box has unlimited amount of food with a tastyness level of Ai. Chef invented a definition of a magic box!
p18
aVChef picks a box i and stays in front of it.
p19
aVNow Chef eats food from box i and skips next Ai boxes.
p20
aVNow Chef is staying at some other (probably even the same!) box and repeats.
p21
aVBox i is a magic box if at some point of such game started from box i, Chef will find himself staying in front of it again.
p22
aVWhen Chef came home, Chef's dog Tommy asked him about how many magic boxes were in the cafe? Help Chef to in finding that!
p23
asS'input'
p24
(lp25
VInput
p26
aVThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
p27
aVThe first line of each test case contains a single integer N denoting the number of boxes.
p28
aVThe second line contains N space-separated integers A1, A2, ..., AN denoting the tastyness levels of each box.
p29
aVOutput
p30
aVFor each test case, output a single line containing number of magical boxes.
p31
asS'constraints'
p32
(lp33
VConstraints
p34
aV1 \u2264 sum of all N over all the test cases in a single test file \u2264 106
p35
aV0 \u2264 Ai \u2264 109
p36
aVSubtasks
p37
aVSubtask #1 (30 points): 1 \u2264 sum of all N over all the test cases \u2264 104; 1 \u2264 N \u2264 1000
p38
aVSubtask #2 (70 points): 1 \u2264 sum of all N over all the test cases \u2264 106; 1 \u2264 N \u2264 105
p39
asS'id'
p40
c__builtin__
id
p41
sS'name'
p42
VCHEFRRUN
p43
sb.