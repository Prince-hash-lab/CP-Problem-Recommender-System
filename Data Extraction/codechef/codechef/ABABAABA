(iproblems
Problem
p0
(dp1
S'time_limit'
p2
(lp3
VTime Limit: 1 sec
p4
asS'source_limit'
p5
(lp6
VSource Limit: 50000 Bytes
p7
asS'description'
p8
V All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese , Russian and Vietnamese as well.\u000aYou are given a uniformly randomly generated string S, consisting of letters from the set {"A", "B"}. Your task is to find a string T that appears in S as a subsequence exactly twice.\u000aIn other words, you need to find such a string T, that there exist exactly two sets of indexes i1, i2, ..., i|T| and j1, j2, ..., j|T| such that there exists some k, where ik \u2260 jk and S{i1...i|T|} = S{j1...j|T|} = T.\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aThe first and only line of each test case contains a single string S.\u000aThe string S was generated randomly. For a generating string S, we first choose an integer N denoting a length of S. After that every symbol of the string S is chosen randomly from the set {"A", "B"} and the both symbols have equal probability to be chosen. Note that N is not choosen randomly.\u000aOutput\u000aFor each test case, output a string that occurs exactly twice as a subsequence in S, or output -1 if there is no such string. If there are more than one possible subsequences occurring exactly two times, you can print any one of them.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000aSubtasks\u000aSubtask #1 (10 points): 2 \u2264 N \u2264 3\u000aSubtask #2 (26 points): 2 \u2264 N \u2264 10\u000aSubtask #3 (64 points): 2 \u2264 N \u2264 5000\u000aExample\u000aInput:\u000a2\u000aAAAA\u000aBAB\u000a\u000aOutput:\u000a-1\u000aB\u000aExplanation\u000aTest case #1:\u000aThe string "AAAA" appears once as a subsequence in itself.\u000aThe string "AAA" appears four times as a subsequence in "AAAA"; possible positions: {2, 3, 4}, {1, 3, 4}, {1, 2, 4}, {1, 2, 3}.\u000aThe strings "AA" and "A" also appear in "AAAA" as a subsequence strictly more than twice.\u000a\u000aSo, there is no string of "AAAA", which appears exactly twice. Hence answer is -1.\u000aTest case #2: Two occurrences of "B" in "BAB" are {1} and {3} (1-based indexing).\u000aAuthor: xcwgf666\u000aTester: zedthirtyeight\u000aEditorial: http://discuss.codechef.com/problems/ABABAABA\u000aTags: ad-hoc easy-medium ltime34 xcwgf666\u000aDate Added: 21-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC\u000aSUBMIT All submissions for this problem are available.\u000aRead problems statements in Mandarin Chinese , Russian and Vietnamese as well.\u000aYou are given a uniformly randomly generated string S, consisting of letters from the set {"A", "B"}. Your task is to find a string T that appears in S as a subsequence exactly twice.\u000aIn other words, you need to find such a string T, that there exist exactly two sets of indexes i1, i2, ..., i|T| and j1, j2, ..., j|T| such that there exists some k, where ik \u2260 jk and S{i1...i|T|} = S{j1...j|T|} = T.\u000aInput\u000aThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\u000aThe first and only line of each test case contains a single string S.\u000aThe string S was generated randomly. For a generating string S, we first choose an integer N denoting a length of S. After that every symbol of the string S is chosen randomly from the set {"A", "B"} and the both symbols have equal probability to be chosen. Note that N is not choosen randomly.\u000aOutput\u000aFor each test case, output a string that occurs exactly twice as a subsequence in S, or output -1 if there is no such string. If there are more than one possible subsequences occurring exactly two times, you can print any one of them.\u000aConstraints\u000a1 \u2264 T \u2264 10\u000aSubtasks\u000aSubtask #1 (10 points): 2 \u2264 N \u2264 3\u000aSubtask #2 (26 points): 2 \u2264 N \u2264 10\u000aSubtask #3 (64 points): 2 \u2264 N \u2264 5000\u000aExample\u000aInput:\u000a2\u000aAAAA\u000aBAB\u000a\u000aOutput:\u000a-1\u000aB\u000aExplanation\u000aTest case #1:\u000aThe string "AAAA" appears once as a subsequence in itself.\u000aThe string "AAA" appears four times as a subsequence in "AAAA"; possible positions: {2, 3, 4}, {1, 3, 4}, {1, 2, 4}, {1, 2, 3}.\u000aThe strings "AA" and "A" also appear in "AAAA" as a subsequence strictly more than twice.\u000a\u000aSo, there is no string of "AAAA", which appears exactly twice. Hence answer is -1.\u000aTest case #2: Two occurrences of "B" in "BAB" are {1} and {3} (1-based indexing).\u000aAuthor: xcwgf666\u000aTester: zedthirtyeight\u000aEditorial: http://discuss.codechef.com/problems/ABABAABA\u000aTags: ad-hoc easy-medium ltime34 xcwgf666\u000aDate Added: 21-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC All submissions for this problem are available. Read problems statements in Mandarin Chinese , Russian and Vietnamese as well. Mandarin Chinese Russian Vietnamese You are given a uniformly randomly generated string S, consisting of letters from the set {"A", "B"}. Your task is to find a string T that appears in S as a subsequence exactly twice. uniformly randomly generated S {"A", "B"} T S exactly twice In other words, you need to find such a string T, that there exist exactly two sets of indexes i1, i2, ..., i|T| and j1, j2, ..., j|T| such that there exists some k, where ik \u2260 jk and S{i1...i|T|} = S{j1...j|T|} = T. T exactly two i1, i2, ..., i|T| 1 2 |T| j1, j2, ..., j|T| 1 2 |T| k ik \u2260 jk k k S{i1...i|T|} = S{j1...j|T|} = T {i1...i|T|} 1 |T| {j1...j|T|} 1 |T| Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. T T The first and only line of each test case contains a single string S. S The string S was generated randomly. For a generating string S, we first choose an integer N denoting a length of S. After that every symbol of the string S is chosen randomly from the set {"A", "B"} and the both symbols have equal probability to be chosen. Note that N is not choosen randomly. S randomly S N S S {"A", "B"} N Output For each test case, output a string that occurs exactly twice as a subsequence in S, or output -1 if there is no such string. If there are more than one possible subsequences occurring exactly two times, you can print any one of them. exactly twice S -1 Constraints 1 \u2264 T \u2264 10 1 \u2264 T \u2264 10 1 T 10 Subtasks Subtask #1 (10 points): 2 \u2264 N \u2264 3\u000aSubtask #2 (26 points): 2 \u2264 N \u2264 10\u000aSubtask #3 (64 points): 2 \u2264 N \u2264 5000 Subtask #1 (10 points): 2 \u2264 N \u2264 3 Subtask #1 (10 points) 2 N 3 Subtask #2 (26 points): 2 \u2264 N \u2264 10 Subtask #2 (26 points) 2 N 10 Subtask #3 (64 points): 2 \u2264 N \u2264 5000 Subtask #3 (64 points) 2 N 5000 Example Input:\u000a2\u000aAAAA\u000aBAB\u000a\u000aOutput:\u000a-1\u000aB Input: Output: Explanation Test case #1: Test case #1 The string "AAAA" appears once as a subsequence in itself.\u000aThe string "AAA" appears four times as a subsequence in "AAAA"; possible positions: {2, 3, 4}, {1, 3, 4}, {1, 2, 4}, {1, 2, 3}.\u000aThe strings "AA" and "A" also appear in "AAAA" as a subsequence strictly more than twice.\u000a\u000aSo, there is no string of "AAAA", which appears exactly twice. Hence answer is -1.\u000aTest case #2: Two occurrences of "B" in "BAB" are {1} and {3} (1-based indexing). The string "AAAA" appears once as a subsequence in itself. The string "AAA" appears four times as a subsequence in "AAAA"; possible positions: {2, 3, 4}, {1, 3, 4}, {1, 2, 4}, {1, 2, 3}. The strings "AA" and "A" also appear in "AAAA" as a subsequence strictly more than twice. So, there is no string of "AAAA", which appears exactly twice. Hence answer is -1.  Test case #2: Two occurrences of "B" in "BAB" are {1} and {3} (1-based indexing). Test case #2  Author: xcwgf666\u000aTester: zedthirtyeight\u000aEditorial: http://discuss.codechef.com/problems/ABABAABA\u000aTags: ad-hoc easy-medium ltime34 xcwgf666\u000aDate Added: 21-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: xcwgf666\u000aTester: zedthirtyeight\u000aEditorial: http://discuss.codechef.com/problems/ABABAABA\u000aTags: ad-hoc easy-medium ltime34 xcwgf666\u000aDate Added: 21-02-2016\u000aTime Limit: 1 sec\u000aSource Limit: 50000 Bytes\u000aLanguages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Author: xcwgf666 Author: xcwgf666 xcwgf666 Tester: zedthirtyeight Tester: zedthirtyeight zedthirtyeight Editorial: http://discuss.codechef.com/problems/ABABAABA Editorial: http://discuss.codechef.com/problems/ABABAABA http://discuss.codechef.com/problems/ABABAABA Tags: ad-hoc easy-medium ltime34 xcwgf666 Tags: ad-hoc easy-medium ltime34 xcwgf666 ad-hoc easy-medium ltime34 xcwgf666 Date Added: 21-02-2016 Date Added: 21-02-2016 Time Limit: 1 sec Time Limit: 1 sec Source Limit: 50000 Bytes Source Limit: 50000 Bytes Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC Languages: ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYPY, PYTH, PYTH 3.4, RUBY, SCALA, SCM chicken, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC SUBMIT  SUBMIT SUBMIT SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS SUCCESSFUL SUBMISSIONS  
p9
sS'tags'
p10
V ad-hoc easy-medium ltime34 xcwgf666
p11
sS'url'
p12
Vhttps://www.codechef.com/problems/ABABAABA
p13
sS'statement'
p14
(lp15
VAll submissions for this problem are available.
p16
aVRead problems statements in Mandarin Chinese , Russian and Vietnamese as well.
p17
aVYou are given a uniformly randomly generated string S, consisting of letters from the set {"A", "B"}. Your task is to find a string T that appears in S as a subsequence exactly twice.
p18
aVIn other words, you need to find such a string T, that there exist exactly two sets of indexes i1, i2, ..., i|T| and j1, j2, ..., j|T| such that there exists some k, where ik \u2260 jk and S{i1...i|T|} = S{j1...j|T|} = T.
p19
asS'input'
p20
(lp21
VInput
p22
aVThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
p23
aVThe first and only line of each test case contains a single string S.
p24
aVThe string S was generated randomly. For a generating string S, we first choose an integer N denoting a length of S. After that every symbol of the string S is chosen randomly from the set {"A", "B"} and the both symbols have equal probability to be chosen. Note that N is not choosen randomly.
p25
aVOutput
p26
aVFor each test case, output a string that occurs exactly twice as a subsequence in S, or output -1 if there is no such string. If there are more than one possible subsequences occurring exactly two times, you can print any one of them.
p27
asS'constraints'
p28
(lp29
VConstraints
p30
aV1 \u2264 T \u2264 10
p31
aVSubtasks
p32
aVSubtask #1 (10 points): 2 \u2264 N \u2264 3
p33
aVSubtask #2 (26 points): 2 \u2264 N \u2264 10
p34
aVSubtask #3 (64 points): 2 \u2264 N \u2264 5000
p35
asS'id'
p36
c__builtin__
id
p37
sS'name'
p38
VABABAABA
p39
sb.