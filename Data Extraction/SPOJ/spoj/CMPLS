(ispojProblem
SpojProblem
p0
(dp1
S'languages'
p2
VAll except: NODEJS PERL 6 VB.net
p3
sS'output'
p4
(lp5
VOutput For every test case, your program must print a single line containing C integer numbers, separated by a space. These numbers are the values completing the sequence according to the polynomial of the lowest possible degree. In other words, you are to print values Pmin(S+1), Pmin(S+2), .... Pmin(S+C). C P min min S P min min S P min min S C It is guaranteed that the results Pmin(S+i) will be non-negative and will fit into the standard integer type. P min min S i integer 
p6
asS'description'
p7
V You probably know those quizzes in Sunday magazines: given the sequence 1, 2, 3, 4, 5, what is the next number? Sometimes it is very easy to answer, sometimes it could be pretty hard. Because these "sequence problems" are very popular, ACM wants to implement them into the "Free Time" section of their new WAP portal. ACM programmers have noticed that some of the quizzes can be solved by describing the sequence by polynomials. For example, the sequence 1, 2, 3, 4, 5 can be easily understood as a trivial polynomial. The next number is 6. But even more complex sequences, like 1, 2, 4, 7, 11, can be described by a polynomial. In this case, 1/2.n2-1/2.n+1 can be used. Note that even if the members of the sequence are integers, polynomial coefficients may be any real numbers. n 2 n Polynomial is an expression in the following form:   P(n) = aD.nD+aD-1.nD-1+...+a1.n+a0 P n a D D n D D a D-1 D n D-1 D a 1 n a 0  If aD <> 0, the number D is called a degree of the polynomial. Note that constant function P(n) = C can be considered as polynomial of degree 0, and the zero function P(n) = 0 is usually defined to have degree -1. a D D D degree P n C P n  Input There is a single positive integer T on the first line of input (equal to about 5000). It stands for the number of test cases to follow. Each test case consists of two lines. First line of each test case contains two integer numbers S and C separated by a single space, 1 <= S < 100, 1 <= C < 100, (S+C) <= 100. The first number, S, stands for the length of the given sequence, the second number, C is the amount of numbers you are to find to complete the sequence. T S C S C S C S C The second line of each test case contains S integer numbers X1, X2, ... XS separated by a space. These numbers form the given sequence. The sequence can always be described by a polynomial P(n) such that for every i, Xi = P(i). Among these polynomials, we can find the polynomial Pmin with the lowest possible degree. This polynomial should be used for completing the sequence. S X 1 X 2 X S S P n i X i i P i P min min  Output For every test case, your program must print a single line containing C integer numbers, separated by a space. These numbers are the values completing the sequence according to the polynomial of the lowest possible degree. In other words, you are to print values Pmin(S+1), Pmin(S+2), .... Pmin(S+C). C P min min S P min min S P min min S C It is guaranteed that the results Pmin(S+i) will be non-negative and will fit into the standard integer type. P min min S i integer Example Sample Input: 4\u000a6 3\u000a1 2 3 4 5 6\u000a8 2\u000a1 2 4 7 11 16 22 29\u000a10 2\u000a1 1 1 1 1 1 1 1 1 2\u000a1 10\u000a3 4\u000a6 3\u000a1 2 3 4 5 6\u000a8 2\u000a1 2 4 7 11 16 22 29\u000a10 2\u000a1 1 1 1 1 1 1 1 1 2\u000a1 10\u000a3 Sample Output: 7 8 9\u000a37 46\u000a11 56\u000a3 3 3 3 3 3 3 3 3 3 7 8 9\u000a37 46\u000a11 56\u000a3 3 3 3 3 3 3 3 3 3 Warning: large Input/Output data, be careful with certain languages
p8
sS'tags'
p9
S''
p10
sS'url'
p11
Vhttp://www.spoj.com/problems/CMPLS
p12
sS'addedBy'
p13
Vadrian
p14
sS'memorylimit'
p15
V1536MB
p16
sS'cluster'
p17
VCube (Intel G860)
p18
sS'timelimit'
p19
V5s
p20
sS'statement'
p21
(lp22
V You probably know those quizzes in Sunday magazines: given the sequence 1, 2, 3, 4, 5, what is the next number? Sometimes it is very easy to answer, sometimes it could be pretty hard. Because these "sequence problems" are very popular, ACM wants to implement them into the "Free Time" section of their new WAP portal. ACM programmers have noticed that some of the quizzes can be solved by describing the sequence by polynomials. For example, the sequence 1, 2, 3, 4, 5 can be easily understood as a trivial polynomial. The next number is 6. But even more complex sequences, like 1, 2, 4, 7, 11, can be described by a polynomial. In this case, 1/2.n2-1/2.n+1 can be used. Note that even if the members of the sequence are integers, polynomial coefficients may be any real numbers. n 2 n Polynomial is an expression in the following form:   P(n) = aD.nD+aD-1.nD-1+...+a1.n+a0 P n a D D n D D a D-1 D n D-1 D a 1 n a 0  If aD <> 0, the number D is called a degree of the polynomial. Note that constant function P(n) = C can be considered as polynomial of degree 0, and the zero function P(n) = 0 is usually defined to have degree -1. a D D D degree P n C P n  
p23
asS'submissionSize'
p24
F0.0
sS'sourcelimit'
p25
VACM Central European Programming Contest, Prague 2000
p26
sS'date'
p27
V2004-05-08
p28
sS'input'
p29
(lp30
VInput There is a single positive integer T on the first line of input (equal to about 5000). It stands for the number of test cases to follow. Each test case consists of two lines. First line of each test case contains two integer numbers S and C separated by a single space, 1 <= S < 100, 1 <= C < 100, (S+C) <= 100. The first number, S, stands for the length of the given sequence, the second number, C is the amount of numbers you are to find to complete the sequence. T S C S C S C S C The second line of each test case contains S integer numbers X1, X2, ... XS separated by a space. These numbers form the given sequence. The sequence can always be described by a polynomial P(n) such that for every i, Xi = P(i). Among these polynomials, we can find the polynomial Pmin with the lowest possible degree. This polynomial should be used for completing the sequence. S X 1 X 2 X S S P n i X i i P i P min min  
p31
asS'constraints'
p32
g30
sS'id'
p33
c__builtin__
id
p34
sS'name'
p35
VCMPLS
p36
sb.